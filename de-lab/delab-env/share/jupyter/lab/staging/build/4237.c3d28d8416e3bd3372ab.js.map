{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/path-browserify/index.js","webpack://@jupyterlab/application-top/./node_modules/process/browser.js","webpack://@jupyterlab/application-top/./node_modules/querystringify/index.js","webpack://@jupyterlab/application-top/./node_modules/requires-port/index.js","webpack://@jupyterlab/application-top/./node_modules/url-parse/index.js"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","code","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","_format","sep","pathObject","dir","root","base","name","ext","posix","resolve","resolvedPath","resolvedAbsolute","cwd","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","parse","ret","delimiter","win32","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","this","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Array","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","has","Object","hasOwnProperty","undef","decode","input","decodeURIComponent","replace","encode","encodeURIComponent","querystring","query","parser","result","part","exec","key","value","querystringify","obj","prefix","pairs","isNaN","required","port","protocol","split","qs","slashes","protocolre","whitespace","left","RegExp","trimLeft","str","toString","rules","sanitize","address","NaN","ignore","hash","lolcation","loc","globalVar","window","g","self","location","finaldestination","type","Url","unescape","pathname","test","href","extractProtocol","match","toLowerCase","rest","last","unshift","up","splice","extracted","instruction","index","instructions","url","indexOf","charAt","hostname","host","username","password","auth","origin","set","fn","pop","char","ins"],"mappings":"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","file":"4237.c3d28d8416e3bd3372ab.js?v=c3d28d8416e3bd3372ab","sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:[\\\\/]+/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?([\\\\/]{1,})?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n\n  var match = protocolre.exec(address)\n    , protocol = match[1] ? match[1].toLowerCase() : ''\n    , slashes = !!(match[2] && match[2].length >= 2)\n    , rest =  match[2] && match[2].length === 1 ? '/' + match[3] : match[3];\n\n  return {\n    protocol: protocol,\n    slashes: slashes,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && url.hostname) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"],"sourceRoot":""}