{"version":3,"file":"Toolbar.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/Toolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { PageConfig, PathExt } from '@jupyterlab/coreutils';\nimport {\n  caretDownIcon,\n  caretUpIcon,\n  refreshIcon\n} from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport { Badge, Tab, Tabs } from '@material-ui/core';\nimport * as React from 'react';\nimport { classes } from 'typestyle';\nimport { Logger } from '../logger';\nimport {\n  selectedTabClass,\n  tabClass,\n  tabIndicatorClass,\n  tabsClass\n} from '../style/GitPanel';\nimport { branchIcon, desktopIcon, pullIcon, pushIcon } from '../style/icons';\nimport {\n  badgeClass,\n  spacer,\n  toolbarButtonClass,\n  toolbarClass,\n  toolbarMenuButtonClass,\n  toolbarMenuButtonEnabledClass,\n  toolbarMenuButtonIconClass,\n  toolbarMenuButtonSubtitleClass,\n  toolbarMenuButtonTitleClass,\n  toolbarMenuButtonTitleWrapperClass,\n  toolbarMenuWrapperClass,\n  toolbarNavClass\n} from '../style/Toolbar';\nimport { CommandIDs, Git, IGitExtension, Level } from '../tokens';\nimport { ActionButton } from './ActionButton';\nimport { BranchMenu } from './BranchMenu';\nimport { TagMenu } from './TagMenu';\nimport { TranslationBundle } from '@jupyterlab/translation';\n\n/**\n * Interface describing  properties.\n */\nexport interface IToolbarProps {\n  /**\n   * Current list of branches.\n   */\n  branches: Git.IBranch[];\n\n  /**\n   * Boolean indicating whether branching is disabled.\n   */\n  branching: boolean;\n\n  /**\n   * Jupyter App commands registry\n   */\n  commands: CommandRegistry;\n\n  /**\n   * Current branch name.\n   */\n  currentBranch: string;\n\n  /**\n   * Extension logger\n   */\n  logger: Logger;\n\n  /**\n   * Git extension data model.\n   */\n  model: IGitExtension;\n\n  /**\n   * Number of commits ahead\n   */\n  nCommitsAhead: number;\n\n  /**\n   * Number of commits behind\n   */\n  nCommitsBehind: number;\n\n  /**\n   * Current repository.\n   */\n  repository: string;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface IToolbarState {\n  /**\n   * Boolean indicating whether a branch menu is shown.\n   */\n  branchMenu: boolean;\n\n  /**\n   * Panel tab identifier.\n   */\n  tab: number;\n}\n\n/**\n * React component for rendering a panel toolbar.\n */\nexport class Toolbar extends React.Component<IToolbarProps, IToolbarState> {\n  /**\n   * Returns a React component for rendering a panel toolbar.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: IToolbarProps) {\n    super(props);\n    this.state = {\n      branchMenu: false,\n      tab: 0\n    };\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    return (\n      <div className={toolbarClass}>\n        {this._renderTopNav()}\n        {this._renderRepoMenu()}\n        {this._renderBranchMenu()}\n      </div>\n    );\n  }\n\n  /**\n   * Renders the top navigation.\n   *\n   * @returns React element\n   */\n  private _renderTopNav(): React.ReactElement {\n    const activeBranch = this.props.branches.filter(\n      branch => branch.is_current_branch\n    );\n    // FIXME whether the repository as a remote or not should be done through a call to `git remote`\n    const hasRemote = this.props.branches.some(\n      branch => branch.is_remote_branch\n    );\n    const hasUpstream = activeBranch[0]?.upstream !== null;\n\n    return (\n      <div className={toolbarNavClass}>\n        <span className={spacer} />\n        <Badge\n          className={badgeClass}\n          variant=\"dot\"\n          invisible={!hasRemote || this.props.nCommitsBehind === 0}\n          data-test-id=\"pull-badge\"\n        >\n          <ActionButton\n            className={toolbarButtonClass}\n            disabled={!hasRemote}\n            icon={pullIcon}\n            onClick={hasRemote ? this._onPullClick : undefined}\n            title={\n              hasRemote\n                ? this.props.trans.__('Pull latest changes') +\n                  (this.props.nCommitsBehind > 0\n                    ? this.props.trans.__(\n                        ' (behind by %1 commits)',\n                        this.props.nCommitsBehind\n                      )\n                    : '')\n                : this.props.trans.__('No remote repository defined')\n            }\n          />\n        </Badge>\n        <Badge\n          className={badgeClass}\n          variant=\"dot\"\n          invisible={\n            !hasRemote || (this.props.nCommitsAhead === 0 && hasUpstream)\n          }\n          data-test-id=\"push-badge\"\n        >\n          <ActionButton\n            className={toolbarButtonClass}\n            disabled={!hasRemote}\n            icon={pushIcon}\n            onClick={hasRemote ? this._onPushClick : undefined}\n            title={\n              hasRemote\n                ? hasUpstream\n                  ? this.props.trans.__('Push committed changes') +\n                    (this.props.nCommitsAhead > 0\n                      ? this.props.trans.__(\n                          ' (ahead by %1 commits)',\n                          this.props.nCommitsAhead\n                        )\n                      : '')\n                  : this.props.trans.__('Publish branch')\n                : this.props.trans.__('No remote repository defined')\n            }\n          />\n        </Badge>\n\n        <ActionButton\n          className={toolbarButtonClass}\n          icon={refreshIcon}\n          onClick={this._onRefreshClick}\n          title={this.props.trans.__(\n            'Refresh the repository to detect local and remote changes'\n          )}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Renders a repository menu.\n   *\n   * @returns React element\n   */\n  private _renderRepoMenu(): React.ReactElement {\n    const repositoryName =\n      PathExt.basename(\n        this.props.repository || PageConfig.getOption('serverRoot')\n      ) || 'Jupyter Server Root';\n    return (\n      <div className={toolbarMenuWrapperClass}>\n        <button\n          disabled\n          className={toolbarMenuButtonClass}\n          title={this.props.trans.__(\n            'Current repository: %1',\n            PageConfig.getOption('serverRoot') + '/' + this.props.repository\n          )}\n        >\n          <desktopIcon.react className={toolbarMenuButtonIconClass} />\n          <div className={toolbarMenuButtonTitleWrapperClass}>\n            <p className={toolbarMenuButtonTitleClass}>\n              {this.props.trans.__('Current Repository')}\n            </p>\n            <p className={toolbarMenuButtonSubtitleClass}>{repositoryName}</p>\n          </div>\n        </button>\n      </div>\n    );\n  }\n\n  /**\n   * Renders a branch menu.\n   *\n   * @returns React element\n   */\n  private _renderBranchMenu(): React.ReactElement | null {\n    if (this.props.model.pathRepository === null) {\n      return null;\n    }\n    return (\n      <div className={toolbarMenuWrapperClass}>\n        <button\n          className={classes(\n            toolbarMenuButtonClass,\n            toolbarMenuButtonEnabledClass\n          )}\n          title={this.props.trans.__('Manage branches and tags')}\n          onClick={this._onBranchClick}\n        >\n          <branchIcon.react className={toolbarMenuButtonIconClass} />\n          <div className={toolbarMenuButtonTitleWrapperClass}>\n            <p className={toolbarMenuButtonTitleClass}>\n              {this.props.trans.__('Current Branch')}\n            </p>\n            <p className={toolbarMenuButtonSubtitleClass}>\n              {this.props.currentBranch || ''}\n            </p>\n          </div>\n          {this.state.branchMenu ? (\n            <caretUpIcon.react className={toolbarMenuButtonIconClass} />\n          ) : (\n            <caretDownIcon.react className={toolbarMenuButtonIconClass} />\n          )}\n        </button>\n        {this.state.branchMenu ? this._renderTabs() : null}\n      </div>\n    );\n  }\n\n  private _renderTabs(): JSX.Element {\n    return (\n      <React.Fragment>\n        <Tabs\n          classes={{\n            root: tabsClass,\n            indicator: tabIndicatorClass\n          }}\n          value={this.state.tab}\n          onChange={(event: any, tab: number): void => {\n            this.setState({\n              tab: tab\n            });\n          }}\n        >\n          <Tab\n            classes={{\n              root: tabClass,\n              selected: selectedTabClass\n            }}\n            title={this.props.trans.__('View branches')}\n            label={this.props.trans.__('Branches')}\n            disableFocusRipple={true}\n            disableRipple={true}\n          ></Tab>\n          <Tab\n            classes={{\n              root: tabClass,\n              selected: selectedTabClass\n            }}\n            title={this.props.trans.__('View tags')}\n            label={this.props.trans.__('Tags')}\n            disableFocusRipple={true}\n            disableRipple={true}\n          ></Tab>\n        </Tabs>\n        {this.state.tab === 0 ? this._renderBranches() : this._renderTags()}\n      </React.Fragment>\n    );\n  }\n\n  private _renderBranches(): JSX.Element {\n    return (\n      <BranchMenu\n        currentBranch={this.props.currentBranch || ''}\n        branches={this.props.branches}\n        branching={this.props.branching}\n        commands={this.props.commands}\n        logger={this.props.logger}\n        model={this.props.model}\n        trans={this.props.trans}\n      />\n    );\n  }\n\n  private _renderTags(): JSX.Element {\n    return (\n      <TagMenu\n        logger={this.props.logger}\n        model={this.props.model}\n        branching={this.props.branching}\n        trans={this.props.trans}\n      ></TagMenu>\n    );\n  }\n\n  /**\n   * Callback invoked upon clicking a button to pull the latest changes.\n   *\n   * @param event - event object\n   * @returns a promise which resolves upon pulling the latest changes\n   */\n  private _onPullClick = async (): Promise<void> => {\n    await this.props.commands.execute(CommandIDs.gitPull);\n  };\n\n  /**\n   * Callback invoked upon clicking a button to push the latest changes.\n   *\n   * @param event - event object\n   * @returns a promise which resolves upon pushing the latest changes\n   */\n  private _onPushClick = async (): Promise<void> => {\n    await this.props.commands.execute(CommandIDs.gitPush);\n  };\n\n  /**\n   * Callback invoked upon clicking a button to change the current branch.\n   *\n   * @param event - event object\n   */\n  private _onBranchClick = (): void => {\n    // Toggle the branch menu:\n    this.setState({\n      branchMenu: !this.state.branchMenu\n    });\n  };\n\n  /**\n   * Callback invoked upon clicking a button to refresh the model.\n   *\n   * @param event - event object\n   * @returns a promise which resolves upon refreshing the model\n   */\n  private _onRefreshClick = async (): Promise<void> => {\n    this.props.logger.log({\n      level: Level.RUNNING,\n      message: this.props.trans.__('Refreshing…')\n    });\n    try {\n      await this.props.model.refresh();\n\n      this.props.logger.log({\n        level: Level.SUCCESS,\n        message: this.props.trans.__('Successfully refreshed.')\n      });\n    } catch (error) {\n      console.error(error);\n      this.props.logger.log({\n        level: Level.ERROR,\n        message: this.props.trans.__('Failed to refresh.'),\n        error\n      });\n    }\n  };\n}\n"]}