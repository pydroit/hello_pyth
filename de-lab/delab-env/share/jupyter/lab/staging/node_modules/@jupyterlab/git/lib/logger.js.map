{"version":3,"file":"logger.js","sourceRoot":"./@jupyterlab/git/src/","sources":["logger.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAW,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAGpD;;GAEG;AACH,MAAM,OAAO,MAAM;IACjB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACH,GAAG,CAAC,OAAoB;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CAGF;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAEnC;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { ILogMessage } from './tokens';\n\n/**\n * Logger\n */\nexport class Logger {\n  constructor() {\n    this._signal = new Signal(this);\n  }\n\n  /**\n   * Signal emitted when a log message is sent\n   */\n  get signal(): ISignal<Logger, ILogMessage> {\n    return this._signal;\n  }\n\n  /**\n   * Send a log message.\n   *\n   * @param message Log message\n   */\n  log(message: ILogMessage): void {\n    this._signal.emit(message);\n  }\n\n  private _signal: Signal<Logger, ILogMessage>;\n}\n\n/**\n * Default logger\n */\nexport const logger = new Logger();\n\n/**\n * Default logger context for React\n */\nexport const LoggerContext = React.createContext(logger);\n"]}