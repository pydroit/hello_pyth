{"version":3,"file":"ManageRemoteDialogue.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/ManageRemoteDialogue.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { showErrorMessage } from '@jupyterlab/apputils';\nimport { ActionButton } from './ActionButton';\nimport { Git } from '../tokens';\nimport { GitExtension } from '../model';\nimport { classes } from 'typestyle';\nimport {\n  remoteDialogClass,\n  remoteDialogInputClass,\n  existingRemoteWrapperClass,\n  existingRemoteGridClass,\n  actionsWrapperClass\n} from '../style/ManageRemoteDialog';\nimport {\n  buttonClass,\n  closeButtonClass,\n  contentWrapperClass,\n  createButtonClass,\n  titleClass,\n  titleWrapperClass\n} from '../style/NewBranchDialog';\nimport { trashIcon } from '../style/icons';\n\nexport interface IManageRemoteDialogueProps {\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n  /**\n   * Warning content.\n   */\n  warningContent?: string;\n  /**\n   * Git extension model\n   */\n  model: GitExtension;\n  /**\n   * Callback to handle the closing of dialogue\n   */\n  onClose: () => void;\n}\n\nexport interface IManageRemoteDialogueState {\n  /**\n   * New remote name and url pair\n   */\n  newRemote: Git.IGitRemote;\n  /**\n   * List of known remotes\n   */\n  existingRemotes: Git.IGitRemote[] | null;\n}\n\nexport class ManageRemoteDialogue extends React.Component<\n  IManageRemoteDialogueProps,\n  IManageRemoteDialogueState\n> {\n  constructor(props: IManageRemoteDialogueProps) {\n    super(props);\n    this.state = {\n      newRemote: {\n        name: '',\n        url: ''\n      },\n      existingRemotes: null\n    };\n  }\n\n  async componentDidMount(): Promise<void> {\n    try {\n      const remotes = await this.props.model.getRemotes();\n      this.setState({ existingRemotes: remotes });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <Dialog\n        classes={{\n          paper: remoteDialogClass\n        }}\n        open={true}\n        onClose={this.props.onClose}\n      >\n        <div className={titleWrapperClass}>\n          <p className={titleClass}>{this.props.trans.__('Manage Remotes')}</p>\n          <button className={closeButtonClass}>\n            <ClearIcon\n              titleAccess={this.props.trans.__('Close this dialog')}\n              fontSize=\"small\"\n              onClick={() => this.props.onClose()}\n            />\n          </button>\n        </div>\n        <div className={contentWrapperClass}>\n          <label className={remoteDialogInputClass}>\n            <span>\n              {this.props.trans.__(\n                'Enter a new remote repository name and URL'\n              )}\n            </span>\n            <input\n              ref={node => {\n                this._nameInput = node;\n              }}\n              type=\"text\"\n              placeholder={this.props.trans.__('name')}\n              onChange={event =>\n                this.setState({\n                  newRemote: {\n                    ...this.state.newRemote,\n                    name: event.target.value\n                  }\n                })\n              }\n            />\n            <input\n              ref={node => {\n                this._urlInput = node;\n              }}\n              type=\"text\"\n              placeholder={this.props.trans.__('Remote Git repository URL')}\n              onChange={event =>\n                this.setState({\n                  newRemote: {\n                    ...this.state.newRemote,\n                    url: event.target.value\n                  }\n                })\n              }\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  this._addRemoteButton.click();\n                }\n              }}\n            />\n          </label>\n\n          {this.props.warningContent && (\n            <div className=\"jp-RemoteDialog-warning\">\n              {this.props.warningContent}\n            </div>\n          )}\n\n          <DialogActions className={actionsWrapperClass}>\n            <input\n              ref={btn => {\n                this._addRemoteButton = btn;\n              }}\n              className={classes(buttonClass, createButtonClass)}\n              type=\"button\"\n              title={this.props.trans.__('Add Remote')}\n              value={this.props.trans.__('Add')}\n              onClick={async () => {\n                const { name, url } = this.state.newRemote;\n                try {\n                  await this.props.model.addRemote(url, name);\n                  this._nameInput.value = '';\n                  this._urlInput.value = '';\n                  this.setState(prevState => ({\n                    existingRemotes: [\n                      ...prevState.existingRemotes,\n                      prevState.newRemote\n                    ],\n                    newRemote: { name: '', url: '' }\n                  }));\n                } catch (error) {\n                  console.error(error);\n                  showErrorMessage(\n                    this.props.trans.__('Error when adding remote repository'),\n                    error\n                  );\n                }\n              }}\n              disabled={!this.state.newRemote.name || !this.state.newRemote.url}\n            />\n          </DialogActions>\n\n          <div className={existingRemoteWrapperClass}>\n            <p>{this.props.trans.__('Existing Remotes:')}</p>\n\n            {this.state.existingRemotes === null ? (\n              <p>Loading remote repositories...</p>\n            ) : this.state.existingRemotes.length > 0 ? (\n              <div className={existingRemoteGridClass}>\n                {this.state.existingRemotes.map((remote, index) => (\n                  <React.Fragment key={`remote-${index}`}>\n                    <span>{remote.name}</span>\n                    <span>{remote.url}</span>\n                    <ActionButton\n                      icon={trashIcon}\n                      title={this.props.trans.__('Remove this remote')}\n                      onClick={async () => {\n                        await this.props.model.removeRemote(remote.name);\n                        this.setState({\n                          existingRemotes: this.state.existingRemotes.filter(\n                            r => r.name !== remote.name\n                          )\n                        });\n                      }}\n                    />\n                  </React.Fragment>\n                ))}\n              </div>\n            ) : (\n              <p> This repository does not have any remote. </p>\n            )}\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private _nameInput: HTMLInputElement;\n  private _urlInput: HTMLInputElement;\n  private _addRemoteButton: HTMLInputElement;\n}\n"]}