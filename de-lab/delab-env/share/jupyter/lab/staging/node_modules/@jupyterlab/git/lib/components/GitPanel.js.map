{"version":3,"file":"GitPanel.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/GitPanel.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAMhD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,GAAG,MAAM,uBAAuB,CAAC;AACxC,OAAO,IAAI,MAAM,wBAAwB,CAAC;AAC1C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EACL,iBAAiB,EACjB,eAAe,EACf,gBAAgB,EAChB,QAAQ,EACR,iBAAiB,EACjB,SAAS,EACT,gBAAgB,EACjB,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,UAAU,EAAE,GAAG,EAAe,KAAK,EAAE,MAAM,WAAW,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AACxC,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,cAAc,IAAI,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAqH1E;;GAEG;AACH,MAAM,OAAO,QAAS,SAAQ,KAAK,CAAC,SAAyC;IAC3E;;;;;OAKG;IACH,YAAY,KAAqB;QAC/B,KAAK,CAAC,KAAK,CAAC,CAAC;QAkFf,oBAAe,GAAG,KAAK,IAAmB,EAAE;YAC1C,IAAI,CAAC,QAAQ,CAAC;gBACZ,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ;aACpC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,yBAAoB,GAAG,KAAK,IAAmB,EAAE;YAC/C,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAE3C,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;gBAC5D,eAAe,EAAE,IAAI;gBACrB,gBAAgB,EAAE,IAAI;aACvB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,mBAAc,GAAG,KAAK,IAAmB,EAAE;YACzC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,KAAK,IAAI,EAAE;gBAC5C,iCAAiC;gBACjC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CACxC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAW,CACxD,CAAC;gBACF,IAAI,WAAW,GAAG,IAAI,KAAK,EAAyB,CAAC;gBACrD,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;oBACtB,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;iBAC/B;gBAED,IAAI,CAAC,QAAQ,CAAC;oBACZ,WAAW,EAAE,WAAW;iBACzB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF;;WAEG;QACH,gBAAW,GAAG,KAAK,IAAmB,EAAE;YACtC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,KAAK,IAAI,EAAE;gBAC5C,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC7B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;aAC7B;QACH,CAAC,CAAC;QAEF;;;;WAIG;QACH,gBAAW,GAAG,KAAK,IAAmB,EAAE;YACtC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;YAEnC,wCAAwC;YACxC,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;gBAChC,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC1D;YAED,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACnC,OAAO;aACR;YAED,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC;gBAC3D,CAAC,CAAC,IAAI,CAAC,kBAAkB;gBACzB,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAE5B,IAAI;gBACF,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBAC1B,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;iBACpB;qBAAM;oBACL,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC;iBACnB;gBAED,yCAAyC;gBACzC,IAAI,CAAC,QAAQ,CAAC;oBACZ,aAAa,EAAE,EAAE;oBACjB,iBAAiB,EAAE,EAAE;iBACtB,CAAC,CAAC;aACJ;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;QACH,CAAC,CAAC;QAkSF;;;;;WAKG;QACK,iBAAY,GAAG,CAAC,KAAU,EAAE,GAAW,EAAQ,EAAE;YACvD,IAAI,GAAG,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;YACD,IAAI,CAAC,QAAQ,CAAC;gBACZ,GAAG,EAAE,GAAG;aACT,CAAC,CAAC;QACL,CAAC,CAAC;QAEF;;;;WAIG;QACK,0BAAqB,GAAG,CAAC,WAAmB,EAAQ,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC;gBACZ,iBAAiB,EAAE,WAAW;aAC/B,CAAC,CAAC;QACL,CAAC,CAAC;QAEF;;;;WAIG;QACK,sBAAiB,GAAG,CAAC,OAAe,EAAQ,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,OAAO;aACvB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF;;;;WAIG;QACK,oBAAe,GAAG,CAAC,KAAc,EAAQ,EAAE;YACjD,IAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,KAAK;aACnB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF;;;;;WAKG;QACK,uBAAkB,GAAG,KAAK,EAAE,OAAe,EAAiB,EAAE;YACpE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;gBACpB,KAAK,EAAE,KAAK,CAAC,OAAO;gBACpB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC;aACjD,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC/B,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtE,MAAM,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF;;;;;WAKG;QACK,uBAAkB,GAAG,KAAK,EAAE,OAAgB,EAAiB,EAAE;YACrE,MAAM,QAAQ,GAAgB;gBAC5B,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,2BAA2B,CAAC;aAC1D,CAAC;YAEF,IAAI;gBACF,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAEzD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,KAAK,EAAE,KAAK,CAAC,OAAO;oBACpB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,uBAAuB,CAAC;iBACtD,CAAC,CAAC;gBAEH,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBAC1B,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC3C;qBAAM;oBACL,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACxC;gBAED,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;oBACpB,KAAK,EAAE,KAAK,CAAC,OAAO;oBACpB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC;iBACnD,CAAC,CAAC;gBAEH,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAC9C,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAClC,CAAC;gBAEF,wCAAwC;gBACxC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,SAAS,EAAE;oBAC/D,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACvD;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,iCAAM,QAAQ,KAAE,KAAK,IAAG,CAAC;gBAC9C,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CAAC;QA+EM,sBAAiB,GAAW,IAAI,CAAC;QA7nBvC,MAAM,EACJ,QAAQ,EACR,aAAa,EACb,cAAc,EACd,aAAa,EAAE,mBAAmB,EACnC,GAAG,KAAK,CAAC,KAAK,CAAC;QAEhB,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,QAAQ;YAClB,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;YAC5D,KAAK,EAAE,EAAE;YACT,kBAAkB,EAAE,EAAE;YACtB,aAAa,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC;YACjB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,cAAc;YAC1B,GAAG,EAAE,CAAC;YACN,aAAa,EAAE,EAAE;YACjB,iBAAiB,EAAE,EAAE;YACrB,WAAW,EAAE,KAAK;YAClB,aAAa,EAAE,mBAAmB;YAClC,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;SACvB,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,IAAI,CAAC,QAAQ;gBACzB,eAAe,EAAE,IAAI;gBACrB,gBAAgB,EAAE,IAAI;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YACrC,MAAM,kBAAkB,GACtB,MAAM,KAAK,CAAC,kBAAkB,EAAE,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;gBACzB,kBAAkB,EAAE,kBAAkB;gBACtC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;gBACjC,cAAc,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM;aACpC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YACvC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YACnC,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,CAAC,0BAA0B,CAAC,OAAO,CAAC,GAAG,EAAE;YAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAEjD,KAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;YAChD,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,IAAI;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,+BAA+B;QAC/B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAmFD;;;;OAIG;IACH,MAAM;QACJ,OAAO,CACL,6BAAK,SAAS,EAAE,iBAAiB,IAC9B,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,CAChC,oBAAC,KAAK,CAAC,QAAQ;YACZ,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,WAAW,EAAE,CACJ,CAClB,CAAC,CAAC,CAAC,CACF,IAAI,CAAC,cAAc,EAAE,CACtB,CACG,CACP,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,cAAc;QACpB,MAAM,gBAAgB,GAAG,OAAO,CAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,0BAA0B,CAAC;YACvD,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,CACrD,CAAC;QACF,OAAO,CACL,oBAAC,OAAO,IACN,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EACvC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,SAAS,EAAE,CAAC,gBAAgB,EAC5B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EACvC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EACzC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EACvC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GACvB,CACH,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,WAAW;QACjB,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;YACZ,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CACtD,CAClB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,WAAW;QACjB,OAAO,CACL,oBAAC,IAAI,IACH,OAAO,EAAE;gBACP,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,iBAAiB;aAC7B,EACD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EACrB,QAAQ,EAAE,IAAI,CAAC,YAAY;YAE3B,oBAAC,GAAG,IACF,OAAO,EAAE;oBACP,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,gBAAgB;iBAC3B,EACD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAChD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,EACrC,kBAAkB,EAAE,IAAI,EACxB,aAAa,EAAE,IAAI,GACnB;YACF,oBAAC,GAAG,IACF,OAAO,EAAE;oBACP,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,gBAAgB;iBAC3B,EACD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAqB,CAAC,EACjD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,EACrC,kBAAkB,EAAE,IAAI,EACxB,aAAa,EAAE,IAAI,GACnB,CACG,CACR,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,cAAc;QACpB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAC9C,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAClC,CAAC;QACF,MAAM,aAAa,GAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAa,IAAI,SAAS,CAAC;QAC3E,MAAM,WAAW,GAAG,aAAa;YAC/B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;gBACtB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,yBAAyB,CAAC;gBAChD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,iBAAiB,CAAC;YAC1C,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW;gBACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAChD,eAAe,CACL,CAAC;QACb,MAAM,cAAc,GAAG,YAAY;YACjC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CACjB,0FAA0F,CAC3F;YACH,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CACjB,0GAA0G,CAC3G,CAAC;QACN,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;YACb,oBAAC,QAAQ,IACP,KAAK,EAAE,IAAI,CAAC,YAAY,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GACvB;YACF,oBAAC,SAAS,IACR,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,QAAQ,EACN,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,EAErE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,KAAK,EAAE,WAAW,EAClB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,EACjC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACzC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAC7B,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAClC,cAAc,EAAE,IAAI,CAAC,qBAAqB,EAC1C,QAAQ,EAAE,IAAI,CAAC,eAAe,EAC9B,QAAQ,EAAE,IAAI,CAAC,WAAW,EAC1B,OAAO,EACL,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAC1B,oBAAC,UAAU,IACT,UAAU,EAAE,oBAAC,kBAAkB,OAAG,EAClC,KAAK,EAAE,YAAY,EACnB,OAAO,EAAE,cAAc,GACvB,CACH,GAEH,CACa,CAClB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,cAAc;QACpB,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;YACb,oBAAC,cAAc,IACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAC/B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC7C,kBAAkB,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;oBAC1C,KAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE;wBAC9C,IAAI,CAAC,yBAAyB,CAC5B,KAAoD,CACrD,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACL,CAAC,EACD,qBAAqB,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;oBAC7C,KAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,IAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE;wBAC/C,IAAI,CAAC,yBAAyB,CAC5B,KAAoD,CACrD,CAAC;oBACJ,CAAC,CAAC,CAAC;gBACL,CAAC,GACD;YACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,KAAK,IAAI;gBAC5C,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAC7D,oBAAC,mBAAmB,IAClB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CACzB,mBAAmB,EACnB,IAAI,CAAC,KAAK,CAAC,eAAe;oBACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBACnD,CAAC,CAAC,KAAK,EACT,IAAI,CAAC,KAAK,CAAC,gBAAgB;oBACzB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBACpD,CAAC,CAAC,KAAK,CACV,EACD,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC7C,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,OAAO,EAAE,KAAK,CAAC,EAAE;oBACf,KAAK,CAAC,eAAe,EAAE,CAAC;oBACxB,IAAI,CAAC,QAAQ,CAAC;wBACZ,eAAe,EAAE,IAAI;wBACrB,gBAAgB,EAAE,IAAI;qBACvB,CAAC,CAAC;gBACL,CAAC,EACD,UAAU,EACR,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB;oBACvD,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC/B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC3B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC3B;oBACH,CAAC,CAAC,SAAS,GAEf,CACH,CACY,CAClB,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,cAAc;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;QACzC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEhC,OAAO,CACL,oBAAC,KAAK,CAAC,QAAQ;YACb,6BAAK,SAAS,EAAE,gBAAgB;gBAC7B,IAAI,CAAC,CAAC,CAAC,CACN,oBAAC,KAAK,CAAC,QAAQ;oBACb,2BAAG,KAAK,EAAE,IAAI,IAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAK;oBAAC,GAAG;oBAC/C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,CACf,CAClB,CAAC,CAAC,CAAC,CACF,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAChD;gBACA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAClB,+HAA+H,CAChI,CACG;YACN,gCACE,SAAS,EAAE,eAAe,EAC1B,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAEzD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,sBAAsB,CAAC,CACrC;YACT,gCACE,SAAS,EAAE,eAAe,EAC1B,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,IAElD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,yBAAyB,CAAC,CACxC;YACR,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAC3C,gCACE,SAAS,EAAE,eAAe,EAC1B,OAAO,EAAE,KAAK,IAAI,EAAE;oBAClB,MAAM,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBAC5C,MAAM,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBACpD,CAAC,IAEA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,CACnC,CACV,CACc,CAClB,CAAC;IACJ,CAAC;IAgHD;;;;OAIG;IACK,KAAK,CAAC,YAAY,CAAC,IAAY;QACrC,0DAA0D;QAC1D,IAAI,IAAI,KAAK,IAAI,CAAC,iBAAiB,EAAE;YACnC,IAAI;gBACF,MAAM,IAAI,GAAe,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAQ,CAAC;gBAClE,MAAM,OAAO,GAAe,IAAI,CAAC,SAAS,CAAe,CAAC;gBAC1D,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAElC,gEAAgE;gBAChE,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;oBACnE,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC;wBAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC;wBAChD,IAAI,EAAE,IAAI,aAAa,EAAE;qBAC1B,CAAC,CAAC;oBAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;wBACzB,MAAM,IAAI,KAAK,CACb,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,+BAA+B,CAAC,CACrD,CAAC;qBACH;oBAED,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;oBACrC,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC5B,WAAW,EAAE,IAAI;wBACjB,YAAY,EAAE,KAAK;qBACpB,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC/B;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,KAAK,YAAY,GAAG,CAAC,gBAAgB,EAAE;oBACzC,MAAM,KAAK,CAAC;iBACb;gBAED,MAAM,IAAI,KAAK,CACb,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,iCAAiC,EAAE,KAAK,CAAC,OAAO,CAAC,CACtE,CAAC;aACH;SACF;IACH,CAAC;IAEO,cAAc;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,kBAAkB,CACvE,CAAC;IACJ,CAAC;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAC1B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,kBAAkB,CACzE,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,IAAY,YAAY;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACH,IAAY,YAAY;QACtB,MAAM,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACjD,IAAI,MAAM,GAAsB,KAAK,CAAC;QACtC,IAAI,kBAAkB,EAAE;YACtB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SAC5C;QACD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC;IAChB,CAAC;IAID;;OAEG;IACK,KAAK,CAAC,aAAa,CACzB,OAAuC;QAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAC/B,2FAA2F,EAC3F,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAC/B,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC;YACxB,KAAK;YACL,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC;YAC7D,OAAO,EAAE;gBACP,MAAM,CAAC,YAAY,CAAC;oBAClB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,0BAA0B,CAAC;iBACvD,CAAC;gBACF,MAAM,CAAC,UAAU,CAAC;oBAChB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC;oBAClC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,6BAA6B,CAAC;iBAC5D,CAAC;aACH;SACF,CAAC,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,EAAE,CAAC;QACrC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;YACxB,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SAC3D;IACH,CAAC;IAED;;OAEG;IACK,WAAW,CACjB,eAAkC,EAClC,eAAkC,EAAE;QAEpC,MAAM,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC9C,OAAO,4BAAI,GAAG,EAAE,QAAQ,IAAG,QAAQ,CAAM,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,GAAgB,gCAAK,WAAW,CAAM,CAAC;QAC/C,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CACnC,yCAAyC,CAC1C,CAAC;YACF,MAAM,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAqB,EAAE,EAAE;gBACpE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC9C,OAAO,4BAAI,GAAG,EAAE,QAAQ,IAAG,QAAQ,CAAM,CAAC;YAC5C,CAAC,CAAC,CAAC;YACH,MAAM,IAAI,GAAgB,CACxB;gBACG,IAAI;gBACJ,SAAS;gBACV,gCAAK,kBAAkB,CAAM,CACzB,CACP,CAAC;YACF,IAAI,GAAG,IAAI,CAAC;SACb;QACD,OAAO,iCAAM,IAAI,CAAO,CAAC;IAC3B,CAAC;IAED;;OAEG;IACK,yBAAyB,CAC/B,KAAkD;QAElD,IACE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB;YACpC,IAAI,CAAC,KAAK,CAAC,eAAe;YAC1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC3B;YACA,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC/B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAC3B,IAAI,CAAC,KAAK,CAAC,eAAe,CAC3B,CACC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE,EACvC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,SAAS,CAChD,CAAC,KAAK,CAAC,CAAC;SACV;IACH,CAAC;CACF","sourcesContent":["import { showDialog, Dialog } from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { FileBrowserModel } from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { CommandRegistry } from '@lumino/commands';\nimport { JSONObject } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport * as React from 'react';\nimport { Logger } from '../logger';\nimport { GitExtension } from '../model';\nimport {\n  panelWrapperClass,\n  repoButtonClass,\n  selectedTabClass,\n  tabClass,\n  tabIndicatorClass,\n  tabsClass,\n  warningTextClass\n} from '../style/GitPanel';\nimport { CommandIDs, Git, ILogMessage, Level } from '../tokens';\nimport { openFileDiff } from '../utils';\nimport { GitAuthorForm } from '../widgets/AuthorBox';\nimport { CommitBox } from './CommitBox';\nimport { CommitComparisonBox } from './CommitComparisonBox';\nimport { FileList } from './FileList';\nimport { HistorySideBar } from './HistorySideBar';\nimport { Toolbar } from './Toolbar';\nimport { WarningBox } from './WarningBox';\nimport { WarningRounded as WarningRoundedIcon } from '@material-ui/icons';\n\n/**\n * Interface describing component properties.\n */\nexport interface IGitPanelProps {\n  /**\n   * Jupyter App commands registry\n   */\n  commands: CommandRegistry;\n\n  /**\n   * File browser model.\n   */\n  filebrowser: FileBrowserModel;\n\n  /**\n   * Extension logger\n   */\n  logger: Logger;\n\n  /**\n   * Git extension data model.\n   */\n  model: GitExtension;\n\n  /**\n   * Git extension settings.\n   */\n  settings: ISettingRegistry.ISettings;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface IGitPanelState {\n  /**\n   * Git path repository\n   */\n  repository: string | null;\n\n  /**\n   * List of branches.\n   */\n  branches: Git.IBranch[];\n\n  /**\n   * Current branch.\n   */\n  currentBranch: string;\n\n  /**\n   * List of changed files.\n   */\n  files: Git.IStatusFile[];\n\n  /**\n   * List of files changed on remote branch\n   */\n  remoteChangedFiles: Git.IStatusFile[];\n\n  /**\n   * Number of commits ahead\n   */\n  nCommitsAhead: number;\n\n  /**\n   * Number of commits behind\n   */\n  nCommitsBehind: number;\n\n  /**\n   * List of prior commits.\n   */\n  pastCommits: Git.ISingleCommitInfo[];\n\n  /**\n   * Panel tab identifier.\n   */\n  tab: number;\n\n  /**\n   * Commit message summary.\n   */\n  commitSummary: string;\n\n  /**\n   * Commit message description.\n   */\n  commitDescription: string;\n\n  /**\n   * Amend option toggle\n   */\n  commitAmend: boolean;\n\n  /**\n   * Whether there are dirty (e.g., unsaved) staged files.\n   */\n  hasDirtyFiles: boolean;\n\n  /**\n   * The commit to compare against\n   */\n  referenceCommit: Git.ISingleCommitInfo | null;\n\n  /**\n   * The commit to compare\n   */\n  challengerCommit: Git.ISingleCommitInfo | null;\n}\n\n/**\n * React component for rendering a panel for performing Git operations.\n */\nexport class GitPanel extends React.Component<IGitPanelProps, IGitPanelState> {\n  /**\n   * Returns a React component for rendering a panel for performing Git operations.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: IGitPanelProps) {\n    super(props);\n    const {\n      branches,\n      currentBranch,\n      pathRepository,\n      hasDirtyFiles: hasDirtyStagedFiles\n    } = props.model;\n\n    this.state = {\n      branches: branches,\n      currentBranch: currentBranch ? currentBranch.name : 'master',\n      files: [],\n      remoteChangedFiles: [],\n      nCommitsAhead: 0,\n      nCommitsBehind: 0,\n      pastCommits: [],\n      repository: pathRepository,\n      tab: 0,\n      commitSummary: '',\n      commitDescription: '',\n      commitAmend: false,\n      hasDirtyFiles: hasDirtyStagedFiles,\n      referenceCommit: null,\n      challengerCommit: null\n    };\n  }\n\n  /**\n   * Callback invoked immediately after mounting a component (i.e., inserting into a tree).\n   */\n  componentDidMount(): void {\n    const { model, settings } = this.props;\n\n    model.repositoryChanged.connect((_, args) => {\n      this.setState({\n        repository: args.newValue,\n        referenceCommit: null,\n        challengerCommit: null\n      });\n      this.refreshView();\n    }, this);\n    model.statusChanged.connect(async () => {\n      const remotechangedFiles: Git.IStatusFile[] =\n        await model.remoteChangedFiles();\n      this.setState({\n        files: model.status.files,\n        remoteChangedFiles: remotechangedFiles,\n        nCommitsAhead: model.status.ahead,\n        nCommitsBehind: model.status.behind\n      });\n    }, this);\n    model.branchesChanged.connect(async () => {\n      await this.refreshBranches();\n    }, this);\n    model.headChanged.connect(async () => {\n      await this.refreshCurrentBranch();\n      if (this.state.tab === 1) {\n        this.refreshHistory();\n      }\n    }, this);\n    model.selectedHistoryFileChanged.connect(() => {\n      this.setState({ tab: 1 });\n      this.refreshHistory();\n    }, this);\n    model.notifyRemoteChanges.connect((_, args) => {\n      this.warningDialog(args);\n    }, this);\n\n    settings.changed.connect(this.refreshView, this);\n\n    model.dirtyFilesStatusChanged.connect((_, args) => {\n      this.setState({\n        hasDirtyFiles: args\n      });\n    });\n  }\n\n  componentWillUnmount(): void {\n    // Clear all signal connections\n    Signal.clearData(this);\n  }\n\n  refreshBranches = async (): Promise<void> => {\n    this.setState({\n      branches: this.props.model.branches\n    });\n  };\n\n  refreshCurrentBranch = async (): Promise<void> => {\n    const { currentBranch } = this.props.model;\n\n    this.setState({\n      currentBranch: currentBranch ? currentBranch.name : 'master',\n      referenceCommit: null,\n      challengerCommit: null\n    });\n  };\n\n  refreshHistory = async (): Promise<void> => {\n    if (this.props.model.pathRepository !== null) {\n      // Get git log for current branch\n      const logData = await this.props.model.log(\n        this.props.settings.composite['historyCount'] as number\n      );\n      let pastCommits = new Array<Git.ISingleCommitInfo>();\n      if (logData.code === 0) {\n        pastCommits = logData.commits;\n      }\n\n      this.setState({\n        pastCommits: pastCommits\n      });\n    }\n  };\n\n  /**\n   * Refresh widget, update all content\n   */\n  refreshView = async (): Promise<void> => {\n    if (this.props.model.pathRepository !== null) {\n      await this.refreshBranches();\n      await this.refreshHistory();\n    }\n  };\n\n  /**\n   * Commits files.\n   *\n   * @returns a promise which commits changes\n   */\n  commitFiles = async (): Promise<void> => {\n    let msg = this.state.commitSummary;\n\n    // Only include description if not empty\n    if (this.state.commitDescription) {\n      msg = msg + '\\n\\n' + this.state.commitDescription + '\\n';\n    }\n\n    if (!msg && !this.state.commitAmend) {\n      return;\n    }\n\n    const commit = this.props.settings.composite['simpleStaging']\n      ? this._commitMarkedFiles\n      : this._commitStagedFiles;\n\n    try {\n      if (this.state.commitAmend) {\n        await commit(null);\n      } else {\n        await commit(msg);\n      }\n\n      // Only erase commit message upon success\n      this.setState({\n        commitSummary: '',\n        commitDescription: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    return (\n      <div className={panelWrapperClass}>\n        {this.state.repository !== null ? (\n          <React.Fragment>\n            {this._renderToolbar()}\n            {this._renderMain()}\n          </React.Fragment>\n        ) : (\n          this._renderWarning()\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Renders a toolbar.\n   *\n   * @returns React element\n   */\n  private _renderToolbar(): React.ReactElement {\n    const disableBranching = Boolean(\n      this.props.settings.composite['disableBranchWithChanges'] &&\n        (this._hasUnStagedFile() || this._hasStagedFile())\n    );\n    return (\n      <Toolbar\n        currentBranch={this.state.currentBranch}\n        branches={this.state.branches}\n        branching={!disableBranching}\n        commands={this.props.commands}\n        logger={this.props.logger}\n        model={this.props.model}\n        nCommitsAhead={this.state.nCommitsAhead}\n        nCommitsBehind={this.state.nCommitsBehind}\n        repository={this.state.repository || ''}\n        trans={this.props.trans}\n      />\n    );\n  }\n\n  /**\n   * Renders the main panel.\n   *\n   * @returns React element\n   */\n  private _renderMain(): React.ReactElement {\n    return (\n      <React.Fragment>\n        {this._renderTabs()}\n        {this.state.tab === 1 ? this._renderHistory() : this._renderChanges()}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Renders panel tabs.\n   *\n   * @returns React element\n   */\n  private _renderTabs(): React.ReactElement {\n    return (\n      <Tabs\n        classes={{\n          root: tabsClass,\n          indicator: tabIndicatorClass\n        }}\n        value={this.state.tab}\n        onChange={this._onTabChange}\n      >\n        <Tab\n          classes={{\n            root: tabClass,\n            selected: selectedTabClass\n          }}\n          title={this.props.trans.__('View changed files')}\n          label={this.props.trans.__('Changes')}\n          disableFocusRipple={true}\n          disableRipple={true}\n        />\n        <Tab\n          classes={{\n            root: tabClass,\n            selected: selectedTabClass\n          }}\n          title={this.props.trans.__('View commit history')}\n          label={this.props.trans.__('History')}\n          disableFocusRipple={true}\n          disableRipple={true}\n        />\n      </Tabs>\n    );\n  }\n\n  /**\n   * Renders a panel for viewing and committing file changes.\n   *\n   * @returns React element\n   */\n  private _renderChanges(): React.ReactElement {\n    const hasRemote = this.props.model.branches.some(\n      branch => branch.is_remote_branch\n    );\n    const commitAndPush =\n      (this.props.settings.composite['commitAndPush'] as boolean) && hasRemote;\n    const buttonLabel = commitAndPush\n      ? this.state.commitAmend\n        ? this.props.trans.__('Commit (Amend) and Push')\n        : this.props.trans.__('Commit and Push')\n      : this.state.commitAmend\n      ? this.props.trans.__('Commit (Amend)')\n      : this.props.trans.__('Commit');\n    const warningTitle = this.props.trans.__('Warning');\n    const inSimpleMode = this.props.settings.composite[\n      'simpleStaging'\n    ] as boolean;\n    const warningContent = inSimpleMode\n      ? this.props.trans.__(\n          'You have unsaved tracked files. You probably want to save all changes before committing.'\n        )\n      : this.props.trans.__(\n          'You have unsaved staged files. You probably want to save and stage all needed changes before committing.'\n        );\n    return (\n      <React.Fragment>\n        <FileList\n          files={this._sortedFiles}\n          model={this.props.model}\n          commands={this.props.commands}\n          settings={this.props.settings}\n          trans={this.props.trans}\n        />\n        <CommitBox\n          commands={this.props.commands}\n          hasFiles={\n            inSimpleMode ? this._markedFiles.length > 0 : this._hasStagedFile()\n          }\n          trans={this.props.trans}\n          label={buttonLabel}\n          summary={this.state.commitSummary}\n          description={this.state.commitDescription}\n          amend={this.state.commitAmend}\n          setSummary={this._setCommitSummary}\n          setDescription={this._setCommitDescription}\n          setAmend={this._setCommitAmend}\n          onCommit={this.commitFiles}\n          warning={\n            this.state.hasDirtyFiles && (\n              <WarningBox\n                headerIcon={<WarningRoundedIcon />}\n                title={warningTitle}\n                content={warningContent}\n              />\n            )\n          }\n        />\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Renders a panel for viewing commit history.\n   *\n   * @returns React element\n   */\n  private _renderHistory(): React.ReactElement {\n    return (\n      <React.Fragment>\n        <HistorySideBar\n          branches={this.state.branches}\n          commits={this.state.pastCommits}\n          model={this.props.model}\n          commands={this.props.commands}\n          trans={this.props.trans}\n          referenceCommit={this.state.referenceCommit}\n          challengerCommit={this.state.challengerCommit}\n          onSelectForCompare={commit => async event => {\n            event.stopPropagation();\n            this.setState({ referenceCommit: commit }, () => {\n              this._openSingleFileComparison(\n                event as React.MouseEvent<HTMLLIElement, MouseEvent>\n              );\n            });\n          }}\n          onCompareWithSelected={commit => async event => {\n            event.stopPropagation();\n            this.setState({ challengerCommit: commit }, () => {\n              this._openSingleFileComparison(\n                event as React.MouseEvent<HTMLLIElement, MouseEvent>\n              );\n            });\n          }}\n        />\n        {this.props.model.selectedHistoryFile === null &&\n          (this.state.referenceCommit || this.state.challengerCommit) && (\n            <CommitComparisonBox\n              header={this.props.trans.__(\n                'Compare %1 and %2',\n                this.state.referenceCommit\n                  ? this.state.referenceCommit.commit.substring(0, 7)\n                  : '...',\n                this.state.challengerCommit\n                  ? this.state.challengerCommit.commit.substring(0, 7)\n                  : '...'\n              )}\n              referenceCommit={this.state.referenceCommit}\n              challengerCommit={this.state.challengerCommit}\n              commands={this.props.commands}\n              model={this.props.model}\n              logger={this.props.logger}\n              trans={this.props.trans}\n              onClose={event => {\n                event.stopPropagation();\n                this.setState({\n                  referenceCommit: null,\n                  challengerCommit: null\n                });\n              }}\n              onOpenDiff={\n                this.state.referenceCommit && this.state.challengerCommit\n                  ? openFileDiff(this.props.commands)(\n                      this.state.challengerCommit,\n                      this.state.referenceCommit\n                    )\n                  : undefined\n              }\n            />\n          )}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Renders a panel for prompting a user to find a Git repository.\n   *\n   * @returns React element\n   */\n  private _renderWarning(): React.ReactElement {\n    const path = this.props.filebrowser.path;\n    const { commands } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={warningTextClass}>\n          {path ? (\n            <React.Fragment>\n              <b title={path}>{PathExt.basename(path)}</b>{' '}\n              {this.props.trans.__('is not')}\n            </React.Fragment>\n          ) : (\n            this.props.trans.__('You are not currently in')\n          )}\n          {this.props.trans.__(\n            ' a Git repository. To use Git, navigate to a local repository, initialize a repository here, or clone an existing repository.'\n          )}\n        </div>\n        <button\n          className={repoButtonClass}\n          onClick={() => commands.execute('filebrowser:toggle-main')}\n        >\n          {this.props.trans.__('Open the FileBrowser')}\n        </button>\n        <button\n          className={repoButtonClass}\n          onClick={() => commands.execute(CommandIDs.gitInit)}\n        >\n          {this.props.trans.__('Initialize a Repository')}\n        </button>\n        {commands.hasCommand(CommandIDs.gitClone) && (\n          <button\n            className={repoButtonClass}\n            onClick={async () => {\n              await commands.execute(CommandIDs.gitClone);\n              await commands.execute('filebrowser:toggle-main');\n            }}\n          >\n            {this.props.trans.__('Clone a Repository')}\n          </button>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Callback invoked upon changing the active panel tab.\n   *\n   * @param event - event object\n   * @param tab - tab number\n   */\n  private _onTabChange = (event: any, tab: number): void => {\n    if (tab === 1) {\n      this.refreshHistory();\n    }\n    this.setState({\n      tab: tab\n    });\n  };\n\n  /**\n   * Updates the commit message description.\n   *\n   * @param description - commit message description\n   */\n  private _setCommitDescription = (description: string): void => {\n    this.setState({\n      commitDescription: description\n    });\n  };\n\n  /**\n   * Updates the commit message summary.\n   *\n   * @param summary - commit message summary\n   */\n  private _setCommitSummary = (summary: string): void => {\n    this.setState({\n      commitSummary: summary\n    });\n  };\n\n  /**\n   * Updates the amend option\n   *\n   * @param amend - whether the amend is checked\n   */\n  private _setCommitAmend = (amend: boolean): void => {\n    this.setState({\n      commitAmend: amend\n    });\n  };\n\n  /**\n   * Commits all marked files.\n   *\n   * @param message - commit message\n   * @returns a promise which commits the files\n   */\n  private _commitMarkedFiles = async (message: string): Promise<void> => {\n    this.props.logger.log({\n      level: Level.RUNNING,\n      message: this.props.trans.__('Staging files...')\n    });\n    await this.props.model.reset();\n    await this.props.model.add(...this._markedFiles.map(file => file.to));\n\n    await this._commitStagedFiles(message);\n  };\n\n  /**\n   * Commits all staged files.\n   *\n   * @param message - commit message\n   * @returns a promise which commits the files\n   */\n  private _commitStagedFiles = async (message?: string): Promise<void> => {\n    const errorLog: ILogMessage = {\n      level: Level.ERROR,\n      message: this.props.trans.__('Failed to commit changes.')\n    };\n\n    try {\n      await this._hasIdentity(this.props.model.pathRepository);\n\n      this.props.logger.log({\n        level: Level.RUNNING,\n        message: this.props.trans.__('Committing changes...')\n      });\n\n      if (this.state.commitAmend) {\n        await this.props.model.commit(null, true);\n      } else {\n        await this.props.model.commit(message);\n      }\n\n      this.props.logger.log({\n        level: Level.SUCCESS,\n        message: this.props.trans.__('Committed changes.')\n      });\n\n      const hasRemote = this.props.model.branches.some(\n        branch => branch.is_remote_branch\n      );\n\n      // If enabled commit and push, push here\n      if (this.props.settings.composite['commitAndPush'] && hasRemote) {\n        await this.props.commands.execute(CommandIDs.gitPush);\n      }\n    } catch (error) {\n      this.props.logger.log({ ...errorLog, error });\n      throw error;\n    }\n  };\n\n  /**\n   * Determines whether a user has a known Git identity.\n   *\n   * @param path - repository path\n   */\n  private async _hasIdentity(path: string): Promise<void> {\n    // If the repository path changes, check the user identity\n    if (path !== this._previousRepoPath) {\n      try {\n        const data: JSONObject = (await this.props.model.config()) as any;\n        const options: JSONObject = data['options'] as JSONObject;\n        const keys = Object.keys(options);\n\n        // If the user name or e-mail is unknown, ask the user to set it\n        if (keys.indexOf('user.name') < 0 || keys.indexOf('user.email') < 0) {\n          const result = await showDialog({\n            title: this.props.trans.__('Who is committing?'),\n            body: new GitAuthorForm()\n          });\n\n          if (!result.button.accept) {\n            throw new Error(\n              this.props.trans.__('User refused to set identity.')\n            );\n          }\n\n          const { name, email } = result.value;\n          await this.props.model.config({\n            'user.name': name,\n            'user.email': email\n          });\n        }\n        this._previousRepoPath = path;\n      } catch (error) {\n        if (error instanceof Git.GitResponseError) {\n          throw error;\n        }\n\n        throw new Error(\n          this.props.trans.__('Failed to set your identity. %1', error.message)\n        );\n      }\n    }\n  }\n\n  private _hasStagedFile(): boolean {\n    return this.state.files.some(\n      file => file.status === 'staged' || file.status === 'partially-staged'\n    );\n  }\n\n  private _hasUnStagedFile(): boolean {\n    return this.state.files.some(\n      file => file.status === 'unstaged' || file.status === 'partially-staged'\n    );\n  }\n\n  /**\n   * List of marked files.\n   */\n  private get _markedFiles(): Git.IStatusFile[] {\n    return this._sortedFiles.filter(file => this.props.model.getMark(file.to));\n  }\n\n  /**\n   * List of sorted modified files.\n   */\n  private get _sortedFiles(): Git.IStatusFile[] {\n    const { files, remoteChangedFiles } = this.state;\n    let sfiles: Git.IStatusFile[] = files;\n    if (remoteChangedFiles) {\n      sfiles = sfiles.concat(remoteChangedFiles);\n    }\n    sfiles.sort((a, b) => a.to.localeCompare(b.to));\n    return sfiles;\n  }\n\n  private _previousRepoPath: string = null;\n\n  /**\n   * Show a dialog when a notifyRemoteChanges signal is emitted from the model.\n   */\n  private async warningDialog(\n    options: Git.IRemoteChangedNotification\n  ): Promise<void> {\n    const title = this.props.trans.__(\n      'One or more open files are behind %1 head. Do you want to pull the latest remote version?',\n      this.props.model.status.remote\n    );\n    const dialog = new Dialog({\n      title,\n      body: this._renderBody(options.notNotified, options.notified),\n      buttons: [\n        Dialog.cancelButton({\n          label: this.props.trans.__('Continue Without Pulling')\n        }),\n        Dialog.warnButton({\n          label: this.props.trans.__('Pull'),\n          caption: this.props.trans.__('Git Pull from Remote Branch')\n        })\n      ]\n    });\n    const result = await dialog.launch();\n    if (result.button.accept) {\n      await this.props.commands.execute(CommandIDs.gitPull, {});\n    }\n  }\n\n  /**\n   * renders the body to be used in the remote changes warning dialog\n   */\n  private _renderBody(\n    notNotifiedList: Git.IStatusFile[],\n    notifiedList: Git.IStatusFile[] = []\n  ): JSX.Element {\n    const listedItems = notNotifiedList.map((item: Git.IStatusFile) => {\n      console.log(item.to);\n      const item_val = this.props.trans.__(item.to);\n      return <li key={item_val}>{item_val}</li>;\n    });\n    let elem: JSX.Element = <ul>{listedItems}</ul>;\n    if (notifiedList.length > 0) {\n      const remaining = this.props.trans.__(\n        'The following open files remain behind:'\n      );\n      const alreadyListedItems = notifiedList.map((item: Git.IStatusFile) => {\n        console.log(item.to);\n        const item_val = this.props.trans.__(item.to);\n        return <li key={item_val}>{item_val}</li>;\n      });\n      const full: JSX.Element = (\n        <div>\n          {elem}\n          {remaining}\n          <ul>{alreadyListedItems}</ul>\n        </div>\n      );\n      elem = full;\n    }\n    return <div>{elem}</div>;\n  }\n\n  /**\n   *\n   */\n  private _openSingleFileComparison(\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ): void {\n    if (\n      this.props.model.selectedHistoryFile &&\n      this.state.referenceCommit &&\n      this.state.challengerCommit\n    ) {\n      openFileDiff(this.props.commands)(\n        this.state.challengerCommit,\n        this.state.referenceCommit\n      )(\n        this.props.model.selectedHistoryFile.to,\n        !this.props.model.selectedHistoryFile.is_binary\n      )(event);\n    }\n  }\n}\n"]}