{"version":3,"file":"commandsAndMenu.js","sourceRoot":"./@jupyterlab/git/src/","sources":["commandsAndMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import { JupyterFrontEnd } from '@jupyterlab/application';\nimport {\n  Dialog,\n  MainAreaWidget,\n  ReactWidget,\n  showDialog,\n  showErrorMessage,\n  Toolbar,\n  ToolbarButton\n} from '@jupyterlab/apputils';\nimport { PathExt, URLExt } from '@jupyterlab/coreutils';\nimport { FileBrowser, FileBrowserModel } from '@jupyterlab/filebrowser';\nimport { Contents, ContentsManager } from '@jupyterlab/services';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITerminal } from '@jupyterlab/terminal';\nimport { ITranslator, TranslationBundle } from '@jupyterlab/translation';\nimport { closeIcon, ContextMenuSvg } from '@jupyterlab/ui-components';\nimport { ArrayExt, toArray, find } from '@lumino/algorithm';\nimport { CommandRegistry } from '@lumino/commands';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { ContextMenu, DockPanel, Menu, Panel, Widget } from '@lumino/widgets';\nimport * as React from 'react';\nimport { DiffModel } from './components/diff/model';\nimport { createPlainTextDiff } from './components/diff/PlainTextDiff';\nimport { CONTEXT_COMMANDS } from './components/FileList';\nimport { MergeBranchDialog } from './components/MergeBranchDialog';\nimport { AUTH_ERROR_MESSAGES, requestAPI } from './git';\nimport { logger } from './logger';\nimport { CancelledError } from './cancelledError';\nimport { getDiffProvider, GitExtension } from './model';\nimport {\n  addIcon,\n  diffIcon,\n  discardIcon,\n  gitIcon,\n  historyIcon,\n  openIcon,\n  removeIcon\n} from './style/icons';\nimport {\n  CommandIDs,\n  ContextCommandIDs,\n  Git,\n  IGitExtension,\n  Level\n} from './tokens';\nimport { GitCredentialsForm } from './widgets/CredentialsBox';\nimport { discardAllChanges } from './widgets/discardAllChanges';\nimport { ManageRemoteDialogue } from './components/ManageRemoteDialogue';\nimport { CheckboxForm } from './widgets/GitResetToRemoteForm';\nimport { AdvancedPushForm } from './widgets/AdvancedPushForm';\nimport { PreviewMainAreaWidget } from './components/diff/PreviewMainAreaWidget';\n\nexport interface IGitCloneArgs {\n  /**\n   * Path in which to clone the Git repository\n   */\n  path: string;\n  /**\n   * Git repository url\n   */\n  url: string;\n  /**\n   * Whether to activate git versioning in the clone or not.\n   * If false, this will remove the .git folder after cloning.\n   */\n  versioning?: boolean;\n  /**\n   * Whether to activate git recurse submodules clone or not.\n   */\n  submodules?: boolean;\n}\n\n/**\n * Git operations requiring authentication\n */\nexport enum Operation {\n  Clone = 'Clone',\n  Pull = 'Pull',\n  Push = 'Push',\n  ForcePush = 'ForcePush',\n  Fetch = 'Fetch'\n}\n\ninterface IFileDiffArgument {\n  context?: Git.Diff.IContext;\n  filePath: string;\n  isText: boolean;\n  status?: Git.Status;\n  isPreview?: boolean;\n\n  // when file has been relocated\n  previousFilePath?: string;\n}\n\nexport namespace CommandArguments {\n  export interface IGitFileDiff {\n    files: IFileDiffArgument[];\n  }\n  export interface IGitContextAction {\n    files: Git.IStatusFile[];\n  }\n}\n\nfunction pluralizedContextLabel(singular: string, plural: string) {\n  return (args: any) => {\n    const { files } = args as any as CommandArguments.IGitContextAction;\n    if (files.length > 1) {\n      return plural;\n    } else {\n      return singular;\n    }\n  };\n}\n\n/**\n * Add the commands for the git extension.\n */\nexport function addCommands(\n  app: JupyterFrontEnd,\n  gitModel: GitExtension,\n  fileBrowserModel: FileBrowserModel,\n  settings: ISettingRegistry.ISettings,\n  translator: ITranslator\n): void {\n  const { commands, shell, serviceManager } = app;\n  const trans = translator.load('jupyterlab_git');\n\n  /**\n   * Commit using a keystroke combination when in CommitBox.\n   *\n   * This command is not accessible from the user interface (not visible),\n   * as it is handled by a signal listener in the CommitBox component instead.\n   * The label and caption are given to ensure that the command will\n   * show up in the shortcut editor UI with a nice description.\n   */\n  commands.addCommand(CommandIDs.gitSubmitCommand, {\n    label: trans.__('Commit from the Commit Box'),\n    caption: trans.__(\n      'Submit the commit using the summary and description from commit box'\n    ),\n    execute: () => void 0,\n    isVisible: () => false\n  });\n\n  /**\n   * Add open terminal in the Git repository\n   */\n  commands.addCommand(CommandIDs.gitTerminalCommand, {\n    label: trans.__('Open Git Repository in Terminal'),\n    caption: trans.__('Open a New Terminal to the Git Repository'),\n    execute: async args => {\n      const main = (await commands.execute(\n        'terminal:create-new',\n        args\n      )) as MainAreaWidget<ITerminal.ITerminal>;\n\n      try {\n        if (gitModel.pathRepository !== null) {\n          const terminal = main.content;\n          terminal.session.send({\n            type: 'stdin',\n            content: [\n              `cd \"${gitModel.pathRepository\n                .split('\"')\n                .join('\\\\\"')\n                .split('`')\n                .join('\\\\`')}\"\\n`\n            ]\n          });\n        }\n\n        return main;\n      } catch (e) {\n        console.error(e);\n        main.dispose();\n      }\n    },\n    isEnabled: () =>\n      gitModel.pathRepository !== null &&\n      app.serviceManager.terminals.isAvailable()\n  });\n\n  /** Add open/go to git interface command */\n  commands.addCommand(CommandIDs.gitUI, {\n    label: trans.__('Git Interface'),\n    caption: trans.__('Go to Git user interface'),\n    execute: () => {\n      try {\n        shell.activateById('jp-git-sessions');\n      } catch (err) {\n        console.error('Fail to open Git tab.');\n      }\n    }\n  });\n\n  /** Add git init command */\n  commands.addCommand(CommandIDs.gitInit, {\n    label: trans.__('Initialize a Repository'),\n    caption: trans.__(\n      'Create an empty Git repository or reinitialize an existing one'\n    ),\n    execute: async () => {\n      const currentPath = fileBrowserModel.path;\n      const result = await showDialog({\n        title: trans.__('Initialize a Repository'),\n        body: trans.__('Do you really want to make this directory a Git Repo?'),\n        buttons: [\n          Dialog.cancelButton({ label: trans.__('Cancel') }),\n          Dialog.warnButton({ label: trans.__('Yes') })\n        ]\n      });\n\n      if (result.button.accept) {\n        logger.log({\n          message: trans.__('Initializing…'),\n          level: Level.RUNNING\n        });\n        try {\n          await gitModel.init(currentPath);\n          gitModel.pathRepository = currentPath;\n          logger.log({\n            message: trans.__('Git repository initialized.'),\n            level: Level.SUCCESS\n          });\n        } catch (error) {\n          console.error(\n            trans.__(\n              'Encountered an error when initializing the repository. Error: '\n            ),\n            error\n          );\n          logger.log({\n            message: trans.__('Failed to initialize the Git repository'),\n            level: Level.ERROR,\n            error: error as Error\n          });\n        }\n      }\n    },\n    isEnabled: () => gitModel.pathRepository === null\n  });\n\n  /** Open URL externally */\n  commands.addCommand(CommandIDs.gitOpenUrl, {\n    label: args => trans.__(args['text'] as string),\n    execute: args => {\n      const url = args['url'] as string;\n      window.open(url);\n    }\n  });\n\n  /** add toggle for simple staging */\n  commands.addCommand(CommandIDs.gitToggleSimpleStaging, {\n    label: trans.__('Simple staging'),\n    isToggled: () => !!settings.composite['simpleStaging'],\n    execute: args => {\n      settings.set('simpleStaging', !settings.composite['simpleStaging']);\n    }\n  });\n\n  /** add toggle for double click opens diffs */\n  commands.addCommand(CommandIDs.gitToggleDoubleClickDiff, {\n    label: trans.__('Double click opens diff'),\n    isToggled: () => !!settings.composite['doubleClickDiff'],\n    execute: args => {\n      settings.set('doubleClickDiff', !settings.composite['doubleClickDiff']);\n    }\n  });\n\n  /** Command to add a remote Git repository */\n  commands.addCommand(CommandIDs.gitManageRemote, {\n    label: trans.__('Manage Remote Repositories'),\n    caption: trans.__('Manage Remote Repositories'),\n    isEnabled: () => gitModel.pathRepository !== null,\n    execute: () => {\n      if (gitModel.pathRepository === null) {\n        console.warn(\n          trans.__('Not in a Git repository. Unable to add a remote.')\n        );\n        return;\n      }\n\n      const widgetId = 'git-dialog-ManageRemote';\n      let anchor = document.querySelector<HTMLDivElement>(`#${widgetId}`);\n      if (!anchor) {\n        anchor = document.createElement('div');\n        anchor.id = widgetId;\n        document.body.appendChild(anchor);\n      }\n\n      const dialog = ReactWidget.create(\n        <ManageRemoteDialogue\n          trans={trans}\n          model={gitModel}\n          onClose={() => dialog.dispose()}\n        />\n      );\n\n      Widget.attach(dialog, anchor);\n    }\n  });\n\n  /** Add git open gitignore command */\n  commands.addCommand(CommandIDs.gitOpenGitignore, {\n    label: trans.__('Open .gitignore'),\n    caption: trans.__('Open .gitignore'),\n    isEnabled: () => gitModel.pathRepository !== null,\n    execute: async () => {\n      await gitModel.ensureGitignore();\n    }\n  });\n\n  /** Add git push command */\n  commands.addCommand(CommandIDs.gitPush, {\n    label: args =>\n      (args['advanced'] as boolean)\n        ? trans.__('Push to Remote (Advanced)')\n        : trans.__('Push to Remote'),\n    caption: trans.__('Push code to remote repository'),\n    isEnabled: () => gitModel.pathRepository !== null,\n    execute: async args => {\n      try {\n        let remote;\n        let force;\n\n        if (args['advanced'] as boolean) {\n          const result = await showDialog({\n            title: trans.__('Please select push options.'),\n            body: new AdvancedPushForm(trans, gitModel),\n            buttons: [\n              Dialog.cancelButton({ label: trans.__('Cancel') }),\n              Dialog.okButton({ label: trans.__('Proceed') })\n            ]\n          });\n          if (result.button.accept) {\n            remote = result.value.remoteName;\n            force = result.value.force;\n          } else {\n            return;\n          }\n        }\n\n        logger.log({\n          level: Level.RUNNING,\n          message: trans.__('Pushing…')\n        });\n        const details = await showGitOperationDialog(\n          gitModel,\n          force ? Operation.ForcePush : Operation.Push,\n          trans,\n          (args = { remote })\n        );\n\n        logger.log({\n          message: trans.__('Successfully pushed'),\n          level: Level.SUCCESS,\n          details\n        });\n      } catch (error: any) {\n        if (error.name !== 'CancelledError') {\n          console.error(\n            trans.__('Encountered an error when pushing changes. Error: '),\n            error\n          );\n          logger.log({\n            message: trans.__('Failed to push'),\n            level: Level.ERROR,\n            error: error as Error\n          });\n        } else {\n          return logger.log({\n            //Empty logger to supress the message\n            message: '',\n            level: Level.INFO\n          });\n        }\n      }\n    }\n  });\n\n  /** Add git pull command */\n  commands.addCommand(CommandIDs.gitPull, {\n    label: args =>\n      args.force\n        ? trans.__('Pull from Remote (Force)')\n        : trans.__('Pull from Remote'),\n    caption: args =>\n      args.force\n        ? trans.__(\n            'Discard all current changes and pull from remote repository'\n          )\n        : trans.__('Pull latest code from remote repository'),\n    isEnabled: () => gitModel.pathRepository !== null,\n    execute: async args => {\n      try {\n        if (args.force) {\n          await discardAllChanges(gitModel, trans, args.fallback as boolean);\n        }\n        logger.log({\n          level: Level.RUNNING,\n          message: trans.__('Pulling…')\n        });\n        const details = await showGitOperationDialog(\n          gitModel,\n          Operation.Pull,\n          trans\n        );\n        logger.log({\n          message: trans.__('Successfully pulled'),\n          level: Level.SUCCESS,\n          details\n        });\n      } catch (error: any) {\n        if (error.name !== 'CancelledError') {\n          console.error(\n            'Encountered an error when pulling changes. Error: ',\n            error\n          );\n\n          const errorMsg =\n            typeof error === 'string' ? error : (error as Error).message;\n\n          // Discard changes then retry pull\n          if (\n            errorMsg\n              .toLowerCase()\n              .includes(\n                'your local changes to the following files would be overwritten by merge'\n              )\n          ) {\n            await commands.execute(CommandIDs.gitPull, {\n              force: true,\n              fallback: true\n            });\n          } else {\n            if ((error as any).cancelled) {\n              // Empty message to hide alert\n              logger.log({\n                message: '',\n                level: Level.INFO\n              });\n            } else {\n              logger.log({\n                message: trans.__('Failed to pull'),\n                level: Level.ERROR,\n                error\n              });\n            }\n          }\n        } else {\n          return logger.log({\n            //Empty logger to supress the message\n            message: '',\n            level: Level.INFO\n          });\n        }\n      }\n    }\n  });\n\n  /** Add git reset --hard <remote-tracking-branch> command */\n  commands.addCommand(CommandIDs.gitResetToRemote, {\n    label: trans.__('Reset to Remote'),\n    caption: trans.__('Reset Current Branch to Remote State'),\n    isEnabled: () => gitModel.pathRepository !== null,\n    execute: async () => {\n      const result = await showDialog({\n        title: trans.__('Reset to Remote'),\n        body: new CheckboxForm(\n          trans.__(\n            'To bring the current branch to the state of its corresponding remote tracking branch, \\\n            a hard reset will be performed, which may result in some files being permanently deleted \\\n            and some changes being permanently discarded. Are you sure you want to proceed? \\\n            This action cannot be undone.'\n          ),\n          trans.__('Close all opened files to avoid conflicts')\n        ),\n        buttons: [\n          Dialog.cancelButton({ label: trans.__('Cancel') }),\n          Dialog.warnButton({ label: trans.__('Proceed') })\n        ]\n      });\n      if (result.button.accept) {\n        try {\n          if (result.value.checked) {\n            logger.log({\n              message: trans.__('Closing all opened files...'),\n              level: Level.RUNNING\n            });\n            await fileBrowserModel.manager.closeAll();\n          }\n          logger.log({\n            message: trans.__('Resetting...'),\n            level: Level.RUNNING\n          });\n          await gitModel.resetToCommit(gitModel.status.remote);\n          logger.log({\n            message: trans.__('Successfully reset'),\n            level: Level.SUCCESS,\n            details: trans.__(\n              'Successfully reset the current branch to its remote state'\n            )\n          });\n        } catch (error) {\n          console.error(\n            'Encountered an error when resetting the current branch to its remote state. Error: ',\n            error\n          );\n          logger.log({\n            message: trans.__('Reset failed'),\n            level: Level.ERROR,\n            error\n          });\n        }\n      }\n    }\n  });\n\n  /**\n   * Git display diff command - internal command\n   *\n   * @params model {Git.Diff.IModel: The diff model to display\n   * @params isText {boolean}: Optional, whether the content is a plain text\n   * @params isMerge {boolean}: Optional, whether the diff is a merge conflict\n   * @returns the main area widget or null\n   */\n  commands.addCommand(CommandIDs.gitShowDiff, {\n    label: trans.__('Show Diff'),\n    caption: trans.__('Display a file diff.'),\n    execute: async args => {\n      const { model, isText, isPreview } = args as any as {\n        model: Git.Diff.IModel;\n        isText?: boolean;\n        isPreview?: boolean;\n      };\n\n      const fullPath = PathExt.join(\n        model.repositoryPath ?? '/',\n        model.filename\n      );\n\n      const buildDiffWidget =\n        getDiffProvider(fullPath) ?? (isText && createPlainTextDiff);\n\n      if (buildDiffWidget) {\n        const id = `git-diff-${fullPath}-${model.reference.label}-${model.challenger.label}`;\n        const mainAreaItems = shell.widgets('main');\n        let mainAreaItem = mainAreaItems.next();\n        while (mainAreaItem) {\n          if (mainAreaItem.id === id) {\n            shell.activateById(id);\n            break;\n          }\n          mainAreaItem = mainAreaItems.next();\n        }\n\n        if (!mainAreaItem) {\n          const content = new Panel();\n          const modelIsLoading = new PromiseDelegate<void>();\n          const diffWidget = (mainAreaItem = new PreviewMainAreaWidget<Panel>({\n            content,\n            reveal: modelIsLoading.promise,\n            isPreview\n          }));\n          diffWidget.id = id;\n          diffWidget.title.label = PathExt.basename(model.filename);\n          diffWidget.title.caption = fullPath;\n          diffWidget.title.icon = diffIcon;\n          diffWidget.title.closable = true;\n          diffWidget.title.className = 'jp-git-diff-title';\n          diffWidget.addClass('jp-git-diff-parent-widget');\n\n          shell.add(diffWidget, 'main');\n          shell.activateById(diffWidget.id);\n\n          // Search for the tab\n          const dockPanel = (app.shell as any)._dockPanel as DockPanel;\n\n          // Get the index of the most recent tab opened\n          let tabPosition = -1;\n          const tabBar = find(dockPanel.tabBars(), bar => {\n            tabPosition = bar.titles.indexOf(diffWidget.title);\n            return tabPosition !== -1;\n          });\n\n          // Pin the preview screen if applicable\n          PreviewMainAreaWidget.pinWidget(tabPosition, tabBar, diffWidget);\n\n          // Create the diff widget\n          try {\n            const widget = await buildDiffWidget(\n              model,\n              diffWidget.toolbar,\n              translator\n            );\n\n            diffWidget.toolbar.addItem('spacer', Toolbar.createSpacerItem());\n\n            // Do not allow the user to refresh during merge conflicts\n            if (model.hasConflict) {\n              const resolveButton = new ToolbarButton({\n                label: trans.__('Mark as resolved'),\n                onClick: async () => {\n                  if (!widget.isFileResolved) {\n                    const result = await showDialog({\n                      title: trans.__('Resolve with conflicts'),\n                      body: trans.__(\n                        'Are you sure you want to mark this file as resolved with merge conflicts?'\n                      )\n                    });\n\n                    // Bail early if the user wants to finish resolving conflicts\n                    if (!result.button.accept) {\n                      return;\n                    }\n                  }\n\n                  try {\n                    await serviceManager.contents.save(\n                      fullPath,\n                      await widget.getResolvedFile()\n                    );\n                    await gitModel.add(model.filename);\n                    await gitModel.refresh();\n                  } catch (reason) {\n                    logger.log({\n                      message: (reason as Error).message ?? (reason as string),\n                      level: Level.ERROR\n                    });\n                  } finally {\n                    diffWidget.dispose();\n                  }\n                },\n                tooltip: trans.__('Mark file as resolved'),\n                className: 'jp-git-diff-resolve'\n              });\n\n              diffWidget.toolbar.addItem('resolve', resolveButton);\n            } else {\n              const refreshButton = new ToolbarButton({\n                label: trans.__('Refresh'),\n                onClick: async () => {\n                  await widget.refresh();\n                  refreshButton.hide();\n                },\n                tooltip: trans.__('Refresh diff widget'),\n                className: 'jp-git-diff-refresh'\n              });\n\n              refreshButton.hide();\n              diffWidget.toolbar.addItem('refresh', refreshButton);\n\n              const refresh = () => {\n                refreshButton.show();\n              };\n\n              model.changed.connect(refresh);\n              widget.disposed.connect(() => model.changed.disconnect(refresh));\n            }\n\n            // Load the diff widget\n            modelIsLoading.resolve();\n            content.addWidget(widget);\n          } catch (reason) {\n            console.error(reason);\n            const msg = `Load Diff Model Error (${\n              (reason as Error).message || reason\n            })`;\n            modelIsLoading.reject(msg);\n          }\n\n          if (\n            model.challenger.source === Git.Diff.SpecialRef.INDEX ||\n            model.challenger.source === Git.Diff.SpecialRef.WORKING ||\n            model.reference.source === Git.Diff.SpecialRef.INDEX ||\n            model.reference.source === Git.Diff.SpecialRef.WORKING\n          ) {\n            const maybeClose = (_: IGitExtension, status: Git.IStatus) => {\n              const targetFile = status.files.find(\n                fileStatus => model.filename === fileStatus.from\n              );\n              if (!targetFile || targetFile.status === 'unmodified') {\n                gitModel.statusChanged.disconnect(maybeClose);\n                mainAreaItem.dispose();\n              }\n            };\n            gitModel.statusChanged.connect(maybeClose);\n          }\n        }\n\n        return mainAreaItem;\n      } else {\n        await showErrorMessage(\n          trans.__('Diff Not Supported'),\n          trans.__(\n            'Diff is not supported for %1 files.',\n            PathExt.extname(model.filename).toLocaleLowerCase()\n          )\n        );\n\n        return null;\n      }\n    },\n    icon: diffIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(CommandIDs.gitMerge, {\n    label: trans.__('Merge Branch…'),\n    caption: trans.__('Merge selected branch in the current branch'),\n    execute: async args => {\n      let { branch }: { branch?: string } = args ?? {};\n\n      if (!branch) {\n        // Prompts user to pick a branch\n        const localBranches = gitModel.branches.filter(\n          branch => !branch.is_current_branch && !branch.is_remote_branch\n        );\n\n        const widgetId = 'git-dialog-MergeBranch';\n        let anchor = document.querySelector<HTMLDivElement>(`#${widgetId}`);\n        if (!anchor) {\n          anchor = document.createElement('div');\n          anchor.id = widgetId;\n          document.body.appendChild(anchor);\n        }\n\n        const waitForDialog = new PromiseDelegate<string | null>();\n        const dialog = ReactWidget.create(\n          <MergeBranchDialog\n            currentBranch={gitModel.currentBranch.name}\n            branches={localBranches}\n            onClose={(branch?: string) => {\n              dialog.dispose();\n              waitForDialog.resolve(branch ?? null);\n            }}\n            trans={trans}\n          />\n        );\n\n        Widget.attach(dialog, anchor);\n\n        branch = await waitForDialog.promise;\n      }\n\n      if (branch) {\n        logger.log({\n          level: Level.RUNNING,\n          message: trans.__(\"Merging branch '%1'…\", branch)\n        });\n        try {\n          await gitModel.merge(branch);\n        } catch (err) {\n          logger.log({\n            level: Level.ERROR,\n            message: trans.__(\n              \"Failed to merge branch '%1' into '%2'.\",\n              branch,\n              gitModel.currentBranch.name\n            ),\n            error: err as Error\n          });\n          return;\n        }\n\n        logger.log({\n          level: Level.SUCCESS,\n          message: trans.__(\n            \"Branch '%1' merged into '%2'.\",\n            branch,\n            gitModel.currentBranch.name\n          )\n        });\n      }\n    },\n    isEnabled: () =>\n      gitModel.branches.some(\n        branch => !branch.is_current_branch && !branch.is_remote_branch\n      )\n  });\n\n  /* Context menu commands */\n  commands.addCommand(ContextCommandIDs.gitFileOpen, {\n    label: trans.__('Open'),\n    caption: pluralizedContextLabel(\n      trans.__('Open selected file'),\n      trans.__('Open selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        const { x, y, to } = file;\n        if (x === 'D' || y === 'D') {\n          await showErrorMessage(\n            trans.__('Open File Failed'),\n            trans.__('This file has been deleted!')\n          );\n          return;\n        }\n        try {\n          if (to[to.length - 1] !== '/') {\n            commands.execute('docmanager:open', {\n              path: gitModel.getRelativeFilePath(to)\n            });\n          } else {\n            console.log('Cannot open a folder here');\n          }\n        } catch (err) {\n          console.error(`Fail to open ${to}.`);\n        }\n      }\n    },\n    icon: openIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.openFileFromDiff, {\n    label: trans.__('Open File'),\n    caption: trans.__('Open file from its diff view'),\n    execute: async _ => {\n      const domNode = app.contextMenuHitTest((node: HTMLElement) => {\n        const nodeId = node.dataset.id;\n        return nodeId && nodeId.substring(0, 8) === 'git-diff';\n      });\n      if (!domNode) {\n        return;\n      }\n\n      const matches = toArray(shell.widgets('main')).filter(\n        widget => widget.id === domNode.dataset.id\n      );\n\n      if (matches.length === 0) {\n        return;\n      }\n\n      const diffModel = (\n        ((matches[0] as MainAreaWidget).content as Panel)\n          .widgets[0] as Git.Diff.IDiffWidget\n      ).model;\n\n      const filename = diffModel.filename;\n\n      if (\n        diffModel.reference.source === Git.Diff.SpecialRef.INDEX ||\n        diffModel.reference.source === Git.Diff.SpecialRef.WORKING ||\n        diffModel.challenger.source === Git.Diff.SpecialRef.INDEX ||\n        diffModel.challenger.source === Git.Diff.SpecialRef.WORKING\n      ) {\n        const file = gitModel.status.files.find(\n          fileStatus => fileStatus.from === filename\n        );\n        if (file) {\n          commands.execute(ContextCommandIDs.gitFileOpen, {\n            files: [file]\n          } as any);\n        }\n      } else {\n        commands.execute('docmanager:open', {\n          path: gitModel.getRelativeFilePath(filename)\n        });\n      }\n    }\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileDiff, {\n    label: trans.__('Diff'),\n    caption: pluralizedContextLabel(\n      trans.__('Diff selected file'),\n      trans.__('Diff selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitFileDiff;\n      for (const file of files) {\n        const {\n          context,\n          filePath,\n          previousFilePath,\n          isText,\n          status,\n          isPreview\n        } = file;\n\n        // nothing to compare to for untracked files\n        if (status === 'untracked') {\n          continue;\n        }\n\n        const repositoryPath = gitModel.pathRepository;\n        const filename = filePath;\n        const fullPath = PathExt.join(repositoryPath, filename);\n        const specialRef =\n          status === 'staged'\n            ? Git.Diff.SpecialRef.INDEX\n            : Git.Diff.SpecialRef.WORKING;\n\n        const diffContext: Git.Diff.IContext =\n          status === 'unmerged'\n            ? {\n                currentRef: 'MERGE_HEAD',\n                previousRef: 'HEAD',\n                baseRef: Git.Diff.SpecialRef.BASE\n              }\n            : context ?? {\n                currentRef: specialRef,\n                previousRef: 'HEAD'\n              };\n\n        const challengerRef = Git.Diff.SpecialRef[diffContext.currentRef as any]\n          ? { special: Git.Diff.SpecialRef[diffContext.currentRef as any] }\n          : { git: diffContext.currentRef };\n\n        // Base props used for Diff Model\n        const props: Omit<Git.Diff.IModel, 'changed' | 'hasConflict'> = {\n          challenger: {\n            content: async () => {\n              return requestAPI<Git.IDiffContent>(\n                URLExt.join(repositoryPath, 'content'),\n                'POST',\n                {\n                  filename,\n                  reference: challengerRef\n                }\n              ).then(data => data.content);\n            },\n            label:\n              (Git.Diff.SpecialRef[diffContext.currentRef as any] as any) ||\n              diffContext.currentRef,\n            source: diffContext.currentRef,\n            updateAt: Date.now()\n          },\n          filename,\n          reference: {\n            content: async () => {\n              return requestAPI<Git.IDiffContent>(\n                URLExt.join(repositoryPath, 'content'),\n                'POST',\n                {\n                  filename: previousFilePath ?? filename,\n                  reference: { git: diffContext.previousRef }\n                }\n              ).then(data => data.content);\n            },\n            label:\n              (Git.Diff.SpecialRef[diffContext.previousRef as any] as any) ||\n              diffContext.previousRef,\n            source: diffContext.previousRef,\n            updateAt: Date.now()\n          },\n          repositoryPath\n        };\n\n        // Case when file is relocated\n        if (previousFilePath) {\n          props.reference.label = `${previousFilePath} (${props.reference.label.slice(\n            0,\n            7\n          )})`;\n          props.challenger.label = `${filePath} (${props.challenger.label.slice(\n            0,\n            7\n          )})`;\n        }\n\n        if (diffContext.baseRef) {\n          props.reference.label = trans.__('Current');\n          props.challenger.label = trans.__('Incoming');\n\n          // Only add base when diff-ing merge conflicts\n          props.base = {\n            content: async () => {\n              return requestAPI<Git.IDiffContent>(\n                URLExt.join(repositoryPath, 'content'),\n                'POST',\n                {\n                  filename,\n                  reference: {\n                    special: Git.Diff.SpecialRef[diffContext.baseRef as any]\n                  }\n                }\n              ).then(data => data.content);\n            },\n            label: trans.__('Result'),\n            source: diffContext.baseRef,\n            updateAt: Date.now()\n          };\n        }\n\n        // Create the diff widget\n        const model = new DiffModel(props);\n\n        const widget = await commands.execute(CommandIDs.gitShowDiff, {\n          model,\n          isText,\n          isPreview\n        } as any);\n\n        if (widget) {\n          // Trigger diff model update\n          if (diffContext.previousRef === 'HEAD') {\n            const updateHead = () => {\n              model.reference = {\n                ...model.reference,\n                updateAt: Date.now()\n              };\n            };\n\n            gitModel.headChanged.connect(updateHead);\n\n            widget.disposed.connect(() => {\n              gitModel.headChanged.disconnect(updateHead);\n            });\n          }\n\n          // If the diff is on the current file and it is updated => diff model changed\n          if (diffContext.currentRef === Git.Diff.SpecialRef.WORKING) {\n            const updateCurrent = (\n              m: ContentsManager,\n              change: Contents.IChangedArgs\n            ) => {\n              const updateAt = new Date(\n                change.newValue.last_modified\n              ).valueOf();\n              if (\n                change.newValue.path === fullPath &&\n                model.challenger.updateAt !== updateAt\n              ) {\n                model.challenger = {\n                  ...model.challenger,\n                  updateAt\n                };\n              }\n            };\n\n            // More robust than fileBrowser.model.fileChanged\n            app.serviceManager.contents.fileChanged.connect(updateCurrent);\n\n            widget.disposed.connect(() => {\n              app.serviceManager.contents.fileChanged.disconnect(updateCurrent);\n            });\n          }\n        }\n      }\n    },\n    icon: diffIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileAdd, {\n    label: trans.__('Add'),\n    caption: pluralizedContextLabel(\n      trans.__('Stage or track the changes to selected file'),\n      trans.__('Stage or track the changes of selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        await gitModel.add(file.to);\n      }\n    },\n    icon: addIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileStage, {\n    label: trans.__('Stage'),\n    caption: pluralizedContextLabel(\n      trans.__('Stage the changes of selected file'),\n      trans.__('Stage the changes of selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        await gitModel.add(file.to);\n      }\n    },\n    icon: addIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileTrack, {\n    label: trans.__('Track'),\n    caption: pluralizedContextLabel(\n      trans.__('Start tracking selected file'),\n      trans.__('Start tracking selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        await gitModel.add(file.to);\n      }\n    },\n    icon: addIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileUnstage, {\n    label: trans.__('Unstage'),\n    caption: pluralizedContextLabel(\n      trans.__('Unstage the changes of selected file'),\n      trans.__('Unstage the changes of selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        if (file.x !== 'D') {\n          await gitModel.reset(file.to);\n        }\n      }\n    },\n    icon: removeIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  function representFiles(files: Git.IStatusFile[]): JSX.Element {\n    const elements = files.map(file => (\n      <li key={file.to}>\n        <b>{file.to}</b>\n      </li>\n    ));\n    return <ul>{elements}</ul>;\n  }\n\n  commands.addCommand(ContextCommandIDs.gitFileDelete, {\n    label: trans.__('Delete'),\n    caption: pluralizedContextLabel(\n      trans.__('Delete this file'),\n      trans.__('Delete these files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      const fileList = representFiles(files);\n\n      const result = await showDialog({\n        title: trans.__('Delete Files'),\n        body: (\n          <span>\n            {trans.__(\n              'Are you sure you want to permanently delete the following files? \\\n              This action cannot be undone.'\n            )}\n            {fileList}\n          </span>\n        ),\n        buttons: [\n          Dialog.cancelButton({ label: trans.__('Cancel') }),\n          Dialog.warnButton({ label: trans.__('Delete') })\n        ]\n      });\n      if (result.button.accept) {\n        for (const file of files) {\n          try {\n            await app.commands.execute('docmanager:delete-file', {\n              path: gitModel.getRelativeFilePath(file.to)\n            });\n          } catch (reason) {\n            showErrorMessage(trans.__('Deleting %1 failed.', file.to), reason, [\n              Dialog.warnButton({ label: trans.__('Dismiss') })\n            ]);\n          }\n        }\n      }\n    },\n    icon: closeIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileDiscard, {\n    label: trans.__('Discard'),\n    caption: pluralizedContextLabel(\n      trans.__('Discard recent changes of selected file'),\n      trans.__('Discard recent changes of selected files')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      const fileList = representFiles(files);\n\n      const result = await showDialog({\n        title: trans.__('Discard changes'),\n        body: (\n          <span>\n            {trans.__(\n              'Are you sure you want to permanently discard changes to the following files? \\\n              This action cannot be undone.'\n            )}\n            {fileList}\n          </span>\n        ),\n        buttons: [\n          Dialog.cancelButton({ label: trans.__('Cancel') }),\n          Dialog.warnButton({ label: trans.__('Discard') })\n        ]\n      });\n      if (result.button.accept) {\n        for (const file of files) {\n          try {\n            if (\n              file.status === 'staged' ||\n              file.status === 'partially-staged'\n            ) {\n              await gitModel.reset(file.to);\n            }\n            if (\n              file.status === 'unstaged' ||\n              (file.status === 'partially-staged' && file.x !== 'A')\n            ) {\n              // resetting an added file moves it to untracked category => checkout will fail\n              await gitModel.checkout({ filename: file.to });\n            }\n          } catch (reason) {\n            showErrorMessage(\n              trans.__('Discard changes for %1 failed.', file.to),\n              reason,\n              [Dialog.warnButton({ label: trans.__('Dismiss') })]\n            );\n          }\n        }\n      }\n    },\n    icon: discardIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitIgnore, {\n    label: pluralizedContextLabel(\n      trans.__('Ignore this file (add to .gitignore)'),\n      trans.__('Ignore these files (add to .gitignore)')\n    ),\n    caption: pluralizedContextLabel(\n      trans.__('Ignore this file (add to .gitignore)'),\n      trans.__('Ignore these files (add to .gitignore)')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const file of files) {\n        if (file) {\n          await gitModel.ignore(file.to, false);\n        }\n      }\n    }\n  });\n\n  commands.addCommand(ContextCommandIDs.gitIgnoreExtension, {\n    label: args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      const extensions = files\n        .map(file => PathExt.extname(file.to))\n        .filter(extension => extension.length > 0)\n        .filter((item, index, arr) => arr.indexOf(item) === index);\n      return trans._n(\n        'Ignore %2 extension (add to .gitignore)',\n        'Ignore %2 extensions (add to .gitignore)',\n        extensions.length,\n        extensions.join(', ')\n      );\n    },\n    caption: pluralizedContextLabel(\n      trans.__('Ignore this file extension (add to .gitignore)'),\n      trans.__('Ignore these files extension (add to .gitignore)')\n    ),\n    execute: async args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      for (const selectedFile of files) {\n        if (selectedFile) {\n          const extension = PathExt.extname(selectedFile.to);\n          if (extension.length > 0) {\n            const result = await showDialog({\n              title: trans.__('Ignore file extension'),\n              body: trans.__(\n                'Are you sure you want to ignore all %1 files within this git repository?',\n                extension\n              ),\n              buttons: [\n                Dialog.cancelButton(),\n                Dialog.okButton({ label: trans.__('Ignore') })\n              ]\n            });\n            if (result.button.label === trans.__('Ignore')) {\n              await gitModel.ignore(selectedFile.to, true);\n            }\n          }\n        }\n      }\n    },\n    isVisible: args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      return files.some(selectedFile => {\n        const extension = PathExt.extname(selectedFile.to);\n        return extension.length > 0;\n      });\n    }\n  });\n\n  commands.addCommand(ContextCommandIDs.gitFileHistory, {\n    label: trans.__('History'),\n    caption: trans.__('View the history of this file'),\n    execute: args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      const file = files[0];\n      if (!file) {\n        return;\n      }\n      gitModel.selectedHistoryFile = file;\n      shell.activateById('jp-git-sessions');\n    },\n    isEnabled: args => {\n      const { files } = args as any as CommandArguments.IGitContextAction;\n      return files.length === 1;\n    },\n    icon: historyIcon.bindprops({ stylesheet: 'menuItem' })\n  });\n\n  commands.addCommand(ContextCommandIDs.gitNoAction, {\n    label: trans.__('No actions available'),\n    isEnabled: () => false,\n    execute: () => void 0\n  });\n}\n\n/**\n * Adds commands and menu items.\n *\n * @param commands - Jupyter App commands registry\n *  @param trans - language translator\n * @returns menu\n */\nexport function createGitMenu(\n  commands: CommandRegistry,\n  trans: TranslationBundle\n): Menu {\n  const RESOURCES = [\n    {\n      text: trans.__('Set Up Remotes'),\n      url: 'https://www.atlassian.com/git/tutorials/setting-up-a-repository'\n    },\n    {\n      text: trans.__('Git Documentation'),\n      url: 'https://git-scm.com/doc'\n    }\n  ];\n\n  const menu = new Menu({ commands });\n  menu.title.label = trans.__('Git');\n  [\n    CommandIDs.gitInit,\n    CommandIDs.gitClone,\n    CommandIDs.gitMerge,\n    CommandIDs.gitPush,\n    CommandIDs.gitPull,\n    CommandIDs.gitResetToRemote,\n    CommandIDs.gitManageRemote,\n    CommandIDs.gitTerminalCommand\n  ].forEach(command => {\n    menu.addItem({ command });\n    if (command === CommandIDs.gitPush) {\n      menu.addItem({ command, args: { advanced: true } });\n    }\n    if (command === CommandIDs.gitPull) {\n      menu.addItem({ command, args: { force: true } });\n    }\n  });\n\n  menu.addItem({ type: 'separator' });\n\n  menu.addItem({ command: CommandIDs.gitToggleSimpleStaging });\n\n  menu.addItem({ command: CommandIDs.gitToggleDoubleClickDiff });\n\n  menu.addItem({ type: 'separator' });\n\n  menu.addItem({ command: CommandIDs.gitOpenGitignore });\n\n  menu.addItem({ type: 'separator' });\n\n  const tutorial = new Menu({ commands });\n  tutorial.title.label = trans.__(' Help ');\n  RESOURCES.map(args => {\n    tutorial.addItem({\n      args,\n      command: CommandIDs.gitOpenUrl\n    });\n  });\n\n  menu.addItem({ type: 'submenu', submenu: tutorial });\n\n  return menu;\n}\n\nexport function addMenuItems(\n  commands: ContextCommandIDs[],\n  contextMenu: Menu,\n  selectedFiles: Git.IStatusFile[]\n): void {\n  commands.forEach(command => {\n    if (command === ContextCommandIDs.gitFileDiff) {\n      contextMenu.addItem({\n        command,\n        args: {\n          files: selectedFiles.map(file => {\n            return {\n              filePath: file.to,\n              isText: !file.is_binary,\n              status: file.status\n            };\n          })\n        } as CommandArguments.IGitFileDiff as any\n      });\n    } else {\n      contextMenu.addItem({\n        command,\n        args: {\n          files: selectedFiles\n        } as CommandArguments.IGitContextAction as any\n      });\n    }\n  });\n}\n\n/**\n * Populate Git context submenu depending on the selected files.\n */\nexport function addFileBrowserContextMenu(\n  model: IGitExtension,\n  filebrowser: FileBrowser,\n  contextMenu: ContextMenuSvg,\n  trans: TranslationBundle\n): void {\n  let gitMenu: Menu;\n  let _commands: ContextCommandIDs[];\n  let _paths: string[];\n\n  function updateItems(menu: Menu): void {\n    const wasShown = menu.isVisible;\n    const parent = menu.parentMenu;\n\n    const items = toArray(filebrowser.selectedItems());\n    const statuses = new Set<Git.Status>(\n      items\n        .map(item =>\n          model.pathRepository === null\n            ? undefined\n            : model.getFile(item.path)?.status\n        )\n        .filter(status => typeof status !== 'undefined')\n    );\n\n    // get commands and de-duplicate them\n    const allCommands = new Set<ContextCommandIDs>(\n      // flatten the list of lists of commands\n      []\n        .concat(...[...statuses].map(status => CONTEXT_COMMANDS[status]))\n        // filter out the Open and Delete commands as\n        // those are not needed in file browser\n        .filter(\n          command =>\n            command !== ContextCommandIDs.gitFileOpen &&\n            command !== ContextCommandIDs.gitFileDelete &&\n            typeof command !== 'undefined'\n        )\n        // replace stage and track with a single \"add\" operation\n        .map(command =>\n          command === ContextCommandIDs.gitFileStage ||\n          command === ContextCommandIDs.gitFileTrack\n            ? ContextCommandIDs.gitFileAdd\n            : command\n        )\n    );\n\n    const commandsChanged =\n      !_commands ||\n      _commands.length !== allCommands.size ||\n      !_commands.every(command => allCommands.has(command));\n\n    const paths = items.map(item => item.path);\n\n    const filesChanged = !_paths || !ArrayExt.shallowEqual(_paths, paths);\n\n    if (commandsChanged || filesChanged) {\n      const commandsList = [...allCommands];\n      menu.clearItems();\n      addMenuItems(\n        commandsList,\n        menu,\n        paths\n          .map(path => model.getFile(path))\n          // if file cannot be resolved (has no action available),\n          // omit the undefined result\n          .filter(file => typeof file !== 'undefined')\n      );\n\n      if (wasShown) {\n        // show the menu again after downtime for refresh\n        parent.triggerActiveItem();\n      }\n      _commands = commandsList;\n      _paths = paths;\n    }\n  }\n\n  function updateGitMenu(contextMenu: ContextMenu) {\n    if (!gitMenu) {\n      gitMenu =\n        contextMenu.menu.items.find(\n          item =>\n            item.type === 'submenu' && item.submenu?.id === 'jp-contextmenu-git'\n        )?.submenu ?? null;\n    }\n\n    if (!gitMenu) {\n      return; // Bail early if the open with menu is not displayed\n    }\n\n    // Render using the most recent model (even if possibly outdated)\n    updateItems(gitMenu);\n    const renderedStatus = model.status;\n\n    // Trigger refresh before the menu is displayed\n    model\n      .refreshStatus()\n      .then(() => {\n        if (model.status !== renderedStatus) {\n          // update items if needed\n          updateItems(gitMenu);\n        }\n      })\n      .catch(error => {\n        console.error(\n          'Fail to refresh model when displaying git context menu.',\n          error\n        );\n      });\n  }\n\n  // as any is to support JLab 3.1 feature\n  if ((contextMenu as any).opened) {\n    (contextMenu as any).opened.connect(updateGitMenu);\n  } else {\n    // matches only non-directory items\n\n    class GitMenu extends Menu {\n      protected onBeforeAttach(msg: Message): void {\n        updateGitMenu(contextMenu);\n        super.onBeforeAttach(msg);\n      }\n    }\n\n    const selectorNotDir = '.jp-DirListing-item[data-isdir=\"false\"]';\n    gitMenu = new GitMenu({ commands: contextMenu.menu.commands });\n    gitMenu.title.label = trans.__('Git');\n    gitMenu.title.icon = gitIcon.bindprops({ stylesheet: 'menuItem' });\n\n    contextMenu.addItem({\n      type: 'submenu',\n      submenu: gitMenu,\n      selector: selectorNotDir,\n      rank: 5\n    });\n  }\n}\n\n/**\n * Handle Git operation that may require authentication.\n *\n * @private\n * @param model - Git extension model\n * @param operation - Git operation name\n * @param trans - language translator\n * @param args - Git operation arguments\n * @param authentication - Git authentication information\n * @param retry - Is this operation retried?\n * @returns Promise for displaying a dialog\n */\nexport async function showGitOperationDialog<T>(\n  model: IGitExtension,\n  operation: Operation,\n  trans: TranslationBundle,\n  args?: T,\n  authentication?: Git.IAuth,\n  retry = false\n): Promise<string> {\n  try {\n    let result: Git.IResultWithMessage;\n    // the Git action\n    switch (operation) {\n      case Operation.Clone:\n        // eslint-disable-next-line no-case-declarations\n        const { path, url, versioning, submodules } =\n          args as any as IGitCloneArgs;\n        result = await model.clone(\n          path,\n          url,\n          authentication,\n          versioning ?? true,\n          submodules ?? false\n        );\n        break;\n      case Operation.Pull:\n        result = await model.pull(authentication);\n        break;\n      case Operation.Push:\n        result = await model.push(\n          authentication,\n          false,\n          (args as unknown as { remote: string })['remote']\n        );\n        break;\n      case Operation.ForcePush:\n        result = await model.push(\n          authentication,\n          true,\n          (args as unknown as { remote: string })['remote']\n        );\n        break;\n      case Operation.Fetch:\n        result = await model.fetch(authentication);\n        model.credentialsRequired = false;\n        break;\n      default:\n        result = { code: -1, message: 'Unknown git command' };\n        break;\n    }\n\n    return result.message;\n  } catch (error) {\n    if (\n      AUTH_ERROR_MESSAGES.some(\n        errorMessage => (error as Error).message.indexOf(errorMessage) > -1\n      )\n    ) {\n      // If the error is an authentication error, ask the user credentials\n      const credentials = await showDialog({\n        title: trans.__('Git credentials required'),\n        body: new GitCredentialsForm(\n          trans,\n          trans.__('Enter credentials for remote repository'),\n          retry ? trans.__('Incorrect username or password.') : ''\n        )\n      });\n\n      if (credentials.button.accept) {\n        // Retry the operation if the user provides its credentials\n        return await showGitOperationDialog<T>(\n          model,\n          operation,\n          trans,\n          args,\n          credentials.value,\n          true\n        );\n      } else {\n        throw new CancelledError();\n      }\n    }\n    // Throw the error if it cannot be handled or\n    // if the user did not accept to provide its credentials\n    throw error;\n  }\n}\n"]}