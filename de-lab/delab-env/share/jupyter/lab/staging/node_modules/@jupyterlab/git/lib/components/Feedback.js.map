{"version":3,"file":"Feedback.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/Feedback.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TranslationBundle } from '@jupyterlab/translation';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { Color } from '@material-ui/lab/Alert';\nimport * as React from 'react';\nimport { ILogMessage, Level } from '../tokens';\nimport { Alert } from './Alert';\nimport { SuspendModal } from './SuspendModal';\n\nconst LEVEL_TO_SEVERITY: Map<Level, Color> = new Map([\n  [Level.ERROR, 'error'],\n  [Level.WARNING, 'warning'],\n  [Level.SUCCESS, 'success'],\n  [Level.INFO, 'info'],\n  [Level.RUNNING, 'info']\n]);\n\nconst VISUAL_DELAY = 1000; // in ms\n\nexport interface IFeedbackProps {\n  /**\n   * Alert\n   */\n  log: ILogMessage;\n\n  /**\n   * Extension settings\n   */\n  settings: ISettingRegistry.ISettings;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\nexport interface IFeedbackState {\n  /**\n   * Overlay visibility\n   */\n  blockUI: boolean;\n\n  /**\n   * Log message stack\n   */\n  logStack: ILogMessage[];\n\n  /**\n   * Last time the feedback message was changed\n   */\n  lastUpdate: number;\n\n  /**\n   * Alert visibility\n   */\n  showAlert: boolean;\n}\n\n/**\n * Component to handle logger user feedback\n */\nexport class Feedback extends React.Component<IFeedbackProps, IFeedbackState> {\n  constructor(props: IFeedbackProps) {\n    super(props);\n\n    this.state = {\n      blockUI: false,\n      lastUpdate: Date.now() - VISUAL_DELAY,\n      logStack: [],\n      showAlert: false\n    };\n  }\n\n  static getDerivedStateFromProps(\n    props: IFeedbackProps,\n    state: IFeedbackState\n  ): IFeedbackState {\n    const latestLog = state.logStack[state.logStack.length - 1];\n    const now = Date.now();\n    if (props.log !== latestLog) {\n      if (now - state.lastUpdate > VISUAL_DELAY) {\n        state.logStack.shift();\n      }\n      if (latestLog && props.log.level > latestLog.level) {\n        // Higher level takes over\n        state.logStack.splice(0, 1, props.log);\n        state.lastUpdate = now;\n      } else {\n        state.logStack.push(props.log);\n      }\n      state.blockUI = props.settings.composite[\n        'blockWhileCommandExecutes'\n      ] as boolean;\n      state.showAlert = true;\n    }\n    return state;\n  }\n\n  render(): JSX.Element {\n    if (this.state.logStack.length > 1) {\n      setTimeout(() => {\n        if (this.state.logStack.length > 1) {\n          this.setState({\n            blockUI: this.props.settings.composite[\n              'blockWhileCommandExecutes'\n            ] as boolean,\n            logStack: this.state.logStack.slice(1),\n            lastUpdate: Date.now(),\n            showAlert: true\n          });\n        }\n      }, VISUAL_DELAY);\n    }\n\n    const log = this.state.logStack[0];\n\n    return (\n      <React.Fragment>\n        <SuspendModal\n          open={\n            this.state.blockUI &&\n            log.level === Level.RUNNING &&\n            this.state.showAlert\n          }\n          onClick={() => {\n            this.setState({ blockUI: false });\n          }}\n        />\n        <Alert\n          details={log?.details}\n          error={log?.error}\n          open={this.state.showAlert}\n          message={log?.message || this.props.log.message}\n          severity={LEVEL_TO_SEVERITY.get(log?.level || this.props.log.level)}\n          onClose={() => this.setState({ showAlert: false })}\n          trans={this.props.trans}\n        />\n      </React.Fragment>\n    );\n  }\n}\n"]}