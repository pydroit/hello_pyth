{"version":3,"file":"GitCommitGraph.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/GitCommitGraph.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  generateGraphData,\n  ICommit,\n  INode,\n  IRoute\n} from '../generateGraphData';\nimport { SVGPathData } from '../svgPathData';\n\nconst COLOURS = [\n  '#e11d21',\n  '#fbca04',\n  '#009800',\n  '#006b75',\n  '#207de5',\n  '#0052cc',\n  '#5319e7',\n  '#f7c6c7',\n  '#fad8c7',\n  '#fef2c0',\n  '#bfe5bf',\n  '#c7def8',\n  '#bfdadc',\n  '#bfd4f2',\n  '#d4c5f9',\n  '#cccccc',\n  '#84b6eb',\n  '#e6e6e6',\n  '#cc317c'\n];\n\nconst DEFAULT_BRANCH_GAP = 10;\nconst DEFAULT_RADIUS = 3;\nconst DEFAULT_LINE_WIDTH = 2;\n\nconst getColour = function (branch: number) {\n  const n = COLOURS.length;\n  return COLOURS[branch % n];\n};\n\nconst branchCount = (commitNodes: INode[]): number => {\n  let maxBranch = -1;\n\n  commitNodes.forEach(node => {\n    maxBranch = node.routes.reduce((max, route) => {\n      return Math.max(max, route.from, route.to);\n    }, maxBranch);\n  });\n\n  return maxBranch + 1;\n};\n\nexport interface IGitCommitGraphProps {\n  /**\n   * A list of commits with its own hash and its parents' hashes.\n   */\n  commits: ICommit[];\n  /**\n   * Callback to inquire the height of a specific SinglePastCommitInfo component.\n   */\n  getNodeHeight: (sha: string) => number;\n  /**\n   * Radius of the commit dot.\n   */\n  dotRadius?: number;\n  /**\n   * Width of the lines connecting the commit dots.\n   */\n  lineWidth?: number;\n}\n\nexport class GitCommitGraph extends React.Component<IGitCommitGraphProps> {\n  constructor(props: IGitCommitGraphProps) {\n    super(props);\n    this._graphData = [];\n    this._x_step = DEFAULT_BRANCH_GAP;\n    this._dotRadius = this.props.dotRadius || DEFAULT_RADIUS;\n    this._lineWidth = this.props.lineWidth || DEFAULT_LINE_WIDTH;\n  }\n\n  getGraphData(): INode[] {\n    this._graphData = generateGraphData(\n      this.props.commits,\n      this.props.getNodeHeight\n    );\n    return this._graphData;\n  }\n\n  getBranchCount(): number {\n    return branchCount(this.getGraphData());\n  }\n\n  getWidth(): number {\n    return (this.getBranchCount() + 0.5) * this._x_step;\n  }\n\n  getHeight(): number {\n    return (\n      this._graphData[this._graphData.length - 1].yOffset +\n      this.props.getNodeHeight(\n        this.props.commits[this.props.commits.length - 1].sha\n      )\n    );\n  }\n\n  renderRouteNode(svgPathDataAttribute: string, branch: number): JSX.Element {\n    const colour = getColour(branch);\n    const style = {\n      stroke: colour,\n      'stroke-width': this._lineWidth,\n      fill: 'none'\n    };\n\n    const classes = `commits-graph-branch-${branch}`;\n\n    return (\n      <path d={svgPathDataAttribute} style={style} className={classes}></path>\n    );\n  }\n\n  renderRoute(yOffset: number, route: IRoute, height: number): JSX.Element {\n    const { from, to, branch } = route;\n    const x_step = this._x_step;\n\n    const svgPath = new SVGPathData();\n\n    const from_x = (from + 1) * x_step;\n    const from_y = yOffset;\n    const to_x = (to + 1) * x_step;\n    const to_y = yOffset + height;\n\n    svgPath.moveTo(from_x, from_y);\n    if (from_x === to_x) {\n      svgPath.lineTo(to_x, to_y);\n    } else {\n      svgPath.bezierCurveTo(\n        from_x - x_step / 4,\n        from_y + height / 2,\n        to_x + x_step / 4,\n        to_y - height / 2,\n        to_x,\n        to_y\n      );\n    }\n\n    return this.renderRouteNode(svgPath.toString(), branch);\n  }\n\n  renderCommitNode(\n    x: number,\n    y: number,\n    sha: string,\n    dot_branch: number\n  ): JSX.Element {\n    const radius = this._dotRadius;\n\n    const colour = getColour(dot_branch);\n    const strokeWidth = 1;\n    const style = {\n      stroke: colour,\n      'stroke-width': strokeWidth,\n      fill: colour\n    };\n\n    const classes = `commits-graph-branch-${dot_branch}`;\n\n    return (\n      <circle\n        cx={x}\n        cy={y}\n        r={radius}\n        style={style}\n        data-sha={sha}\n        className={classes}\n      >\n        <title>{sha.slice(0, 7)}</title>\n      </circle>\n    );\n  }\n\n  renderCommit(commit: INode): [JSX.Element, JSX.Element[]] {\n    const { sha, dot, routes, yOffset } = commit;\n    const { lateralOffset, branch } = dot;\n\n    // draw dot\n    const x = (lateralOffset + 1) * this._x_step;\n    const y = yOffset;\n\n    const commitNode = this.renderCommitNode(x, y, sha, branch);\n\n    const routeNodes = routes.map(route =>\n      this.renderRoute(\n        commit.yOffset,\n        route,\n        this.props.getNodeHeight(commit.sha)\n      )\n    );\n    return [commitNode, routeNodes];\n  }\n\n  render(): JSX.Element {\n    // reset lookup table of commit node locations\n    const allCommitNodes: JSX.Element[] = [];\n    let allRouteNodes: JSX.Element[] = [];\n    const commitNodes = this.getGraphData();\n    commitNodes.forEach(node => {\n      const commit = node;\n      const [commitNode, routeNodes] = this.renderCommit(commit);\n      allCommitNodes.push(commitNode);\n      allRouteNodes = allRouteNodes.concat(routeNodes);\n    });\n\n    const children = [].concat(allRouteNodes, allCommitNodes);\n\n    const height = this.getHeight();\n    const width = this.getWidth();\n\n    const style = { height, width, 'flex-shrink': 0 };\n\n    return (\n      <svg height={height} width={width} style={style}>\n        {...children}\n      </svg>\n    );\n  }\n\n  private _graphData: INode[];\n  private _x_step: number;\n  private _dotRadius: number;\n  private _lineWidth: number;\n}\n"]}