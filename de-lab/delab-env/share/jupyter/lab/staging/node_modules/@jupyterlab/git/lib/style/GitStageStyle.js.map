{"version":3,"file":"GitStageStyle.js","sourceRoot":"./@jupyterlab/git/src/","sources":["style/GitStageStyle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAE3E,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,CACnC;IACE,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,KAAK;IACpB,UAAU,EAAE,QAAQ;IACpB,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,KAAK;IACd,UAAU,EAAE,GAAG;IACf,YAAY,EAAE,sDAAsD;IACpE,aAAa,EAAE,KAAK;IACpB,QAAQ,EAAE,MAAM;IAEhB,KAAK,EAAE;QACL,SAAS,EAAE;YACT,eAAe,EAAE,yBAAyB;SAC3C;KACF;CACF,EACD,iBAAiB,CAClB,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,CAC5C,CAAC,GAAG,EAAE;IACJ,MAAM,MAAM,GAAwB;QAClC,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,GAAG;QACZ,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,EAAE;KACV,CAAC;IAEF,MAAM,KAAK,GAAG,mBAAmB,gBAAgB,KAAK,iBAAiB,EAAE,CAAC;IAC1E,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG;QACpB,OAAO,EAAE,OAAO;KACjB,CAAC;IACF,MAAM,aAAa,GAAG,YAAY,gBAAgB,KAAK,iBAAiB,EAAE,CAAC;IAC3E,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG;QAC5B,OAAO,EAAE,OAAO;KACjB,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC,EAAE,CACL,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,CAAC;IAC3C,QAAQ,EAAE,yBAAyB;IACnC,IAAI,EAAE,UAAU;IAChB,YAAY,EAAE,UAAU;IACxB,QAAQ,EAAE,QAAQ;IAClB,UAAU,EAAE,QAAQ;CACrB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,CAAC;IAC1C,QAAQ,EAAE,yBAAyB;IACnC,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,KAAK;CACpB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,CAAC;IAC1C,IAAI,EAAE,UAAU;IAChB,eAAe,EAAE,aAAa;IAC9B,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;IACb,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,MAAM;IACf,WAAW,EAAE,KAAK;CACnB,CAAC,CAAC","sourcesContent":["import { style } from 'typestyle';\nimport { NestedCSSProperties } from 'typestyle/lib/types';\nimport { hiddenButtonStyle, showButtonOnHover } from './ActionButtonStyle';\n\nexport const sectionAreaStyle = style(\n  {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: '4px 0px',\n    padding: '4px',\n    fontWeight: 600,\n    borderBottom: 'var(--jp-border-width) solid var(--jp-border-color2)',\n    letterSpacing: '1px',\n    fontSize: '12px',\n\n    $nest: {\n      '&:hover': {\n        backgroundColor: 'var(--jp-layout-color2)'\n      }\n    }\n  },\n  showButtonOnHover\n);\n\nexport const sectionFileContainerStyle = style(\n  (() => {\n    const styled: NestedCSSProperties = {\n      margin: '0',\n      padding: '0',\n      overflow: 'auto',\n      $nest: {}\n    };\n\n    const focus = `&:focus-within .${sectionAreaStyle} .${hiddenButtonStyle}`;\n    styled.$nest[focus] = {\n      display: 'block'\n    };\n    const hoverSelector = `&:hover .${sectionAreaStyle} .${hiddenButtonStyle}`;\n    styled.$nest[hoverSelector] = {\n      display: 'block'\n    };\n    return styled;\n  })()\n);\n\nexport const sectionHeaderLabelStyle = style({\n  fontSize: 'var(--jp-ui-font-size1)',\n  flex: '1 1 auto',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap'\n});\n\nexport const sectionHeaderSizeStyle = style({\n  fontSize: 'var(--jp-ui-font-size1)',\n  flex: '0 0 auto',\n  whiteSpace: 'nowrap',\n  borderRadius: '2px'\n});\n\nexport const changeStageButtonStyle = style({\n  flex: '0 0 auto',\n  backgroundColor: 'transparent',\n  height: '13px',\n  width: '12px',\n  border: 'none',\n  outline: 'none',\n  paddingLeft: '0px'\n});\n"]}