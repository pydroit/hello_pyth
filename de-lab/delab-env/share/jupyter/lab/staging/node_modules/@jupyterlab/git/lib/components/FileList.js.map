{"version":3,"file":"FileList.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/FileList.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Dialog, showDialog, showErrorMessage } from '@jupyterlab/apputils';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { CommandRegistry } from '@lumino/commands';\nimport { Menu } from '@lumino/widgets';\nimport { Signal } from '@lumino/signaling';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport * as React from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps } from 'react-window';\nimport { addMenuItems, CommandArguments } from '../commandsAndMenu';\nimport { getDiffProvider, GitExtension } from '../model';\nimport { hiddenButtonStyle } from '../style/ActionButtonStyle';\nimport { fileListWrapperClass } from '../style/FileListStyle';\nimport {\n  addIcon,\n  diffIcon,\n  discardIcon,\n  openIcon,\n  removeIcon\n} from '../style/icons';\nimport { ContextCommandIDs, CommandIDs, Git } from '../tokens';\nimport { ActionButton } from './ActionButton';\nimport { FileItem } from './FileItem';\nimport { GitStage } from './GitStage';\nimport { discardAllChanges } from '../widgets/discardAllChanges';\nimport { SelectAllButton } from './SelectAllButton';\n\nexport interface IFileListState {\n  selectedFiles: Git.IStatusFile[];\n  lastClickedFile: Git.IStatusFile | null;\n  markedFiles: Git.IStatusFile[];\n}\n\nexport interface IFileListProps {\n  /**\n   * Modified files\n   */\n  files: Git.IStatusFile[];\n  /**\n   * Git extension model\n   */\n  model: GitExtension;\n  /**\n   * Jupyter App commands registry\n   */\n  commands: CommandRegistry;\n  /**\n   * Extension settings\n   */\n  settings: ISettingRegistry.ISettings;\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\nexport type ContextCommands = Record<Git.Status, ContextCommandIDs[]>;\n\nexport const CONTEXT_COMMANDS: ContextCommands = {\n  'partially-staged': [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileUnstage,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitFileHistory\n  ],\n  'remote-changed': [ContextCommandIDs.gitFileOpen],\n  unstaged: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileStage,\n    ContextCommandIDs.gitFileDiscard,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitFileHistory\n  ],\n  untracked: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileTrack,\n    ContextCommandIDs.gitIgnore,\n    ContextCommandIDs.gitIgnoreExtension,\n    ContextCommandIDs.gitFileDelete\n  ],\n  staged: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileUnstage,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitCommitAmendStaged,\n    ContextCommandIDs.gitFileHistory\n  ],\n  unmodified: [ContextCommandIDs.gitFileHistory],\n  unmerged: [ContextCommandIDs.gitFileDiff]\n};\n\nconst SIMPLE_CONTEXT_COMMANDS: ContextCommands = {\n  'partially-staged': [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileDiscard,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitFileHistory\n  ],\n  'remote-changed': [ContextCommandIDs.gitFileOpen],\n  staged: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileDiscard,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitFileHistory\n  ],\n  unstaged: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitFileDiscard,\n    ContextCommandIDs.gitFileDiff,\n    ContextCommandIDs.gitFileHistory\n  ],\n  untracked: [\n    ContextCommandIDs.gitFileOpen,\n    ContextCommandIDs.gitIgnore,\n    ContextCommandIDs.gitIgnoreExtension,\n    ContextCommandIDs.gitFileDelete\n  ],\n  unmodified: [ContextCommandIDs.gitFileHistory],\n  unmerged: [ContextCommandIDs.gitFileDiff]\n};\n\n/**\n * Compare fileA and fileB.\n * @param fileA\n * @param fileB\n * @returns true if fileA and fileB are equal, otherwise, false.\n */\nconst areFilesEqual = (fileA: Git.IStatusFile, fileB: Git.IStatusFile) => {\n  return (\n    fileA.x === fileB.x &&\n    fileA.y === fileB.y &&\n    fileA.from === fileB.from &&\n    fileA.to === fileB.to &&\n    fileA.status === fileB.status\n  );\n};\n\n/**\n * Wrap mouse event handler to stop event propagation\n * @param fn Mouse event handler\n * @returns Mouse event handler that stops event from propagating\n */\nconst stopPropagationWrapper =\n  (\n    fn: React.EventHandler<React.MouseEvent>\n  ): React.EventHandler<React.MouseEvent> =>\n  (event: React.MouseEvent) => {\n    event.stopPropagation();\n    fn(event);\n  };\n\nexport class FileList extends React.Component<IFileListProps, IFileListState> {\n  constructor(props: IFileListProps) {\n    super(props);\n\n    this.state = {\n      selectedFiles: [],\n      lastClickedFile: null,\n      markedFiles: props.model.markedFiles\n    };\n  }\n\n  componentDidMount(): void {\n    const { model } = this.props;\n    model.markChanged.connect(() => {\n      this.setState({ markedFiles: model.markedFiles });\n    }, this);\n    model.repositoryChanged.connect(() => {\n      this.setState({ markedFiles: model.markedFiles });\n    }, this);\n  }\n\n  componentWillUnmount(): void {\n    Signal.clearData(this);\n  }\n  /**\n   * Open the context menu on the advanced view\n   *\n   * @param selectedFile The file on which the context menu is opened\n   * @param event The click event\n   */\n  openContextMenu = (\n    selectedFile: Git.IStatusFile,\n    event: React.MouseEvent\n  ): void => {\n    event.preventDefault();\n    let selectedFiles: Git.IStatusFile[];\n    if (!this._isSelectedFile(selectedFile)) {\n      this._selectOnlyOneFile(selectedFile);\n      selectedFiles = [selectedFile];\n    } else {\n      selectedFiles = this.state.selectedFiles;\n    }\n\n    const contextMenu = new Menu({ commands: this.props.commands });\n    const commands = CONTEXT_COMMANDS[selectedFiles[0].status];\n    addMenuItems(commands, contextMenu, selectedFiles);\n\n    contextMenu.open(event.clientX, event.clientY);\n  };\n\n  /**\n   * Open the context menu on the simple view\n   *\n   * @param selectedFile The file on which the context menu is opened\n   * @param event The click event\n   */\n  openSimpleContextMenu = (\n    selectedFile: Git.IStatusFile,\n    event: React.MouseEvent\n  ): void => {\n    event.preventDefault();\n\n    const contextMenu = new Menu({ commands: this.props.commands });\n    const commands = SIMPLE_CONTEXT_COMMANDS[selectedFile.status];\n    addMenuItems(commands, contextMenu, [selectedFile]);\n    contextMenu.open(event.clientX, event.clientY);\n  };\n\n  /** Reset all staged files */\n  resetAllStagedFiles = async (event: React.MouseEvent): Promise<void> => {\n    event.stopPropagation();\n    await this.props.model.reset();\n  };\n\n  /** Reset staged selected files */\n  resetSelectedFiles = (file: Git.IStatusFile): void => {\n    if (this._isSelectedFile(file)) {\n      this.state.selectedFiles.forEach(file => this.props.model.reset(file.to));\n    } else {\n      this.props.model.reset(file.to);\n    }\n  };\n\n  /** If the clicked file is selected, open all selected files.\n   * If the clicked file is not selected, open the clicked file only.\n   */\n  openSelectedFiles = (clickedFile: Git.IStatusFile): void => {\n    if (this._isSelectedFile(clickedFile)) {\n      this.props.commands.execute(ContextCommandIDs.gitFileOpen, {\n        files: this.state.selectedFiles\n      } as CommandArguments.IGitContextAction as any);\n    } else {\n      this.props.commands.execute(ContextCommandIDs.gitFileOpen, {\n        files: [clickedFile]\n      } as CommandArguments.IGitContextAction as any);\n    }\n  };\n\n  /** Add all unstaged files */\n  addAllUnstagedFiles = async (event: React.MouseEvent): Promise<void> => {\n    event.stopPropagation();\n\n    await this.props.model.addAllUnstaged();\n  };\n\n  /** Discard changes in all unstaged files */\n  discardAllUnstagedFiles = async (event: React.MouseEvent): Promise<void> => {\n    event.stopPropagation();\n\n    const result = await showDialog({\n      title: this.props.trans.__('Discard all changes'),\n      body: this.props.trans.__(\n        'Are you sure you want to permanently discard changes to all unstaged files? This action cannot be undone.'\n      ),\n      buttons: [\n        Dialog.cancelButton({ label: this.props.trans.__('Cancel') }),\n        Dialog.warnButton({ label: this.props.trans.__('Discard') })\n      ]\n    });\n    if (result.button.accept) {\n      try {\n        await this.props.model.checkout();\n      } catch (reason) {\n        showErrorMessage(\n          this.props.trans.__('Discard all unstaged changes failed.'),\n          reason\n        );\n      }\n    }\n  };\n\n  /** Discard changes in all unstaged and staged files */\n  discardAllChanges = async (event: React.MouseEvent): Promise<void> => {\n    event.stopPropagation();\n    await discardAllChanges(this.props.model, this.props.trans);\n  };\n\n  /** Add a specific unstaged file */\n  addFile = async (...file: string[]): Promise<void> => {\n    await this.props.model.add(...file);\n  };\n\n  /** Discard changes in a specific unstaged or staged file */\n  discardChanges = (file: Git.IStatusFile): void => {\n    if (this._isSelectedFile(file)) {\n      this.props.commands.execute(ContextCommandIDs.gitFileDiscard, {\n        files: this.state.selectedFiles\n      } as CommandArguments.IGitContextAction as any);\n    } else {\n      this.props.commands.execute(ContextCommandIDs.gitFileDiscard, {\n        files: [file]\n      } as CommandArguments.IGitContextAction as any);\n    }\n  };\n\n  /** Add all untracked files */\n  addAllUntrackedFiles = async (event: React.MouseEvent): Promise<void> => {\n    event.stopPropagation();\n    await this.props.model.addAllUntracked();\n  };\n\n  addAllMarkedFiles = async (): Promise<void> => {\n    await this.addFile(...this.markedFiles.map(file => file.to));\n  };\n\n  /**\n   * Select files into state.selectedFiles\n   * @param file The current cliced-on file\n   * @param options Selection options\n   */\n  setSelection = (\n    file: Git.IStatusFile,\n    options?: { singleton?: boolean; group?: boolean }\n  ): void => {\n    if (options && options.singleton) {\n      this._selectOnlyOneFile(file);\n    }\n    if (options && options.group) {\n      this._selectUntilFile(file);\n    }\n    if (!options) {\n      this._toggleFile(file);\n    }\n  };\n\n  /**\n   * Mark files from the latest selected to this one\n   *\n   * @param file The current clicked-on file\n   */\n  markUntilFile = (file: Git.IStatusFile): void => {\n    if (!this.state.lastClickedFile) {\n      this.props.model.setMark(file.to, true);\n      return;\n    }\n    const filesWithMarkBox = this.props.files.filter(\n      fileStatus => !['unmerged', 'remote-changed'].includes(fileStatus.status)\n    );\n\n    const lastClickedFileIndex = filesWithMarkBox.findIndex(fileStatus =>\n      areFilesEqual(fileStatus, this.state.lastClickedFile)\n    );\n    const currentFileIndex = filesWithMarkBox.findIndex(fileStatus =>\n      areFilesEqual(fileStatus, file)\n    );\n\n    if (currentFileIndex > lastClickedFileIndex) {\n      const filesToAdd = filesWithMarkBox.slice(\n        lastClickedFileIndex,\n        currentFileIndex + 1\n      );\n      filesToAdd.forEach(f => this.props.model.setMark(f.to, true));\n    } else {\n      const filesToAdd = filesWithMarkBox.slice(\n        currentFileIndex,\n        lastClickedFileIndex + 1\n      );\n      filesToAdd.forEach(f => this.props.model.setMark(f.to, true));\n    }\n  };\n\n  /**\n   * Set mark status from select-all button\n   *\n   * @param files Files to toggle\n   */\n  toggleAllFiles = (files: Git.IStatusFile[]): void => {\n    const areFilesAllMarked = this._areFilesAllMarked();\n    files.forEach(f => this.props.model.setMark(f.to, !areFilesAllMarked));\n  };\n\n  private _selectOnlyOneFile = (file: Git.IStatusFile): void => {\n    this.setState({\n      selectedFiles: [file],\n      lastClickedFile: file\n    });\n  };\n\n  /**\n   * Toggle selection status of a file\n   * @param file The clicked file\n   */\n  private _toggleFile = (file: Git.IStatusFile): void => {\n    if (file.status !== this.state.lastClickedFile.status) {\n      this._selectOnlyOneFile(file);\n      return;\n    }\n\n    const fileStatus = this.state.selectedFiles.find(fileStatus =>\n      areFilesEqual(fileStatus, file)\n    );\n    if (!fileStatus) {\n      this.setState({\n        selectedFiles: [...this.state.selectedFiles, file],\n        lastClickedFile: file\n      });\n    } else {\n      this.setState({\n        selectedFiles: this.state.selectedFiles.filter(\n          fileStatus => !areFilesEqual(fileStatus, file)\n        ),\n        lastClickedFile: file\n      });\n    }\n  };\n\n  /**\n   * Select a list of files\n   * @param files List of files to select\n   */\n  private _selectFiles = (files: Git.IStatusFile[]): void => {\n    this.setState(prevState => {\n      return {\n        selectedFiles: [\n          ...prevState.selectedFiles,\n          ...files.filter(\n            file => !prevState.selectedFiles.some(f => areFilesEqual(f, file))\n          )\n        ]\n      };\n    });\n  };\n\n  /**\n   * Deselect a list of file\n   * @param files List of file to deselect\n   */\n  private _deselectFiles = (files: Git.IStatusFile[]): void => {\n    this.setState(prevState => {\n      return {\n        selectedFiles: prevState.selectedFiles.filter(\n          selectedFile => !files.some(file => areFilesEqual(selectedFile, file))\n        )\n      };\n    });\n  };\n\n  /**\n   * Handle shift-click behaviour for file selection\n   * @param file The shift-clicked file\n   */\n  private _selectUntilFile = (file: Git.IStatusFile): void => {\n    if (\n      !this.state.lastClickedFile ||\n      file.status !== this.state.lastClickedFile.status\n    ) {\n      this._selectOnlyOneFile(file);\n      return;\n    }\n\n    const selectedFileStatus = this.state.lastClickedFile.status;\n    const allFilesWithSelectedStatus = this.props.files.filter(\n      fileStatus => fileStatus.status === selectedFileStatus\n    );\n\n    const partiallyStagedFiles = this.props.files.filter(\n      fileStatus => fileStatus.status === 'partially-staged'\n    );\n\n    switch (selectedFileStatus) {\n      case 'staged':\n        allFilesWithSelectedStatus.push(\n          ...partiallyStagedFiles.map(\n            fileStatus =>\n              ({\n                ...fileStatus,\n                status: 'staged'\n              } as Git.IStatusFile)\n          )\n        );\n        break;\n      case 'unstaged':\n        allFilesWithSelectedStatus.push(\n          ...partiallyStagedFiles.map(\n            fileStatus =>\n              ({\n                ...fileStatus,\n                status: 'unstaged'\n              } as Git.IStatusFile)\n          )\n        );\n        break;\n    }\n\n    allFilesWithSelectedStatus.sort((a, b) => a.to.localeCompare(b.to));\n\n    const lastClickedFileIndex = allFilesWithSelectedStatus.findIndex(\n      fileStatus => areFilesEqual(fileStatus, this.state.lastClickedFile)\n    );\n    const currentFileIndex = allFilesWithSelectedStatus.findIndex(fileStatus =>\n      areFilesEqual(fileStatus, file)\n    );\n\n    if (currentFileIndex > lastClickedFileIndex) {\n      const highestSelectedIndex = allFilesWithSelectedStatus.findIndex(\n        (file, index) =>\n          index > lastClickedFileIndex && !this._isSelectedFile(file)\n      );\n      if (highestSelectedIndex === -1) {\n        this._deselectFiles(\n          allFilesWithSelectedStatus.slice(currentFileIndex + 1)\n        );\n      } else if (currentFileIndex < highestSelectedIndex) {\n        this._deselectFiles(\n          allFilesWithSelectedStatus.slice(\n            currentFileIndex + 1,\n            highestSelectedIndex\n          )\n        );\n      } else {\n        this._selectFiles(\n          allFilesWithSelectedStatus.slice(\n            highestSelectedIndex,\n            currentFileIndex + 1\n          )\n        );\n      }\n    } else if (currentFileIndex < lastClickedFileIndex) {\n      const lowestSelectedIndex = allFilesWithSelectedStatus.findIndex(\n        (file, index) =>\n          index < lastClickedFileIndex && this._isSelectedFile(file)\n      );\n      if (lowestSelectedIndex === -1) {\n        this._selectFiles(\n          allFilesWithSelectedStatus.slice(\n            currentFileIndex,\n            lastClickedFileIndex\n          )\n        );\n      } else if (currentFileIndex < lowestSelectedIndex) {\n        this._selectFiles(\n          allFilesWithSelectedStatus.slice(\n            currentFileIndex,\n            lowestSelectedIndex\n          )\n        );\n      } else {\n        this._deselectFiles(\n          allFilesWithSelectedStatus.slice(\n            lowestSelectedIndex,\n            currentFileIndex\n          )\n        );\n      }\n    } else {\n      this._selectOnlyOneFile(file);\n    }\n  };\n\n  pullFromRemote = async (event: React.MouseEvent): Promise<void> => {\n    await this.props.commands.execute(CommandIDs.gitPull, {});\n  };\n\n  get markedFiles(): Git.IStatusFile[] {\n    return this.props.model.markedFiles;\n  }\n\n  /**\n   * Render the modified files\n   */\n  render(): JSX.Element {\n    const remoteChangedFiles: Git.IStatusFile[] = [];\n    const unmergedFiles: Git.IStatusFile[] = [];\n\n    if (this.props.settings.composite['simpleStaging']) {\n      const otherFiles: Git.IStatusFile[] = [];\n\n      this.props.files.forEach(file => {\n        switch (file.status) {\n          case 'remote-changed':\n            remoteChangedFiles.push(file);\n            break;\n          case 'unmerged':\n            unmergedFiles.push(file);\n            break;\n          default:\n            otherFiles.push(file);\n            break;\n        }\n      });\n\n      return (\n        <div className={fileListWrapperClass}>\n          <AutoSizer disableWidth={true}>\n            {({ height }) => (\n              <>\n                {this._renderUnmerged(unmergedFiles, height, false)}\n                {this._renderRemoteChanged(remoteChangedFiles, height)}\n                {this._renderSimpleStage(otherFiles, height)}\n              </>\n            )}\n          </AutoSizer>\n        </div>\n      );\n    } else {\n      const stagedFiles: Git.IStatusFile[] = [];\n      const unstagedFiles: Git.IStatusFile[] = [];\n      const untrackedFiles: Git.IStatusFile[] = [];\n\n      this.props.files.forEach(file => {\n        switch (file.status) {\n          case 'staged':\n            stagedFiles.push(file);\n            break;\n          case 'unstaged':\n            unstagedFiles.push(file);\n            break;\n          case 'untracked':\n            untrackedFiles.push(file);\n            break;\n          case 'partially-staged':\n            stagedFiles.push({\n              ...file,\n              status: 'staged'\n            });\n            unstagedFiles.push({\n              ...file,\n              status: 'unstaged'\n            });\n            break;\n          case 'unmerged':\n            unmergedFiles.push(file);\n            break;\n          case 'remote-changed':\n            remoteChangedFiles.push(file);\n            break;\n          default:\n            break;\n        }\n      });\n\n      return (\n        <div\n          className={fileListWrapperClass}\n          onContextMenu={event => event.preventDefault()}\n        >\n          <AutoSizer disableWidth={true}>\n            {({ height }) => (\n              <>\n                {this._renderUnmerged(unmergedFiles, height)}\n                {this._renderRemoteChanged(remoteChangedFiles, height)}\n                {this._renderStaged(stagedFiles, height)}\n                {this._renderChanged(unstagedFiles, height)}\n                {this._renderUntracked(untrackedFiles, height)}\n              </>\n            )}\n          </AutoSizer>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * Test if a file is selected\n   * @param candidate file to test\n   */\n  private _isSelectedFile(candidate: Git.IStatusFile): boolean {\n    return this.state.selectedFiles.some(file =>\n      areFilesEqual(file, candidate)\n    );\n  }\n\n  /**\n   * Render an unmerged file\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderUnmergedRow = (\n    rowProps: ListChildComponentProps\n  ): JSX.Element => {\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    const diffButton = this._createDiffButton(file);\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={!file.is_binary && diffButton}\n        contextMenu={this.openContextMenu}\n        file={file}\n        model={this.props.model}\n        selected={this._isSelectedFile(file)}\n        setSelection={this.setSelection}\n        onDoubleClick={() => this._openDiffViews([file])}\n        style={{ ...style }}\n      />\n    );\n  };\n\n  private _renderUnmerged(\n    files: Git.IStatusFile[],\n    height: number,\n    collapsible = true\n  ) {\n    // Hide section if no merge conflicts are present\n    return files.length > 0 ? (\n      <GitStage\n        collapsible={collapsible}\n        files={files}\n        heading={this.props.trans.__('Conflicted')}\n        height={height}\n        rowRenderer={this._renderUnmergedRow}\n      />\n    ) : null;\n  }\n\n  /**\n   * Render a staged file\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderStagedRow = (\n    rowProps: ListChildComponentProps\n  ): JSX.Element => {\n    const doubleClickDiff = this.props.settings.get('doubleClickDiff')\n      .composite as boolean;\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    const diffButton = this._createDiffButton(file);\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={\n          <React.Fragment>\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={openIcon}\n              title={this.props.trans.__('Open this file')}\n              onClick={stopPropagationWrapper(() =>\n                this.openSelectedFiles(file)\n              )}\n            />\n            {diffButton}\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={removeIcon}\n              title={this.props.trans.__('Unstage this change')}\n              onClick={stopPropagationWrapper(() => {\n                this.resetSelectedFiles(file);\n              })}\n            />\n          </React.Fragment>\n        }\n        file={file}\n        contextMenu={this.openContextMenu}\n        model={this.props.model}\n        selected={this._isSelectedFile(file)}\n        setSelection={this.setSelection}\n        onDoubleClick={\n          doubleClickDiff\n            ? diffButton\n              ? () => this._openDiffViews([file])\n              : () => undefined\n            : () => this.openSelectedFiles(file)\n        }\n        style={style}\n      />\n    );\n  };\n\n  /**\n   * Render the staged files list.\n   *\n   * @param files The staged files\n   * @param height The height of the HTML element\n   */\n  private _renderStaged(files: Git.IStatusFile[], height: number) {\n    return (\n      <GitStage\n        actions={\n          <ActionButton\n            className={hiddenButtonStyle}\n            disabled={files.length === 0}\n            icon={removeIcon}\n            title={this.props.trans.__('Unstage all changes')}\n            onClick={this.resetAllStagedFiles}\n          />\n        }\n        collapsible\n        files={files}\n        heading={this.props.trans.__('Staged')}\n        height={height}\n        rowRenderer={this._renderStagedRow}\n      />\n    );\n  }\n\n  /**\n   * Render a changed file\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderChangedRow = (\n    rowProps: ListChildComponentProps\n  ): JSX.Element => {\n    const doubleClickDiff = this.props.settings.get('doubleClickDiff')\n      .composite as boolean;\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    const diffButton = this._createDiffButton(file);\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={\n          <React.Fragment>\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={openIcon}\n              title={this.props.trans.__('Open this file')}\n              onClick={stopPropagationWrapper(() =>\n                this.openSelectedFiles(file)\n              )}\n            />\n            {diffButton}\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={discardIcon}\n              title={this.props.trans.__('Discard changes')}\n              onClick={stopPropagationWrapper(() => {\n                this.discardChanges(file);\n              })}\n            />\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={addIcon}\n              title={this.props.trans.__('Stage this change')}\n              onClick={stopPropagationWrapper(() => {\n                if (this._isSelectedFile(file)) {\n                  this.addFile(\n                    ...this.state.selectedFiles.map(\n                      selectedFile => selectedFile.to\n                    )\n                  );\n                } else {\n                  this.addFile(file.to);\n                }\n              })}\n            />\n          </React.Fragment>\n        }\n        file={file}\n        contextMenu={this.openContextMenu}\n        model={this.props.model}\n        selected={this._isSelectedFile(file)}\n        setSelection={this.setSelection}\n        onDoubleClick={\n          doubleClickDiff\n            ? diffButton\n              ? () => this._openDiffViews([file])\n              : () => undefined\n            : () => this.openSelectedFiles(file)\n        }\n        style={style}\n      />\n    );\n  };\n\n  /**\n   * Render the changed files list\n   *\n   * @param files Changed files\n   * @param height Height of the HTML element\n   */\n  private _renderChanged(files: Git.IStatusFile[], height: number) {\n    const disabled = files.length === 0;\n    return (\n      <GitStage\n        actions={\n          <React.Fragment>\n            <ActionButton\n              className={hiddenButtonStyle}\n              disabled={disabled}\n              icon={discardIcon}\n              title={this.props.trans.__('Discard All Changes')}\n              onClick={this.discardAllUnstagedFiles}\n            />\n            <ActionButton\n              className={hiddenButtonStyle}\n              disabled={disabled}\n              icon={addIcon}\n              title={this.props.trans.__('Stage all changes')}\n              onClick={this.addAllUnstagedFiles}\n            />\n          </React.Fragment>\n        }\n        collapsible\n        heading={this.props.trans.__('Changed')}\n        height={height}\n        files={files}\n        rowRenderer={this._renderChangedRow}\n      />\n    );\n  }\n\n  /**\n   * Render a untracked file.\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderUntrackedRow = (\n    rowProps: ListChildComponentProps\n  ): JSX.Element => {\n    const doubleClickDiff = this.props.settings.get('doubleClickDiff')\n      .composite as boolean;\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={\n          <React.Fragment>\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={openIcon}\n              title={this.props.trans.__('Open this file')}\n              onClick={stopPropagationWrapper(() =>\n                this.openSelectedFiles(file)\n              )}\n            />\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={addIcon}\n              title={this.props.trans.__('Track this file')}\n              onClick={stopPropagationWrapper(() => {\n                if (this._isSelectedFile(file)) {\n                  this.addFile(\n                    ...this.state.selectedFiles.map(\n                      selectedFile => selectedFile.to\n                    )\n                  );\n                } else {\n                  this.addFile(file.to);\n                }\n              })}\n            />\n          </React.Fragment>\n        }\n        file={file}\n        contextMenu={this.openContextMenu}\n        model={this.props.model}\n        onDoubleClick={() => {\n          if (!doubleClickDiff) {\n            this.props.commands.execute(ContextCommandIDs.gitFileOpen, {\n              files: [file]\n            } as CommandArguments.IGitContextAction as any);\n          }\n        }}\n        selected={this._isSelectedFile(file)}\n        setSelection={this.setSelection}\n        style={style}\n      />\n    );\n  };\n\n  /**\n   * Render the untracked files list.\n   *\n   * @param files Untracked files\n   * @param height Height of the HTML element\n   */\n  private _renderUntracked(files: Git.IStatusFile[], height: number) {\n    return (\n      <GitStage\n        actions={\n          <ActionButton\n            className={hiddenButtonStyle}\n            disabled={files.length === 0}\n            icon={addIcon}\n            title={this.props.trans.__('Track all untracked files')}\n            onClick={this.addAllUntrackedFiles}\n          />\n        }\n        collapsible\n        heading={this.props.trans.__('Untracked')}\n        height={height}\n        files={files}\n        rowRenderer={this._renderUntrackedRow}\n      />\n    );\n  }\n\n  /**\n   * Render the remote changed list.\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderRemoteChangedRow = (\n    rowProps: ListChildComponentProps\n  ): JSX.Element => {\n    const doubleClickDiff = this.props.settings.get('doubleClickDiff')\n      .composite as boolean;\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={\n          <React.Fragment>\n            <ActionButton\n              className={hiddenButtonStyle}\n              icon={openIcon}\n              title={this.props.trans.__('Open this file')}\n              onClick={stopPropagationWrapper(() =>\n                this.openSelectedFiles(file)\n              )}\n            />\n          </React.Fragment>\n        }\n        file={file}\n        contextMenu={this.openContextMenu}\n        model={this.props.model}\n        onDoubleClick={() => {\n          if (!doubleClickDiff) {\n            this.props.commands.execute(ContextCommandIDs.gitFileOpen, {\n              files: [file]\n            } as CommandArguments.IGitContextAction as any);\n          }\n        }}\n        selected={this._isSelectedFile(file)}\n        setSelection={this.setSelection}\n        style={style}\n      />\n    );\n  };\n\n  /**\n   * Render the a file that has changed on remote to files list.\n   *\n   * @param files Untracked files\n   * @param height Height of the HTML element\n   */\n  private _renderRemoteChanged(files: Git.IStatusFile[], height: number) {\n    return (\n      files.length > 0 && (\n        <GitStage\n          actions={\n            <ActionButton\n              className={hiddenButtonStyle}\n              disabled={files.length === 0}\n              icon={addIcon}\n              title={this.props.trans.__('Pull from remote branch')}\n              onClick={this.pullFromRemote}\n            />\n          }\n          collapsible\n          heading={this.props.trans.__('Remote Changes')}\n          height={height}\n          files={files}\n          rowRenderer={this._renderRemoteChangedRow}\n        />\n      )\n    );\n  }\n\n  /**\n   * Render a modified file in simple mode.\n   *\n   * Note: This is actually a React.FunctionComponent but defined as\n   * a private method as it needs access to FileList properties.\n   *\n   * @param rowProps Row properties\n   */\n  private _renderSimpleStageRow = (rowProps: ListChildComponentProps) => {\n    const { data, index, style } = rowProps;\n    const file = data[index] as Git.IStatusFile;\n    const doubleClickDiff = this.props.settings.get('doubleClickDiff')\n      .composite as boolean;\n\n    const openFile = (): void => {\n      this.props.commands.execute(ContextCommandIDs.gitFileOpen, {\n        files: [file]\n      } as CommandArguments.IGitContextAction as any);\n    };\n\n    // Default value for actions and double click\n    let actions: JSX.Element = (\n      <ActionButton\n        className={hiddenButtonStyle}\n        icon={openIcon}\n        title={this.props.trans.__('Open this file')}\n        onClick={stopPropagationWrapper(openFile)}\n      />\n    );\n    let onDoubleClick = doubleClickDiff ? (): void => undefined : openFile;\n\n    if (file.status === 'unstaged' || file.status === 'partially-staged') {\n      const diffButton = this._createDiffButton(file);\n      actions = (\n        <React.Fragment>\n          <ActionButton\n            className={hiddenButtonStyle}\n            icon={openIcon}\n            title={this.props.trans.__('Open this file')}\n            onClick={stopPropagationWrapper(openFile)}\n          />\n          {diffButton}\n          <ActionButton\n            className={hiddenButtonStyle}\n            icon={discardIcon}\n            title={this.props.trans.__('Discard changes')}\n            onClick={stopPropagationWrapper(() => {\n              this.discardChanges(file);\n            })}\n          />\n        </React.Fragment>\n      );\n      onDoubleClick = doubleClickDiff\n        ? diffButton\n          ? () => this._openDiffViews([file])\n          : () => undefined\n        : openFile;\n    } else if (file.status === 'staged') {\n      const diffButton = this._createDiffButton(file);\n      actions = (\n        <React.Fragment>\n          <ActionButton\n            className={hiddenButtonStyle}\n            icon={openIcon}\n            title={this.props.trans.__('Open this file')}\n            onClick={stopPropagationWrapper(openFile)}\n          />\n          {diffButton}\n          <ActionButton\n            className={hiddenButtonStyle}\n            icon={discardIcon}\n            title={this.props.trans.__('Discard changes')}\n            onClick={stopPropagationWrapper(() => {\n              this.discardChanges(file);\n            })}\n          />\n        </React.Fragment>\n      );\n      onDoubleClick = doubleClickDiff\n        ? diffButton\n          ? () => this._openDiffViews([file])\n          : () => undefined\n        : openFile;\n    }\n\n    const checked = this.markedFiles.some(fileStatus =>\n      areFilesEqual(fileStatus, file)\n    );\n    return (\n      <FileItem\n        trans={this.props.trans}\n        actions={actions}\n        file={file}\n        markBox={true}\n        model={this.props.model}\n        onDoubleClick={onDoubleClick}\n        contextMenu={this.openSimpleContextMenu}\n        setSelection={this.setSelection}\n        style={style}\n        markUntilFile={this.markUntilFile}\n        checked={checked}\n      />\n    );\n  };\n\n  /**\n   * Render the modified files in simple mode.\n   *\n   * @param files Modified files\n   * @param height Height of the HTML element\n   */\n  private _renderSimpleStage(files: Git.IStatusFile[], height: number) {\n    return (\n      <GitStage\n        selectAllButton={\n          <SelectAllButton\n            onChange={() => {\n              this.toggleAllFiles(files);\n            }}\n            checked={this._areFilesAllMarked()}\n          />\n        }\n        actions={\n          <ActionButton\n            className={hiddenButtonStyle}\n            disabled={files.length === 0}\n            icon={discardIcon}\n            title={this.props.trans.__('Discard All Changes')}\n            onClick={this.discardAllChanges}\n          />\n        }\n        heading={this.props.trans.__('Changed')}\n        height={height}\n        files={files}\n        rowRenderer={this._renderSimpleStageRow}\n      />\n    );\n  }\n\n  /**\n   * Creates a button element which, depending on the settings, is used\n   * to either request a diff of the file, or open the file\n   *\n   * @param path File path of interest\n   * @param currentRef the ref to diff against the git 'HEAD' ref\n   */\n  private _createDiffButton(file: Git.IStatusFile): JSX.Element {\n    let handleClick: () => void;\n    if (this.props.settings.composite['simpleStaging']) {\n      handleClick = () => this._openDiffViews([file]);\n    } else {\n      handleClick = () => {\n        if (this._isSelectedFile(file)) {\n          this._openDiffViews(this.state.selectedFiles);\n        } else {\n          this._openDiffViews([file]);\n        }\n      };\n    }\n    return (\n      (getDiffProvider(file.to) || !file.is_binary) && (\n        <ActionButton\n          className={hiddenButtonStyle}\n          icon={diffIcon}\n          title={this.props.trans.__('Diff this file')}\n          onClick={stopPropagationWrapper(handleClick)}\n        />\n      )\n    );\n  }\n\n  /**\n   * Returns a callback which opens a diff of the file\n   *\n   * @param file File to open diff for\n   * @param currentRef the ref to diff against the git 'HEAD' ref\n   */\n  private async _openDiffViews(files: Git.IStatusFile[]): Promise<void> {\n    try {\n      await this.props.commands.execute(ContextCommandIDs.gitFileDiff, {\n        files: files.map(file => ({\n          filePath: file.to,\n          isText: !file.is_binary,\n          status: file.status\n        }))\n      } as CommandArguments.IGitFileDiff as any);\n    } catch (reason) {\n      console.error(`Failed to open diff views.\\n${reason}`);\n    }\n  }\n\n  /**\n   * Determine if files in simple staging are all marked\n   * @returns True if files are all marked\n   */\n  private _areFilesAllMarked(): boolean {\n    const filesForSimpleStaging = this.props.files.filter(\n      file => !['unmerged', 'remote-changed'].includes(file.status)\n    );\n    return (\n      filesForSimpleStaging.length !== 0 &&\n      filesForSimpleStaging.every(file =>\n        this.state.markedFiles.some(mf => areFilesEqual(file, mf))\n      )\n    );\n  }\n}\n"]}