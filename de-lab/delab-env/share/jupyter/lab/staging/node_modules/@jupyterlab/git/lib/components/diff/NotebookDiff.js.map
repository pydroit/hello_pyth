{"version":3,"file":"NotebookDiff.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/diff/NotebookDiff.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Modified from nbdime\n * https://github.com/jupyter/nbdime/blob/master/packages/labextension/src/widget.ts\n */\n\n/* eslint-disable no-inner-declarations */\n\nimport { Toolbar } from '@jupyterlab/apputils';\nimport { Contents } from '@jupyterlab/services';\nimport { INotebookContent } from '@jupyterlab/nbformat';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { Panel, Widget } from '@lumino/widgets';\nimport { IDiffEntry } from 'nbdime/lib/diff/diffentries';\nimport { IMergeDecision } from 'nbdime/lib/merge/decisions';\nimport { NotebookMergeModel } from 'nbdime/lib/merge/model';\nimport { CELLMERGE_CLASS, NotebookMergeWidget } from 'nbdime/lib/merge/widget';\nimport { UNCHANGED_MERGE_CLASS } from 'nbdime/lib/merge/widget/common';\nimport { NotebookDiffModel } from 'nbdime/lib/diff/model';\nimport { CELLDIFF_CLASS, NotebookDiffWidget } from 'nbdime/lib/diff/widget';\nimport {\n  CHUNK_PANEL_CLASS,\n  UNCHANGED_DIFF_CLASS\n} from 'nbdime/lib/diff/widget/common';\nimport { requestAPI } from '../../git';\nimport { Git } from '../../tokens';\nimport {\n  ITranslator,\n  nullTranslator,\n  TranslationBundle\n} from '@jupyterlab/translation';\n\n/**\n * Class of the outermost widget, the draggable tab\n */\nconst NBDIME_CLASS = 'nbdime-Widget';\n\n/**\n * Class of the root of the actual diff, the scroller element\n */\nexport const ROOT_CLASS = 'nbdime-root';\n\n/**\n * DOM class for whether or not to hide unchanged cells\n */\nconst HIDE_UNCHANGED_CLASS = 'jp-mod-hideUnchanged';\n\n/**\n * Data return by the ndbime api endpoint\n */\ninterface INbdimeDiff {\n  /**\n   * Base notebook content\n   */\n  base: INotebookContent;\n  /**\n   * Diff to obtain challenger from base\n   */\n  diff: IDiffEntry[];\n}\n\ninterface INbdimeMergeDiff {\n  /**\n   * Base notebook content\n   */\n  base: INotebookContent;\n  /**\n   * Set of decisions made by comparing\n   * reference, challenger, and base notebooks\n   */\n  merge_decisions: IMergeDecision[];\n}\n\n/**\n * Diff callback to be registered for notebook files.\n *\n * @param model Diff model\n * @param toolbar MainAreaWidget toolbar\n * @returns Diff notebook widget\n */\nexport const createNotebookDiff = async (\n  model: Git.Diff.IModel,\n  renderMime: IRenderMimeRegistry,\n  toolbar?: Toolbar,\n  translator?: ITranslator\n): Promise<NotebookDiff> => {\n  // Create the notebook diff view\n  const trans = translator.load('jupyterlab_git');\n  const diffWidget = new NotebookDiff(model, renderMime, trans);\n  diffWidget.addClass('jp-git-diff-root');\n\n  await diffWidget.ready;\n\n  // Add elements in toolbar\n  if (toolbar) {\n    const checkbox = document.createElement('input');\n    const label = document.createElement('label');\n    checkbox.className = 'nbdime-hide-unchanged';\n    checkbox.type = 'checkbox';\n    checkbox.checked = true;\n    label.appendChild(checkbox);\n    label.appendChild(document.createElement('span')).textContent = trans.__(\n      'Hide unchanged cells'\n    );\n    toolbar.addItem('hideUnchanged', new Widget({ node: label }));\n\n    if (model.hasConflict) {\n      // Move merge notebook controls in the toolbar\n      toolbar.addItem('clear-outputs', diffWidget.nbdimeWidget.widgets[0]);\n    }\n\n    // Connect toolbar checkbox and notebook diff widget\n    diffWidget.areUnchangedCellsHidden = checkbox.checked;\n    checkbox.onchange = () => {\n      diffWidget.areUnchangedCellsHidden = checkbox.checked;\n    };\n  }\n\n  return diffWidget;\n};\n\n/**\n * NotebookDiff widget\n */\nexport class NotebookDiff extends Panel implements Git.Diff.IDiffWidget {\n  constructor(\n    model: Git.Diff.IModel,\n    renderMime: IRenderMimeRegistry,\n    translator?: TranslationBundle\n  ) {\n    super();\n    const getReady = new PromiseDelegate<void>();\n    this._isReady = getReady.promise;\n    this._model = model;\n    this._renderMime = renderMime;\n    this._trans = translator ?? nullTranslator.load('jupyterlab_git');\n\n    this.addClass(NBDIME_CLASS);\n\n    this.refresh()\n      .then(() => {\n        getReady.resolve();\n      })\n      .catch(reason => {\n        console.error(\n          this._trans.__('Failed to refresh Notebook diff.'),\n          reason,\n          reason?.traceback\n        );\n      });\n  }\n\n  /**\n   * Whether the unchanged cells are hidden or not\n   */\n  get areUnchangedCellsHidden(): boolean {\n    return this._areUnchangedCellsHidden;\n  }\n  set areUnchangedCellsHidden(v: boolean) {\n    if (this._areUnchangedCellsHidden !== v) {\n      Private.toggleShowUnchanged(\n        this._scroller,\n        this._hasConflict,\n        this._areUnchangedCellsHidden\n      );\n      this._areUnchangedCellsHidden = v;\n    }\n  }\n\n  /**\n   * Helper to determine if a notebook merge should be shown.\n   */\n  private get _hasConflict(): boolean {\n    return this._model.hasConflict;\n  }\n\n  /**\n   * Diff model\n   */\n  get model(): Git.Diff.IModel {\n    return this._model;\n  }\n\n  /**\n   * Nbdime notebook widget.\n   */\n  get nbdimeWidget(): NotebookDiffWidget | NotebookMergeWidget {\n    return this._nbdWidget;\n  }\n\n  /**\n   * Promise which fulfills when the widget is ready.\n   */\n  get ready(): Promise<void> {\n    return this._isReady;\n  }\n\n  /**\n   * Checks if all conflicts have been resolved.\n   *\n   * @see https://github.com/jupyter/nbdime/blob/a74b538386d05e3e9c26753ad21faf9ff4d269d7/packages/webapp/src/app/save.ts#L2\n   */\n  get isFileResolved(): boolean {\n    const widget = this.nbdimeWidget as NotebookMergeWidget;\n    this._lastSerializeModel = widget.model.serialize();\n    const validated = widget.validateMerged(this._lastSerializeModel);\n    return (\n      JSON.stringify(this._lastSerializeModel) === JSON.stringify(validated)\n    );\n  }\n\n  /**\n   * Gets the file model of a resolved merge conflict,\n   * and rejects if unable to retrieve.\n   *\n   * Note: `isFileResolved` is assumed to not have been called,\n   * or to have been called just before calling this method for caching purposes.\n   */\n  async getResolvedFile(): Promise<Partial<Contents.IModel>> {\n    return Promise.resolve({\n      format: 'json',\n      type: 'notebook',\n      content:\n        this._lastSerializeModel ??\n        (this.nbdimeWidget as NotebookMergeWidget).model.serialize()\n    });\n  }\n\n  /**\n   * Refresh diff\n   *\n   * Note: Update the content and recompute the diff\n   */\n  async refresh(): Promise<void> {\n    if (!this._scroller?.parent) {\n      while (this.widgets.length > 0) {\n        this.widgets[0].dispose();\n      }\n\n      const header = Private.diffHeader(\n        this._model.reference.label,\n        this._model.challenger.label,\n        this._hasConflict,\n        this._trans.__('Common Ancestor')\n      );\n      this.addWidget(header);\n\n      this._scroller = new Panel();\n      this._scroller.addClass(ROOT_CLASS);\n      this._scroller.node.tabIndex = -1;\n      this.addWidget(this._scroller);\n    }\n\n    try {\n      // ENH request content only if it changed\n      const referenceContent = await this._model.reference.content();\n      const challengerContent = await this._model.challenger.content();\n      const baseContent = await this._model.base?.content();\n\n      const createView = baseContent\n        ? this.createMergeView.bind(this)\n        : this.createDiffView.bind(this);\n\n      this._nbdWidget = await createView(\n        challengerContent,\n        referenceContent,\n        baseContent\n      );\n\n      while (this._scroller.widgets.length > 0) {\n        this._scroller.widgets[0].dispose();\n      }\n      this._scroller.addWidget(this._nbdWidget);\n      try {\n        await this._nbdWidget.init();\n\n        Private.markUnchangedRanges(this._scroller.node, this._hasConflict);\n      } catch (reason) {\n        // FIXME there is a bug in nbdime and init got reject due to recursion limit hit\n        // console.error(`Failed to init notebook diff view: ${reason}`);\n        // getReady.reject(reason);\n        console.debug(\n          this._trans.__('Failed to init notebook diff view: %1', reason)\n        );\n        Private.markUnchangedRanges(this._scroller.node, this._hasConflict);\n      }\n    } catch (reason) {\n      this.showError(reason as Error);\n    }\n  }\n\n  protected async createDiffView(\n    challengerContent: string,\n    referenceContent: string\n  ): Promise<NotebookDiffWidget> {\n    const data = await requestAPI<INbdimeDiff>('diffnotebook', 'POST', {\n      currentContent: challengerContent,\n      previousContent: referenceContent\n    });\n\n    const model = new NotebookDiffModel(data.base, data.diff);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return new NotebookDiffWidget(model, this._renderMime);\n  }\n\n  protected async createMergeView(\n    challengerContent: string,\n    referenceContent: string,\n    baseContent: string\n  ): Promise<NotebookMergeWidget> {\n    const data = await requestAPI<INbdimeMergeDiff>('diffnotebook', 'POST', {\n      currentContent: challengerContent,\n      previousContent: referenceContent,\n      baseContent\n    });\n\n    const model = new NotebookMergeModel(data.base, data.merge_decisions);\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return new NotebookMergeWidget(model, this._renderMime);\n  }\n\n  /**\n   * Handle `'activate-request'` messages.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this._scroller?.parent) {\n      this._scroller.node.focus();\n    }\n  }\n\n  /**\n   * Display an error instead of the file diff\n   *\n   * @param error Error object\n   */\n  protected showError(error: Error): void {\n    console.error(\n      this._trans.__('Failed to load file diff.'),\n      error,\n      (error as any)?.traceback\n    );\n\n    while (this.widgets.length > 0) {\n      this.widgets[0].dispose();\n    }\n\n    const msg = ((error.message || error) as string).replace('\\n', '<br />');\n    this.node.innerHTML = `<p class=\"jp-git-diff-error\">\n      <span>${this._trans.__('Error Loading Notebook Diff:')}</span>\n      <span class=\"jp-git-diff-error-message\">${msg}</span>\n    </p>`;\n  }\n\n  protected _areUnchangedCellsHidden = false;\n  protected _isReady: Promise<void>;\n  protected _lastSerializeModel: INotebookContent | null = null;\n  protected _model: Git.Diff.IModel;\n  protected _nbdWidget: NotebookMergeWidget | NotebookDiffWidget;\n  protected _renderMime: IRenderMimeRegistry;\n  protected _scroller: Panel;\n  protected _trans: TranslationBundle;\n}\n\nnamespace Private {\n  /**\n   * Create a header widget for the diff view.\n   */\n  export function diffHeader(\n    localLabel: string,\n    remoteLabel: string,\n    hasConflict: boolean,\n    baseLabel?: string\n  ): Widget {\n    const bannerClass = hasConflict\n      ? 'jp-git-merge-banner'\n      : 'jp-git-diff-banner';\n    const node = document.createElement('div');\n    node.className = 'jp-git-diff-header';\n    node.innerHTML = `<div class=\"${bannerClass}\">\n        <span>${localLabel}</span>\n        <span class=\"jp-spacer\"></span>\n        ${\n          hasConflict\n            ? // Add extra space during notebook merge view\n              `<span>${baseLabel}</span><span class=\"jp-spacer\"></span>`\n            : ''\n        }\n        <span>${remoteLabel}</span>\n      </div>`;\n\n    return new Widget({ node });\n  }\n\n  /**\n   * Toggle whether to show or hide unchanged cells.\n   *\n   * This simply marks with a class, real work is done by CSS.\n   */\n  export function toggleShowUnchanged(\n    root: Widget,\n    hasConflict: boolean,\n    show?: boolean\n  ): void {\n    const hiding = root.hasClass(HIDE_UNCHANGED_CLASS);\n    if (show === undefined) {\n      show = hiding;\n    } else if (hiding !== show) {\n      // Nothing to do\n      return;\n    }\n    if (show) {\n      root.removeClass(HIDE_UNCHANGED_CLASS);\n    } else {\n      markUnchangedRanges(root.node, hasConflict);\n      root.addClass(HIDE_UNCHANGED_CLASS);\n    }\n    root.update();\n  }\n\n  /**\n   * Gets the chunk element of an added/removed cell, or the cell element for others\n   * @param cellElement\n   */\n  function getChunkElement(cellElement: Element): Element {\n    if (\n      !cellElement.parentElement ||\n      !cellElement.parentElement.parentElement\n    ) {\n      return cellElement;\n    }\n    const chunkCandidate = cellElement.parentElement.parentElement;\n    if (chunkCandidate.classList.contains(CHUNK_PANEL_CLASS)) {\n      return chunkCandidate;\n    }\n    return cellElement;\n  }\n\n  /**\n   * Marks certain cells with\n   */\n  export function markUnchangedRanges(\n    root: HTMLElement,\n    hasConflict: boolean\n  ): void {\n    const CELL_CLASS = hasConflict ? CELLMERGE_CLASS : CELLDIFF_CLASS;\n    const UNCHANGED_CLASS = hasConflict\n      ? UNCHANGED_MERGE_CLASS\n      : UNCHANGED_DIFF_CLASS;\n    const NOTEBOOK_CLASS = hasConflict\n      ? '.jp-Notebook-merge'\n      : '.jp-Notebook-diff';\n\n    const children = root.querySelectorAll(`.${CELL_CLASS}`);\n    let rangeStart = -1;\n    for (let i = 0; i < children.length; ++i) {\n      const child = children[i];\n      if (!child.classList.contains(UNCHANGED_CLASS)) {\n        // Visible\n        if (rangeStart !== -1) {\n          // Previous was hidden\n          const N = i - rangeStart;\n          getChunkElement(child).setAttribute(\n            'data-nbdime-NCellsHiddenBefore',\n            N.toString()\n          );\n          rangeStart = -1;\n        }\n      } else if (rangeStart === -1) {\n        rangeStart = i;\n      }\n    }\n    if (rangeStart !== -1) {\n      // Last element was part of a hidden range, need to mark\n      // the last cell that will be visible.\n      const N = children.length - rangeStart;\n      if (rangeStart === 0) {\n        // All elements were hidden, nothing to mark\n        // Add info on root instead\n        const tag = root.querySelector(NOTEBOOK_CLASS) ?? root;\n        tag.setAttribute('data-nbdime-AllCellsHidden', N.toString());\n        return;\n      }\n      const lastVisible = children[rangeStart - 1];\n      getChunkElement(lastVisible).setAttribute(\n        'data-nbdime-NCellsHiddenAfter',\n        N.toString()\n      );\n    }\n  }\n}\n"]}