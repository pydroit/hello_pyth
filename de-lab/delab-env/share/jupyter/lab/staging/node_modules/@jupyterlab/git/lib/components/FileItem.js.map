{"version":3,"file":"FileItem.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/FileItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TranslationBundle } from '@jupyterlab/translation';\nimport * as React from 'react';\nimport { classes } from 'typestyle';\nimport { GitExtension } from '../model';\nimport {\n  checkboxLabelContainerStyle,\n  checkboxLabelLastContainerStyle,\n  checkboxLabelStyle,\n  fileChangedLabelBrandStyle,\n  fileChangedLabelInfoStyle,\n  fileChangedLabelStyle,\n  fileChangedLabelWarnStyle,\n  fileStyle,\n  gitMarkBoxStyle,\n  selectedFileChangedLabelStyle,\n  selectedFileStyle\n} from '../style/FileItemStyle';\nimport { fileLabelStyle } from '../style/FilePathStyle';\nimport { Git } from '../tokens';\nimport { FilePath } from './FilePath';\n\n// Git status codes https://git-scm.com/docs/git-status\nexport const STATUS_CODES = {\n  M: 'Modified',\n  A: 'Added',\n  D: 'Deleted',\n  R: 'Renamed',\n  C: 'Copied',\n  U: 'Updated',\n  B: 'Behind',\n  '?': 'Untracked',\n  '!': 'Ignored'\n};\n\n/**\n * File marker properties\n */\ninterface IGitMarkBoxProps {\n  /**\n   * Filename\n   */\n  fname: string;\n  /**\n   * Git repository model\n   */\n  model: GitExtension;\n  /**\n   * File status\n   */\n  stage: Git.Status;\n  /**\n   * Whether the checkbox is checked\n   */\n  checked: boolean;\n}\n\n/**\n * Render the selection box in simple mode\n */\nclass GitMarkBox extends React.PureComponent<IGitMarkBoxProps> {\n  protected _onDoubleClick = (\n    event: React.MouseEvent<HTMLInputElement>\n  ): void => {\n    event.stopPropagation();\n  };\n\n  render(): JSX.Element {\n    // idempotent, will only run once per file\n    this.props.model.addMark(\n      this.props.fname,\n      this.props.stage !== 'untracked'\n    );\n\n    return (\n      <input\n        name=\"gitMark\"\n        className={gitMarkBoxStyle}\n        type=\"checkbox\"\n        checked={this.props.checked}\n        onDoubleClick={this._onDoubleClick}\n      />\n    );\n  }\n}\n\n/**\n * File item properties\n */\nexport interface IFileItemProps {\n  /**\n   * Action buttons on the file\n   */\n  actions?: React.ReactElement;\n  /**\n   * Callback to open a context menu on the file\n   */\n  contextMenu?: (file: Git.IStatusFile, event: React.MouseEvent) => void;\n  /**\n   * File model\n   */\n  file: Git.IStatusFile;\n  /**\n   * Is the file marked?\n   */\n  markBox?: boolean;\n  /**\n   * Git repository model\n   */\n  model: GitExtension;\n  /**\n   * Callback on double click\n   */\n  onDoubleClick: () => void;\n  /**\n   * Is the file selected?\n   */\n  selected?: boolean;\n  /**\n   * Callback to select file(s)\n   */\n  setSelection?: (\n    file: Git.IStatusFile,\n    options?: { singleton?: boolean; group?: boolean }\n  ) => void;\n  /**\n   * Optional style class\n   */\n  className?: string;\n  /**\n   * Inline styling for the windowing\n   */\n  style?: React.CSSProperties;\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n  /**\n   * Callback to implement shift-click for simple staging\n   */\n  markUntilFile?: (file: Git.IStatusFile) => void;\n  /**\n   * whether the GitMarkBox is checked\n   */\n  checked?: boolean;\n}\n\nexport class FileItem extends React.PureComponent<IFileItemProps> {\n  constructor(props: IFileItemProps) {\n    super(props);\n  }\n\n  protected _onClick = (event: React.MouseEvent<HTMLInputElement>): void => {\n    if (this.props.markBox) {\n      if (event.shiftKey) {\n        this.props.markUntilFile(this.props.file);\n      } else {\n        this.props.model.toggleMark(this.props.file.to);\n        this.props.setSelection(this.props.file, { singleton: true });\n      }\n    } else {\n      if (event.ctrlKey || event.metaKey) {\n        this.props.setSelection(this.props.file);\n      } else if (event.shiftKey) {\n        this.props.setSelection(this.props.file, { group: true });\n      } else {\n        this.props.setSelection(this.props.file, { singleton: true });\n      }\n    }\n  };\n\n  protected _getFileChangedLabel(change: keyof typeof STATUS_CODES): string {\n    return STATUS_CODES[change] || 'Unmodified';\n  }\n\n  protected _getFileChangedLabelClass(change: string): string {\n    if (change === 'M') {\n      return this.props.selected\n        ? classes(\n            fileChangedLabelStyle,\n            fileChangedLabelBrandStyle,\n            selectedFileChangedLabelStyle\n          )\n        : classes(fileChangedLabelStyle, fileChangedLabelBrandStyle);\n    } else if (change === '!') {\n      return this.props.selected\n        ? classes(\n            fileChangedLabelStyle,\n            fileChangedLabelWarnStyle,\n            selectedFileChangedLabelStyle\n          )\n        : classes(fileChangedLabelStyle, fileChangedLabelWarnStyle);\n    } else {\n      return this.props.selected\n        ? classes(\n            fileChangedLabelStyle,\n            fileChangedLabelInfoStyle,\n            selectedFileChangedLabelStyle\n          )\n        : classes(fileChangedLabelStyle, fileChangedLabelInfoStyle);\n    }\n  }\n\n  protected _getFileClass(): string {\n    const baseClass = this.props.selected\n      ? classes(fileStyle, selectedFileStyle)\n      : fileStyle;\n\n    return this.props.className\n      ? `${baseClass} ${this.props.className}`\n      : baseClass;\n  }\n\n  render(): JSX.Element {\n    const { file } = this.props;\n    const status_code = file.status === 'staged' ? file.x : file.y;\n    const status =\n      file.status === 'unmerged'\n        ? 'Conflicted'\n        : this._getFileChangedLabel(status_code as any);\n\n    return (\n      <div\n        data-test-selected={this.props.selected}\n        data-test-checked={this.props.checked}\n        className={this._getFileClass()}\n        onClick={this._onClick}\n        onContextMenu={\n          this.props.contextMenu &&\n          (event => {\n            this.props.contextMenu(this.props.file, event);\n          })\n        }\n        onDoubleClick={this.props.onDoubleClick}\n        style={this.props.style}\n        title={this.props.trans.__(`%1 • ${status}`, this.props.file.to)}\n      >\n        <div className={checkboxLabelContainerStyle}>\n          <div className={checkboxLabelStyle + ' ' + fileLabelStyle}>\n            {this.props.markBox && (\n              <GitMarkBox\n                fname={this.props.file.to}\n                stage={this.props.file.status}\n                model={this.props.model}\n                checked={this.props.checked}\n              />\n            )}\n            <FilePath\n              filepath={this.props.file.to}\n              filetype={this.props.file.type}\n            />\n          </div>\n          <div className={checkboxLabelLastContainerStyle}>\n            {this.props.actions}\n            <span\n              className={this._getFileChangedLabelClass(\n                this.props.file.status === 'unmerged' ? '!' : this.props.file.y\n              )}\n            >\n              {this.props.file.status === 'unmerged'\n                ? '!'\n                : this.props.file.y === '?'\n                ? 'U'\n                : status_code}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}