{"version":3,"file":"NewBranchDialog.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/NewBranchDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ListItem from '@material-ui/core/ListItem';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport * as React from 'react';\nimport { ListChildComponentProps, VariableSizeList } from 'react-window';\nimport { classes } from 'typestyle';\nimport { Logger } from '../logger';\nimport { branchIcon } from '../style/icons';\nimport {\n  actionsWrapperClass,\n  activeListItemClass,\n  branchDialogClass,\n  buttonClass,\n  cancelButtonClass,\n  closeButtonClass,\n  contentWrapperClass,\n  createButtonClass,\n  errorMessageClass,\n  filterClass,\n  filterClearClass,\n  filterInputClass,\n  filterWrapperClass,\n  listItemBoldTitleClass,\n  listItemClass,\n  listItemContentClass,\n  listItemDescClass,\n  listItemIconClass,\n  listItemTitleClass,\n  listWrapperClass,\n  nameInputClass,\n  titleClass,\n  titleWrapperClass\n} from '../style/NewBranchDialog';\nimport { Git, IGitExtension, Level } from '../tokens';\n\nconst ITEM_HEIGHT = 27.5; // HTML element height for a single branch\nconst CURRENT_BRANCH_HEIGHT = 66.5; // HTML element height for the current branch with description\nconst HEIGHT = 200; // HTML element height for the branches list\n\n/**\n * Interface describing component properties.\n */\nexport interface INewBranchDialogProps {\n  /**\n   * Current branch name.\n   */\n  currentBranch: string;\n\n  /**\n   * Current list of branches.\n   */\n  branches: Git.IBranch[];\n\n  /**\n   * Extension logger\n   */\n  logger: Logger;\n\n  /**\n   * Git extension data model.\n   */\n  model: IGitExtension;\n\n  /**\n   * Boolean indicating whether to show the dialog.\n   */\n  open: boolean;\n\n  /**\n   * Callback to invoke upon closing the dialog.\n   */\n  onClose: () => void;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\n/**\n * Interface describing component state.\n */\nexport interface INewBranchDialogState {\n  /**\n   * Branch name.\n   */\n  name: string;\n\n  /**\n   * Base branch.\n   */\n  base: string;\n\n  /**\n   * Menu filter.\n   */\n  filter: string;\n\n  /**\n   * Error message.\n   */\n  error: string;\n}\n\n/**\n * React component for rendering a dialog to create a new branch.\n */\nexport class NewBranchDialog extends React.Component<\n  INewBranchDialogProps,\n  INewBranchDialogState\n> {\n  /**\n   * Returns a React component for rendering a branch menu.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: INewBranchDialogProps) {\n    super(props);\n\n    this._branchList = React.createRef<VariableSizeList>();\n    this.state = {\n      name: '',\n      base: props.currentBranch || '',\n      filter: '',\n      error: ''\n    };\n  }\n\n  /**\n   * Renders a dialog for creating a new branch.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    return (\n      <Dialog\n        classes={{\n          paper: branchDialogClass\n        }}\n        open={this.props.open}\n        onClose={this._onClose}\n      >\n        <div className={titleWrapperClass}>\n          <p className={titleClass}>{this.props.trans.__('Create a Branch')}</p>\n          <button className={closeButtonClass}>\n            <ClearIcon\n              titleAccess={this.props.trans.__('Close this dialog')}\n              fontSize=\"small\"\n              onClick={this._onClose}\n            />\n          </button>\n        </div>\n        <div className={contentWrapperClass}>\n          {this.state.error ? (\n            <p className={errorMessageClass}>{this.state.error}</p>\n          ) : null}\n          <p>{this.props.trans.__('Name')}</p>\n          <input\n            className={nameInputClass}\n            type=\"text\"\n            onChange={this._onNameChange}\n            value={this.state.name}\n            placeholder=\"\"\n            title={this.props.trans.__('Enter a branch name')}\n          />\n          <p>{this.props.trans.__('Create branch based on…')}</p>\n          <div className={filterWrapperClass}>\n            <div className={filterClass}>\n              <input\n                className={filterInputClass}\n                type=\"text\"\n                onChange={this._onFilterChange}\n                value={this.state.filter}\n                placeholder={this.props.trans.__('Filter')}\n                title={this.props.trans.__('Filter branch menu')}\n              />\n              {this.state.filter ? (\n                <button className={filterClearClass}>\n                  <ClearIcon\n                    titleAccess={this.props.trans.__(\n                      'Clear the current filter'\n                    )}\n                    fontSize=\"small\"\n                    onClick={this._resetFilter}\n                  />\n                </button>\n              ) : null}\n            </div>\n          </div>\n          {this._renderItems()}\n        </div>\n        <DialogActions className={actionsWrapperClass}>\n          <input\n            className={classes(buttonClass, cancelButtonClass)}\n            type=\"button\"\n            title={this.props.trans.__(\n              'Close this dialog without creating a new branch'\n            )}\n            value={this.props.trans.__('Cancel')}\n            onClick={this._onClose}\n          />\n          <input\n            className={classes(buttonClass, createButtonClass)}\n            type=\"button\"\n            title={this.props.trans.__('Create a new branch')}\n            value={this.props.trans.__('Create Branch')}\n            onClick={() => {\n              this._createBranch();\n            }}\n            disabled={this.state.name === '' || this.state.error !== ''}\n          />\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  /**\n   * Renders branch menu items.\n   *\n   * @returns array of React elements\n   */\n  private _renderItems(): JSX.Element {\n    const current = this.props.currentBranch;\n    // Perform a \"simple\" filter... (TODO: consider implementing fuzzy filtering)\n    const filter = this.state.filter;\n    const branches = this.props.branches\n      .filter(branch => !filter || branch.name.includes(filter))\n      .slice()\n      .sort(comparator);\n    return (\n      <VariableSizeList\n        className={listWrapperClass}\n        height={HEIGHT}\n        estimatedItemSize={ITEM_HEIGHT}\n        itemCount={branches.length}\n        itemData={branches}\n        itemKey={(index, data) => data[index].name}\n        itemSize={index => {\n          const branch = branches[index];\n          return [this.props.currentBranch, 'master', 'main'].includes(\n            branch.name\n          )\n            ? CURRENT_BRANCH_HEIGHT\n            : ITEM_HEIGHT;\n        }}\n        ref={this._branchList}\n        style={{ overflowX: 'hidden' }}\n        width={'auto'}\n      >\n        {this._renderItem}\n      </VariableSizeList>\n    );\n\n    /**\n     * Comparator function for sorting branches.\n     *\n     * @private\n     * @param a - first branch\n     * @param b - second branch\n     * @returns integer indicating sort order\n     */\n    function comparator(a: Git.IBranch, b: Git.IBranch): number {\n      if (a.name === current) {\n        return -1;\n      } else if (b.name === current) {\n        return 1;\n      }\n      if (a.name === 'master') {\n        return -1;\n      } else if (b.name === 'master') {\n        return 1;\n      }\n      if (a.name === 'main') {\n        return -1;\n      } else if (b.name === 'main') {\n        return 1;\n      }\n      return 0;\n    }\n  }\n\n  /**\n   * Renders a branch menu item.\n   *\n   * @param props Row properties\n   * @returns React element\n   */\n  private _renderItem = (props: ListChildComponentProps): JSX.Element => {\n    const { data, index, style } = props;\n    const branch = data[index] as Git.IBranch;\n\n    const isBase = branch.name === this.state.base;\n    const isCurrent = branch.name === this.props.currentBranch;\n\n    let isBold;\n    let desc;\n    if (isCurrent) {\n      isBold = true;\n      desc = this.props.trans.__(\n        'The current branch. Pick this if you want to build on work done in this branch.'\n      );\n    } else if (['master', 'main'].includes(branch.name)) {\n      isBold = true;\n      desc = this.props.trans.__(\n        'The default branch. Pick this if you want to start fresh from the default branch.'\n      );\n    }\n\n    return (\n      <ListItem\n        button\n        title={this.props.trans.__(\n          'Create a new branch based on: %1',\n          branch.name\n        )}\n        className={classes(listItemClass, isBase ? activeListItemClass : null)}\n        onClick={this._onBranchClickFactory(branch.name)}\n        style={style}\n      >\n        <branchIcon.react className={listItemIconClass} tag=\"span\" />\n        <div className={listItemContentClass}>\n          <p\n            className={classes(\n              listItemTitleClass,\n              isBold ? listItemBoldTitleClass : null\n            )}\n          >\n            {branch.name}\n          </p>\n          {desc ? (\n            <p className={listItemDescClass}>{this.props.trans.__(desc)}</p>\n          ) : null}\n        </div>\n      </ListItem>\n    );\n  };\n\n  /**\n   * Callback invoked upon closing the dialog.\n   *\n   * @param event - event object\n   */\n  private _onClose = (): void => {\n    this.props.onClose();\n    this.setState({\n      name: '',\n      filter: '',\n      error: ''\n    });\n  };\n\n  /**\n   * Callback invoked upon a change to the menu filter.\n   *\n   * @param event - event object\n   */\n  private _onFilterChange = (event: any): void => {\n    this._branchList.current.resetAfterIndex(0);\n    this.setState({\n      filter: event.target.value\n    });\n  };\n\n  /**\n   * Callback invoked to reset the menu filter.\n   */\n  private _resetFilter = (): void => {\n    this._branchList.current.resetAfterIndex(0);\n    this.setState({\n      filter: ''\n    });\n  };\n\n  /**\n   * Returns a callback which is invoked upon clicking a branch name.\n   *\n   * @param branch - branch name\n   * @returns callback\n   */\n  private _onBranchClickFactory(branch: string) {\n    const self = this;\n    return onClick;\n\n    /**\n     * Callback invoked upon clicking a branch name.\n     *\n     * @private\n     * @param event - event object\n     */\n    function onClick(): void {\n      self.setState({\n        base: branch\n      });\n    }\n  }\n\n  /**\n   * Callback invoked upon a change to the branch name input element.\n   *\n   * @param event - event object\n   */\n  private _onNameChange = (event: any): void => {\n    this.setState({\n      name: event.target.value,\n      error: ''\n    });\n  };\n\n  /**\n   * Creates a new branch.\n   *\n   * @param branch - branch name\n   * @returns promise which resolves upon attempting to create a new branch\n   */\n  private async _createBranch(): Promise<void> {\n    const opts = {\n      newBranch: true,\n      branchname: this.state.name,\n      startpoint: this.state.base\n    };\n\n    this.props.logger.log({\n      level: Level.RUNNING,\n      message: this.props.trans.__('Creating branch…')\n    });\n    try {\n      await this.props.model.checkout(opts);\n    } catch (err) {\n      this.setState({\n        error: err.message.replace(/^fatal:/, '')\n      });\n      this.props.logger.log({\n        level: Level.ERROR,\n        message: this.props.trans.__('Failed to create branch.')\n      });\n      return;\n    }\n\n    this.props.logger.log({\n      level: Level.SUCCESS,\n      message: this.props.trans.__('Branch created.')\n    });\n    // Close the branch dialog:\n    this.props.onClose();\n\n    // Reset the branch name and filter:\n    this._branchList.current.resetAfterIndex(0);\n    this.setState({\n      name: '',\n      filter: ''\n    });\n  }\n\n  private _branchList: React.RefObject<VariableSizeList>;\n}\n"]}