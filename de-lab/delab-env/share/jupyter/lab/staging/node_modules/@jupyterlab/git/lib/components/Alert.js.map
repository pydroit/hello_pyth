{"version":3,"file":"Alert.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/Alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TranslationBundle } from '@jupyterlab/translation';\nimport { Dialog, showDialog, showErrorMessage } from '@jupyterlab/apputils';\nimport { Button } from '@material-ui/core';\nimport Portal from '@material-ui/core/Portal';\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Color, default as MuiAlert } from '@material-ui/lab/Alert';\nimport * as React from 'react';\n\n/**\n * Returns a React component for \"sliding-in\" an alert.\n *\n * @private\n * @param props - component properties\n * @returns React element\n */\nfunction SlideTransition(props: any): React.ReactElement {\n  return <Slide {...props} direction=\"up\" />;\n}\n\n/**\n * Interface describing component properties.\n */\nexport interface IAlertProps {\n  /**\n   * Detailed message\n   */\n  details?: string;\n\n  /**\n   * Alert duration (in milliseconds).\n   */\n  duration?: number;\n\n  /**\n   * Error object\n   */\n  error?: Error;\n\n  /**\n   * Alert message.\n   */\n  message: string;\n\n  /**\n   * Boolean indicating whether to display an alert.\n   */\n  open: boolean;\n\n  /**\n   * Callback invoked upon clicking on an alert.\n   */\n  onClick?: (event?: any) => void;\n\n  /**\n   * Callback invoked upon closing an alert.\n   */\n  onClose: (event?: any) => void;\n\n  /**\n   * Alert severity.\n   */\n  severity?: Color;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n}\n\n/**\n * React component for rendering an alert.\n */\nexport class Alert extends React.Component<IAlertProps> {\n  /**\n   * Returns a React component for rendering an alert.\n   *\n   * @param props - component properties\n   * @returns React component\n   */\n  constructor(props: IAlertProps) {\n    super(props);\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns React element\n   */\n  render(): React.ReactElement {\n    let duration: number | null = null;\n\n    const severity = this.props.severity || 'info';\n    if (severity === 'success') {\n      duration = this.props.duration || 5000; // milliseconds\n    }\n\n    let action: React.ReactNode;\n    if (this.props.error) {\n      action = (\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          onClick={() => {\n            showErrorMessage(this.props.trans.__('Error'), this.props.error, [\n              Dialog.warnButton({ label: this.props.trans.__('Dismiss') })\n            ]);\n          }}\n        >\n          {this.props.trans.__('Show')}\n        </Button>\n      );\n    } else if (this.props.details) {\n      action = (\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          onClick={() => {\n            showDialog({\n              title: this.props.trans.__('Detailed message'),\n              body: this.props.details,\n              buttons: [\n                Dialog.okButton({ label: this.props.trans.__('Dismiss') })\n              ]\n            });\n          }}\n        >\n          {this.props.trans.__('Details')}\n        </Button>\n      );\n    }\n\n    return (\n      <Portal>\n        <Snackbar\n          key=\"git:alert\"\n          open={this.props.open}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          autoHideDuration={duration}\n          TransitionComponent={SlideTransition}\n          onClick={this._onClick}\n          onClose={this._onClose}\n        >\n          <MuiAlert action={action} variant=\"filled\" severity={severity}>\n            {this.props.message || this.props.trans.__('(missing message)')}\n          </MuiAlert>\n        </Snackbar>\n      </Portal>\n    );\n  }\n\n  /**\n   * Callback invoked upon clicking on an alert.\n   *\n   * @param event - event object\n   */\n  private _onClick = (event: any): void => {\n    if (this.props.onClick) {\n      this.props.onClick(event);\n      return;\n    }\n    this._onClose(event, 'click');\n  };\n\n  /**\n   * Callback invoked upon closing an alert.\n   *\n   * @param event - event object\n   * @param reason - reason why the callback was invoked\n   */\n  private _onClose = (event: any, reason: string): void => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.props.onClose(event);\n  };\n}\n"]}