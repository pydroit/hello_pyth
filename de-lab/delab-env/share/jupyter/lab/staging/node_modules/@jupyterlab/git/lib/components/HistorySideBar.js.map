{"version":3,"file":"HistorySideBar.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/HistorySideBar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TranslationBundle } from '@jupyterlab/translation';\nimport { closeIcon } from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport * as React from 'react';\nimport { GitExtension } from '../model';\nimport { hiddenButtonStyle } from '../style/ActionButtonStyle';\nimport {\n  historySideBarStyle,\n  noHistoryFoundStyle,\n  selectedHistoryFileStyle,\n  historySideBarWrapperStyle\n} from '../style/HistorySideBarStyle';\nimport { Git } from '../tokens';\nimport { openFileDiff } from '../utils';\nimport { ActionButton } from './ActionButton';\nimport { FileItem } from './FileItem';\nimport { PastCommitNode } from './PastCommitNode';\nimport { SinglePastCommitInfo } from './SinglePastCommitInfo';\nimport { GitCommitGraph } from './GitCommitGraph';\n\n/**\n * Interface describing component properties.\n */\nexport interface IHistorySideBarProps {\n  /**\n   * List of commits.\n   */\n  commits: Git.ISingleCommitInfo[];\n\n  /**\n   * List of branches.\n   */\n  branches: Git.IBranch[];\n\n  /**\n   * Git extension data model.\n   */\n  model: GitExtension;\n\n  /**\n   * Jupyter App commands registry\n   */\n  commands: CommandRegistry;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n\n  /**\n   * The commit to compare against.\n   */\n  referenceCommit: Git.ISingleCommitInfo | null;\n\n  /**\n   * The commit to compare.\n   */\n  challengerCommit: Git.ISingleCommitInfo | null;\n\n  /**\n   * Callback invoked upon clicking to select a commit for comparison.\n   * @param event - event object\n   */\n  onSelectForCompare?: (\n    commit: Git.ISingleCommitInfo\n  ) => (event: React.MouseEvent<HTMLElement, MouseEvent>) => Promise<void>;\n\n  /**\n   * Callback invoked upon clicking to compare a commit against the selected.\n   * @param event - event object\n   */\n  onCompareWithSelected?: (\n    commit: Git.ISingleCommitInfo\n  ) => (event: React.MouseEvent<HTMLElement, MouseEvent>) => Promise<void>;\n}\n\n/**\n * Returns a React component for displaying commit history.\n *\n * @param props - component properties\n * @returns React element\n */\nexport const HistorySideBar: React.FunctionComponent<IHistorySideBarProps> = (\n  props: IHistorySideBarProps\n): React.ReactElement => {\n  /**\n   * Discards the selected file and shows the full history.\n   */\n  const removeSelectedFile = () => {\n    props.model.selectedHistoryFile = null;\n  };\n\n  /**\n   * Commit info for 'Uncommitted Changes' history.\n   */\n  const uncommitted = React.useMemo<Git.ISingleCommitInfo>(() => {\n    return {\n      author: props.trans.__('You'),\n      commit: `${\n        props.model.selectedHistoryFile?.status === 'staged'\n          ? Git.Diff.SpecialRef.INDEX\n          : Git.Diff.SpecialRef.WORKING\n      }`,\n      pre_commits: ['HEAD'],\n      is_binary: props.commits[0]?.is_binary ?? false,\n      commit_msg: props.trans.__('Uncommitted Changes'),\n      date: props.trans.__('now')\n    };\n  }, [props.model.selectedHistoryFile]);\n\n  const commits =\n    props.model.selectedHistoryFile &&\n    props.model.selectedHistoryFile?.status !== 'unmodified'\n      ? [uncommitted, ...props.commits]\n      : props.commits;\n\n  const [expandedCommits, setExpandedCommits] = React.useState<string[]>([]);\n  const [nodeHeights, setNodeHeights] = React.useState<{\n    [sha: string]: number;\n  }>({});\n  const nodes = React.useRef<{ [sha: string]: HTMLLIElement }>({});\n\n  React.useEffect(() => {\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const borderBoxSize = Array.isArray(entry.borderBoxSize)\n          ? entry.borderBoxSize[0]\n          : entry.borderBoxSize;\n        const offsetHeight = borderBoxSize.blockSize;\n        const sha = entry.target.id;\n        setNodeHeights(prev => ({ ...prev, [sha]: offsetHeight }));\n      }\n    });\n\n    props.commits.forEach(commit =>\n      resizeObserver.observe(nodes.current[commit.commit], {\n        box: 'border-box'\n      })\n    );\n    return () => resizeObserver.disconnect();\n  }, [props.commits]);\n\n  return (\n    <div className={historySideBarWrapperStyle}>\n      {!props.model.selectedHistoryFile && (\n        <GitCommitGraph\n          commits={props.commits.map(commit => ({\n            sha: commit.commit,\n            parents: commit.pre_commits\n          }))}\n          getNodeHeight={(sha: string) => nodeHeights[sha] ?? 55}\n        />\n      )}\n\n      <ol className={historySideBarStyle}>\n        {!!props.model.selectedHistoryFile && (\n          <FileItem\n            className={selectedHistoryFileStyle}\n            model={props.model}\n            trans={props.trans}\n            actions={\n              <ActionButton\n                className={hiddenButtonStyle}\n                icon={closeIcon}\n                title={props.trans.__('Discard file history')}\n                onClick={removeSelectedFile}\n              />\n            }\n            file={props.model.selectedHistoryFile}\n            onDoubleClick={removeSelectedFile}\n          />\n        )}\n        {commits.length ? (\n          commits.map((commit: Git.ISingleCommitInfo) => {\n            const commonProps = {\n              commit,\n              branches: props.branches,\n              model: props.model,\n              commands: props.commands,\n              trans: props.trans\n            };\n\n            // Only pass down callback when single file history is open\n            // and its diff is viewable\n            const onOpenDiff =\n              props.model.selectedHistoryFile && !commit.is_binary\n                ? openFileDiff(props.commands)(commit)(\n                    commit.file_path ?? props.model.selectedHistoryFile.to,\n                    !commit.is_binary,\n                    commit.previous_file_path\n                  )\n                : undefined;\n\n            const isReferenceCommit =\n              commit.commit === props.referenceCommit?.commit;\n            const isChallengerCommit =\n              commit.commit === props.challengerCommit?.commit;\n\n            return (\n              <PastCommitNode\n                key={commit.commit}\n                setRef={node => {\n                  nodes.current[commit.commit] = node;\n                }}\n                {...commonProps}\n                isReferenceCommit={isReferenceCommit}\n                isChallengerCommit={isChallengerCommit}\n                onOpenDiff={onOpenDiff}\n                onSelectForCompare={\n                  isChallengerCommit ? null : props.onSelectForCompare(commit)\n                }\n                onCompareWithSelected={\n                  isReferenceCommit || props.referenceCommit === null\n                    ? null\n                    : props.onCompareWithSelected(commit)\n                }\n                expanded={expandedCommits.includes(commit.commit)}\n                toggleCommitExpansion={sha =>\n                  setExpandedCommits(prevExpandedCommits => {\n                    if (prevExpandedCommits.includes(sha)) {\n                      return prevExpandedCommits.filter(\n                        commit => commit !== sha\n                      );\n                    } else {\n                      return [...prevExpandedCommits, sha];\n                    }\n                  })\n                }\n              >\n                {!props.model.selectedHistoryFile && (\n                  <SinglePastCommitInfo\n                    {...commonProps}\n                    onOpenDiff={openFileDiff(props.commands)(commit)}\n                  />\n                )}\n              </PastCommitNode>\n            );\n          })\n        ) : (\n          <li className={noHistoryFoundStyle}>\n            {props.trans.__('No history found.')}\n          </li>\n        )}\n      </ol>\n    </div>\n  );\n};\n"]}