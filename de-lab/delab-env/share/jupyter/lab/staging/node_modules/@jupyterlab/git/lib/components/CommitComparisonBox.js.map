{"version":3,"file":"CommitComparisonBox.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/CommitComparisonBox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TranslationBundle } from '@jupyterlab/translation';\nimport {\n  caretDownIcon,\n  caretRightIcon,\n  closeIcon\n} from '@jupyterlab/ui-components';\nimport { CommandRegistry } from '@lumino/commands';\nimport * as React from 'react';\nimport { Logger } from '../logger';\nimport {\n  commitComparisonBoxStyle,\n  commitComparisonDiffStyle\n} from '../style/CommitComparisonBox';\nimport {\n  changeStageButtonStyle,\n  sectionAreaStyle,\n  sectionHeaderLabelStyle\n} from '../style/GitStageStyle';\nimport { Git, IGitExtension, Level } from '../tokens';\nimport { ActionButton } from './ActionButton';\nimport { CommitDiff } from './CommitDiff';\n\n/**\n * Interface describing ComparisonBox component properties.\n */\nexport interface ICommitComparisonBoxProps {\n  /**\n   * Jupyter App commands registry.\n   */\n  commands: CommandRegistry;\n\n  /**\n   * The commit to compare against.\n   */\n  referenceCommit: Git.ISingleCommitInfo | null;\n\n  /**\n   * The commit to compare.\n   */\n  challengerCommit: Git.ISingleCommitInfo | null;\n\n  /**\n   * Header text.\n   */\n  header: string;\n\n  /**\n   * Extension logger\n   */\n  logger: Logger;\n\n  /**\n   * Extension data model.\n   */\n  model: IGitExtension;\n\n  /**\n   * The application language translator.\n   */\n  trans: TranslationBundle;\n\n  /**\n   * Returns a callback to be invoked on close.\n   */\n  onClose: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n\n  /**\n   * Returns a callback to be invoked on click to display a file diff.\n   *\n   * @param filePath file path\n   * @param isText indicates whether the file supports displaying a diff\n   * @param previousFilePath when file has been relocated\n   * @returns callback\n   */\n  onOpenDiff?: (\n    filePath: string,\n    isText: boolean,\n    previousFilePath?: string\n  ) => (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n}\n\n/**\n * A component which displays a comparison between two commits.\n */\nexport function CommitComparisonBox(\n  props: ICommitComparisonBoxProps\n): JSX.Element {\n  const [collapsed, setCollapsed] = React.useState<boolean>(false);\n  const [files, setFiles] = React.useState<Git.ICommitModifiedFile[]>([]);\n\n  const { referenceCommit, challengerCommit, model } = props;\n  const hasDiff = referenceCommit !== null && challengerCommit !== null;\n  const totalInsertions = files.reduce((acc, file) => {\n    const insertions = Number.parseInt(file.insertion, 10);\n    return acc + (Number.isNaN(insertions) ? 0 : insertions);\n  }, 0);\n  const totalDeletions = files.reduce((acc, file) => {\n    const deletions = Number.parseInt(file.deletion, 10);\n    return acc + (Number.isNaN(deletions) ? 0 : deletions);\n  }, 0);\n\n  React.useEffect(() => {\n    (async () => {\n      if (referenceCommit === null || challengerCommit === null) {\n        setFiles([]);\n        return;\n      }\n\n      let diffResult: Git.IDiffResult = null;\n      try {\n        diffResult = await model.diff(\n          referenceCommit.commit,\n          challengerCommit.commit\n        );\n        if (diffResult.code !== 0) {\n          throw new Error(diffResult.message);\n        }\n      } catch (err) {\n        const msg = `Failed to get the diff for ${referenceCommit.commit} and ${challengerCommit.commit}.`;\n        console.error(msg, err);\n        props.logger.log({\n          level: Level.ERROR,\n          message: msg,\n          error: err\n        });\n        return;\n      }\n      if (diffResult) {\n        setFiles(\n          diffResult.result.map(changedFile => {\n            const pathParts = changedFile.filename.split('/');\n            const fileName = pathParts[pathParts.length - 1];\n            const filePath = changedFile.filename;\n            return {\n              deletion: changedFile.deletions,\n              insertion: changedFile.insertions,\n              is_binary:\n                changedFile.deletions === '-' || changedFile.insertions === '-',\n              modified_file_name: fileName,\n              modified_file_path: filePath,\n              type: changedFile.filetype\n            } as Git.ICommitModifiedFile;\n          })\n        );\n      } else {\n        setFiles([]);\n      }\n    })();\n  }, [referenceCommit, challengerCommit]);\n\n  return (\n    <div className={commitComparisonBoxStyle}>\n      <div\n        className={sectionAreaStyle}\n        onClick={() => setCollapsed(!collapsed)}\n      >\n        <button className={changeStageButtonStyle}>\n          {collapsed ? <caretRightIcon.react /> : <caretDownIcon.react />}\n        </button>\n\n        <span className={sectionHeaderLabelStyle}>{props.header}</span>\n        <ActionButton\n          title={props.trans.__('Close')}\n          icon={closeIcon}\n          onClick={(event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n            props.onClose(event);\n          }}\n        ></ActionButton>\n      </div>\n      {!collapsed &&\n        (files.length ? (\n          <CommitDiff\n            className={commitComparisonDiffStyle}\n            deletions={`${totalDeletions}`}\n            files={files}\n            insertions={`${totalInsertions}`}\n            numFiles={`${files.length}`}\n            onOpenDiff={props.onOpenDiff}\n            trans={props.trans}\n          ></CommitDiff>\n        ) : (\n          <p>\n            {hasDiff\n              ? props.trans.__('No changes')\n              : props.trans.__('No challenger commit selected.')}\n          </p>\n        ))}\n    </div>\n  );\n}\n"]}