{"version":3,"file":"GitStage.js","sourceRoot":"./@jupyterlab/git/src/","sources":["components/GitStage.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC1E,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAA2B,MAAM,cAAc,CAAC;AACtE,OAAO,EACL,sBAAsB,EACtB,gBAAgB,EAChB,yBAAyB,EACzB,uBAAuB,EACvB,sBAAsB,EACvB,MAAM,wBAAwB,CAAC;AAGhC,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,WAAW,GAAG,EAAE,CAAC;AAoCvB,MAAM,CAAC,MAAM,QAAQ,GAA4C,CAC/D,KAAqB,EACrB,EAAE;IACF,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;IAElC,OAAO,CACL,6BAAK,SAAS,EAAE,yBAAyB;QACvC,6BACE,SAAS,EAAE,gBAAgB,EAC3B,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,KAAK,CAAC,WAAW,IAAI,MAAM,GAAG,CAAC,EAAE;oBACnC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC;iBAC1B;YACH,CAAC;YAEA,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,eAAe;YAC9C,KAAK,CAAC,WAAW,IAAI,CACpB,gCAAQ,SAAS,EAAE,sBAAsB,IACtC,SAAS,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CACzB,oBAAC,aAAa,CAAC,KAAK,OAAG,CACxB,CAAC,CAAC,CAAC,CACF,oBAAC,cAAc,CAAC,KAAK,OAAG,CACzB,CACM,CACV;YACD,8BAAM,SAAS,EAAE,uBAAuB,IAAG,KAAK,CAAC,OAAO,CAAQ;YAC/D,KAAK,CAAC,OAAO;YACd,8BAAM,SAAS,EAAE,sBAAsB;;gBAAI,MAAM;oBAAS,CACtD;QACL,SAAS,IAAI,MAAM,GAAG,CAAC,IAAI,CAC1B,oBAAC,aAAa,IACZ,MAAM,EAAE,IAAI,CAAC,GAAG,CACd,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,EAAE,MAAM,GAAG,WAAW,CAAC,EAC5D,WAAW,CACZ,EACD,SAAS,EAAE,MAAM,EACjB,QAAQ,EAAE,KAAK,CAAC,KAAK,EACrB,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EACxC,QAAQ,EAAE,WAAW,EACrB,KAAK,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,EAC9B,KAAK,EAAE,MAAM,IAEZ,KAAK,CAAC,WAAW,CACJ,CACjB,CACG,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { caretDownIcon, caretRightIcon } from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport {\n  changeStageButtonStyle,\n  sectionAreaStyle,\n  sectionFileContainerStyle,\n  sectionHeaderLabelStyle,\n  sectionHeaderSizeStyle\n} from '../style/GitStageStyle';\nimport { Git } from '../tokens';\n\nconst HEADER_HEIGHT = 34;\nconst ITEM_HEIGHT = 25;\n\n/**\n * Git stage component properties\n */\nexport interface IGitStageProps {\n  /**\n   * Actions component to display at the far right of the stage\n   */\n  actions?: React.ReactElement;\n  /**\n   * Is this group collapsible\n   */\n  collapsible?: boolean;\n  /**\n   * Files in the group\n   */\n  files: Git.IStatusFile[];\n  /**\n   * Group title\n   */\n  heading: string;\n  /**\n   * HTML element height\n   */\n  height: number;\n  /**\n   * Row renderer\n   */\n  rowRenderer: (props: ListChildComponentProps) => JSX.Element;\n  /**\n   * Optional select all element\n   */\n  selectAllButton?: React.ReactElement;\n}\n\nexport const GitStage: React.FunctionComponent<IGitStageProps> = (\n  props: IGitStageProps\n) => {\n  const [showFiles, setShowFiles] = React.useState(true);\n  const nFiles = props.files.length;\n\n  return (\n    <div className={sectionFileContainerStyle}>\n      <div\n        className={sectionAreaStyle}\n        onClick={() => {\n          if (props.collapsible && nFiles > 0) {\n            setShowFiles(!showFiles);\n          }\n        }}\n      >\n        {props.selectAllButton && props.selectAllButton}\n        {props.collapsible && (\n          <button className={changeStageButtonStyle}>\n            {showFiles && nFiles > 0 ? (\n              <caretDownIcon.react />\n            ) : (\n              <caretRightIcon.react />\n            )}\n          </button>\n        )}\n        <span className={sectionHeaderLabelStyle}>{props.heading}</span>\n        {props.actions}\n        <span className={sectionHeaderSizeStyle}>({nFiles})</span>\n      </div>\n      {showFiles && nFiles > 0 && (\n        <FixedSizeList\n          height={Math.max(\n            Math.min(props.height - HEADER_HEIGHT, nFiles * ITEM_HEIGHT),\n            ITEM_HEIGHT\n          )}\n          itemCount={nFiles}\n          itemData={props.files}\n          itemKey={(index, data) => data[index].to}\n          itemSize={ITEM_HEIGHT}\n          style={{ overflowX: 'hidden' }}\n          width={'auto'}\n        >\n          {props.rowRenderer}\n        </FixedSizeList>\n      )}\n    </div>\n  );\n};\n"]}